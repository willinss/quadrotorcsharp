###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.40.1.53790/W32 for ARM     03/Aug/2015  09:48:10 #
# Copyright 1999-2012 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  C:\Users\Thinkpad\Desktop\quadrotor150720飞行器跟随小车( #
#                    改I2C)\src\Sources\C\Component_C\ftm.c                   #
#    Command line =  "C:\Users\Thinkpad\Desktop\quadrotor150720飞行器跟随小车 #
#                    (改I2C)\src\Sources\C\Component_C\ftm.c" -D IAR -D       #
#                    TWR_K60N512 -lCN "C:\Users\Thinkpad\Desktop\quadrotor150 #
#                    720飞行器跟随小车(改I2C)\bin\Flash\List\" -lB            #
#                    "C:\Users\Thinkpad\Desktop\quadrotor150720飞行器跟随小车 #
#                    (改I2C)\bin\Flash\List\" -o                              #
#                    "C:\Users\Thinkpad\Desktop\quadrotor150720飞行器跟随小车 #
#                    (改I2C)\bin\Flash\Obj\" --no_cse --no_unroll             #
#                    --no_inline --no_code_motion --no_tbaa --no_clustering   #
#                    --no_scheduling --debug --endian=little --cpu=Cortex-M4  #
#                    -e --fpu=None --dlib_config "E:\Program Files\IAR        #
#                    Systems\Embedded Workbench 6.4\arm\INC\c\DLib_Config_Nor #
#                    mal.h" -I "C:\Users\Thinkpad\Desktop\quadrotor150720飞行 #
#                    器跟随小车(改I2C)\src\Sources\H\" -I                     #
#                    "C:\Users\Thinkpad\Desktop\quadrotor150720飞行器跟随小车 #
#                    (改I2C)\src\Sources\H\Component_H\" -I                   #
#                    "C:\Users\Thinkpad\Desktop\quadrotor150720飞行器跟随小车 #
#                    (改I2C)\src\Sources\H\Frame_H\" -Ol --use_c++_inline     #
#    List file    =  C:\Users\Thinkpad\Desktop\quadrotor150720飞行器跟随小车( #
#                    改I2C)\bin\Flash\List\ftm.lst                            #
#    Object file  =  C:\Users\Thinkpad\Desktop\quadrotor150720飞行器跟随小车( #
#                    改I2C)\bin\Flash\Obj\ftm.o                               #
#                                                                             #
#                                                                             #
###############################################################################

C:\Users\Thinkpad\Desktop\quadrotor150720飞行器跟随小车(改I2C)\src\Sources\C\Component_C\ftm.c
      1          #include "ftm.h"
      2          #include "sysinit.h"	
      3          

   \                                 In section .text, align 2, keep-with-next
      4          void hw_FTM_init(void)
      5              { PORTA_PCR12 = PORT_PCR_MUX(3); 
   \                     hw_FTM_init:
   \   00000000   0x.... 0x....      LDR.W    R0,??DataTable4  ;; 0x40049030
   \   00000004   0xF44F 0x7140      MOV      R1,#+768
   \   00000008   0x6001             STR      R1,[R0, #+0]
      6                PORTA_PCR13 = PORT_PCR_MUX(3);
   \   0000000A   0x.... 0x....      LDR.W    R0,??DataTable4_1  ;; 0x40049034
   \   0000000E   0xF44F 0x7140      MOV      R1,#+768
   \   00000012   0x6001             STR      R1,[R0, #+0]
      7                PORTB_PCR18 = PORT_PCR_MUX(3); 
   \   00000014   0x.... 0x....      LDR.W    R0,??DataTable4_2  ;; 0x4004a048
   \   00000018   0xF44F 0x7140      MOV      R1,#+768
   \   0000001C   0x6001             STR      R1,[R0, #+0]
      8                PORTB_PCR19 = PORT_PCR_MUX(3);
   \   0000001E   0x.... 0x....      LDR.W    R0,??DataTable4_3  ;; 0x4004a04c
   \   00000022   0xF44F 0x7140      MOV      R1,#+768
   \   00000026   0x6001             STR      R1,[R0, #+0]
      9                
     10                SIM_SCGC5 |= SIM_SCGC5_PORTA_MASK;
   \   00000028   0x.... 0x....      LDR.W    R0,??DataTable4_4  ;; 0x40048038
   \   0000002C   0x6800             LDR      R0,[R0, #+0]
   \   0000002E   0xF450 0x7000      ORRS     R0,R0,#0x200
   \   00000032   0x.... 0x....      LDR.W    R1,??DataTable4_4  ;; 0x40048038
   \   00000036   0x6008             STR      R0,[R1, #+0]
     11                SIM_SCGC6|=SIM_SCGC6_FTM1_MASK;         //使能FTM时钟      
   \   00000038   0x.... 0x....      LDR.W    R0,??DataTable4_5  ;; 0x4004803c
   \   0000003C   0x6800             LDR      R0,[R0, #+0]
   \   0000003E   0xF050 0x7000      ORRS     R0,R0,#0x2000000
   \   00000042   0x.... 0x....      LDR.W    R1,??DataTable4_5  ;; 0x4004803c
   \   00000046   0x6008             STR      R0,[R1, #+0]
     12                SIM_SCGC3|=SIM_SCGC3_FTM2_MASK;
   \   00000048   0x.... 0x....      LDR.W    R0,??DataTable4_6  ;; 0x40048030
   \   0000004C   0x6800             LDR      R0,[R0, #+0]
   \   0000004E   0xF050 0x7080      ORRS     R0,R0,#0x1000000
   \   00000052   0x.... 0x....      LDR.W    R1,??DataTable4_6  ;; 0x40048030
   \   00000056   0x6008             STR      R0,[R1, #+0]
     13                
     14                FTM1_C0SC |= FTM_CnSC_ELSB_MASK;
   \   00000058   0x.... 0x....      LDR.W    R0,??DataTable4_7  ;; 0x4003900c
   \   0000005C   0x6800             LDR      R0,[R0, #+0]
   \   0000005E   0xF050 0x0008      ORRS     R0,R0,#0x8
   \   00000062   0x.... 0x....      LDR.W    R1,??DataTable4_7  ;; 0x4003900c
   \   00000066   0x6008             STR      R0,[R1, #+0]
     15                FTM1_C0SC &= ~FTM_CnSC_ELSA_MASK;
   \   00000068   0x.... 0x....      LDR.W    R0,??DataTable4_7  ;; 0x4003900c
   \   0000006C   0x6800             LDR      R0,[R0, #+0]
   \   0000006E   0xF030 0x0004      BICS     R0,R0,#0x4
   \   00000072   0x.... 0x....      LDR.W    R1,??DataTable4_7  ;; 0x4003900c
   \   00000076   0x6008             STR      R0,[R1, #+0]
     16                FTM1_C0SC |= FTM_CnSC_MSB_MASK;   
   \   00000078   0x.... 0x....      LDR.W    R0,??DataTable4_7  ;; 0x4003900c
   \   0000007C   0x6800             LDR      R0,[R0, #+0]
   \   0000007E   0xF050 0x0020      ORRS     R0,R0,#0x20
   \   00000082   0x.... 0x....      LDR.W    R1,??DataTable4_7  ;; 0x4003900c
   \   00000086   0x6008             STR      R0,[R1, #+0]
     17                FTM1_C1SC |= FTM_CnSC_ELSB_MASK;
   \   00000088   0x.... 0x....      LDR.W    R0,??DataTable4_8  ;; 0x40039014
   \   0000008C   0x6800             LDR      R0,[R0, #+0]
   \   0000008E   0xF050 0x0008      ORRS     R0,R0,#0x8
   \   00000092   0x.... 0x....      LDR.W    R1,??DataTable4_8  ;; 0x40039014
   \   00000096   0x6008             STR      R0,[R1, #+0]
     18                FTM1_C1SC &= ~FTM_CnSC_ELSA_MASK;
   \   00000098   0x.... 0x....      LDR.W    R0,??DataTable4_8  ;; 0x40039014
   \   0000009C   0x6800             LDR      R0,[R0, #+0]
   \   0000009E   0xF030 0x0004      BICS     R0,R0,#0x4
   \   000000A2   0x.... 0x....      LDR.W    R1,??DataTable4_8  ;; 0x40039014
   \   000000A6   0x6008             STR      R0,[R1, #+0]
     19                FTM1_C1SC |= FTM_CnSC_MSB_MASK;  
   \   000000A8   0x.... 0x....      LDR.W    R0,??DataTable4_8  ;; 0x40039014
   \   000000AC   0x6800             LDR      R0,[R0, #+0]
   \   000000AE   0xF050 0x0020      ORRS     R0,R0,#0x20
   \   000000B2   0x.... 0x....      LDR.W    R1,??DataTable4_8  ;; 0x40039014
   \   000000B6   0x6008             STR      R0,[R1, #+0]
     20                FTM1_SC = 0x2C; //not enable the interrupt mask,up-down counting mode,System clock,Divide by 32  16          
   \   000000B8   0x.... 0x....      LDR.W    R0,??DataTable4_9  ;; 0x40039000
   \   000000BC   0x212C             MOVS     R1,#+44
   \   000000BE   0x6001             STR      R1,[R0, #+0]
     21                
     22                FTM2_C0SC |= FTM_CnSC_ELSB_MASK;
   \   000000C0   0x.... 0x....      LDR.W    R0,??DataTable4_10  ;; 0x400b800c
   \   000000C4   0x6800             LDR      R0,[R0, #+0]
   \   000000C6   0xF050 0x0008      ORRS     R0,R0,#0x8
   \   000000CA   0x.... 0x....      LDR.W    R1,??DataTable4_10  ;; 0x400b800c
   \   000000CE   0x6008             STR      R0,[R1, #+0]
     23                FTM2_C0SC &= ~FTM_CnSC_ELSA_MASK;
   \   000000D0   0x.... 0x....      LDR.W    R0,??DataTable4_10  ;; 0x400b800c
   \   000000D4   0x6800             LDR      R0,[R0, #+0]
   \   000000D6   0xF030 0x0004      BICS     R0,R0,#0x4
   \   000000DA   0x.... 0x....      LDR.W    R1,??DataTable4_10  ;; 0x400b800c
   \   000000DE   0x6008             STR      R0,[R1, #+0]
     24                FTM2_C0SC |= FTM_CnSC_MSB_MASK;   
   \   000000E0   0x.... 0x....      LDR.W    R0,??DataTable4_10  ;; 0x400b800c
   \   000000E4   0x6800             LDR      R0,[R0, #+0]
   \   000000E6   0xF050 0x0020      ORRS     R0,R0,#0x20
   \   000000EA   0x.... 0x....      LDR.W    R1,??DataTable4_10  ;; 0x400b800c
   \   000000EE   0x6008             STR      R0,[R1, #+0]
     25                FTM2_C1SC |= FTM_CnSC_ELSB_MASK;
   \   000000F0   0x.... 0x....      LDR.W    R0,??DataTable4_11  ;; 0x400b8014
   \   000000F4   0x6800             LDR      R0,[R0, #+0]
   \   000000F6   0xF050 0x0008      ORRS     R0,R0,#0x8
   \   000000FA   0x.... 0x....      LDR.W    R1,??DataTable4_11  ;; 0x400b8014
   \   000000FE   0x6008             STR      R0,[R1, #+0]
     26                FTM2_C1SC &= ~FTM_CnSC_ELSA_MASK;
   \   00000100   0x.... 0x....      LDR.W    R0,??DataTable4_11  ;; 0x400b8014
   \   00000104   0x6800             LDR      R0,[R0, #+0]
   \   00000106   0xF030 0x0004      BICS     R0,R0,#0x4
   \   0000010A   0x.... 0x....      LDR.W    R1,??DataTable4_11  ;; 0x400b8014
   \   0000010E   0x6008             STR      R0,[R1, #+0]
     27                FTM2_C1SC |= FTM_CnSC_MSB_MASK;  
   \   00000110   0x.... 0x....      LDR.W    R0,??DataTable4_11  ;; 0x400b8014
   \   00000114   0x6800             LDR      R0,[R0, #+0]
   \   00000116   0xF050 0x0020      ORRS     R0,R0,#0x20
   \   0000011A   0x.... 0x....      LDR.W    R1,??DataTable4_11  ;; 0x400b8014
   \   0000011E   0x6008             STR      R0,[R1, #+0]
     28                FTM2_SC = 0x2C; //not enable the interrupt mask,up-down counting mode,System clock,Divide by 32 16           
   \   00000120   0x.... 0x....      LDR.W    R0,??DataTable4_12  ;; 0x400b8000
   \   00000124   0x212C             MOVS     R1,#+44
   \   00000126   0x6001             STR      R1,[R0, #+0]
     29                      
     30                
     31                FTM1_MODE |= FTM_MODE_WPDIS_MASK;      
   \   00000128   0x.... 0x....      LDR.W    R0,??DataTable4_13  ;; 0x40039054
   \   0000012C   0x6800             LDR      R0,[R0, #+0]
   \   0000012E   0xF050 0x0004      ORRS     R0,R0,#0x4
   \   00000132   0x.... 0x....      LDR.W    R1,??DataTable4_13  ;; 0x40039054
   \   00000136   0x6008             STR      R0,[R1, #+0]
     32          
     33                FTM1_MODE &= ~1;
   \   00000138   0x.... 0x....      LDR.W    R0,??DataTable4_13  ;; 0x40039054
   \   0000013C   0x6800             LDR      R0,[R0, #+0]
   \   0000013E   0x0840             LSRS     R0,R0,#+1
   \   00000140   0x0040             LSLS     R0,R0,#+1
   \   00000142   0x.... 0x....      LDR.W    R1,??DataTable4_13  ;; 0x40039054
   \   00000146   0x6008             STR      R0,[R1, #+0]
     34                
     35                FTM2_MODE |= FTM_MODE_WPDIS_MASK;      
   \   00000148   0x.... 0x....      LDR.W    R0,??DataTable4_14  ;; 0x400b8054
   \   0000014C   0x6800             LDR      R0,[R0, #+0]
   \   0000014E   0xF050 0x0004      ORRS     R0,R0,#0x4
   \   00000152   0x.... 0x....      LDR.W    R1,??DataTable4_14  ;; 0x400b8054
   \   00000156   0x6008             STR      R0,[R1, #+0]
     36          
     37                      FTM2_MODE &= ~1;
   \   00000158   0x.... 0x....      LDR.W    R0,??DataTable4_14  ;; 0x400b8054
   \   0000015C   0x6800             LDR      R0,[R0, #+0]
   \   0000015E   0x0840             LSRS     R0,R0,#+1
   \   00000160   0x0040             LSLS     R0,R0,#+1
   \   00000162   0x.... 0x....      LDR.W    R1,??DataTable4_14  ;; 0x400b8054
   \   00000166   0x6008             STR      R0,[R1, #+0]
     38               // FTM1_OUTMASK=0XFE;   //0 Channel output is not masked. It continues to operate normally.
     39                                     //1 Channel output is masked. It is forced to its inactive state.
     40                
     41                FTM1_COMBINE=0;      //Function for Linked Channels (FTMx_COMBINE)
   \   00000168   0x.... 0x....      LDR.W    R0,??DataTable4_15  ;; 0x40039064
   \   0000016C   0x2100             MOVS     R1,#+0
   \   0000016E   0x6001             STR      R1,[R0, #+0]
     42                FTM1_OUTINIT=0;
   \   00000170   0x.... 0x....      LDR.W    R0,??DataTable4_16  ;; 0x4003905c
   \   00000174   0x2100             MOVS     R1,#+0
   \   00000176   0x6001             STR      R1,[R0, #+0]
     43                FTM1_EXTTRIG=0;      //FTM External Trigger (FTMx_EXTTRIG)
   \   00000178   0x.... 0x....      LDR.W    R0,??DataTable4_17  ;; 0x4003906c
   \   0000017C   0x2100             MOVS     R1,#+0
   \   0000017E   0x6001             STR      R1,[R0, #+0]
     44                FTM1_POL=0;          //Channels Polarity (FTMx_POL)
   \   00000180   0x.... 0x....      LDR.W    R0,??DataTable4_18  ;; 0x40039070
   \   00000184   0x2100             MOVS     R1,#+0
   \   00000186   0x6001             STR      R1,[R0, #+0]
     45                                     //0 The channel polarity is active high.
     46                                     //1 The channel polarity is active low.  
     47                FTM2_COMBINE=0;      //Function for Linked Channels (FTMx_COMBINE)
   \   00000188   0x.... 0x....      LDR.W    R0,??DataTable4_19  ;; 0x400b8064
   \   0000018C   0x2100             MOVS     R1,#+0
   \   0000018E   0x6001             STR      R1,[R0, #+0]
     48                FTM2_OUTINIT=0;
   \   00000190   0x.... 0x....      LDR.W    R0,??DataTable4_20  ;; 0x400b805c
   \   00000194   0x2100             MOVS     R1,#+0
   \   00000196   0x6001             STR      R1,[R0, #+0]
     49                FTM2_EXTTRIG=0;      //FTM External Trigger (FTMx_EXTTRIG)
   \   00000198   0x.... 0x....      LDR.W    R0,??DataTable4_21  ;; 0x400b806c
   \   0000019C   0x2100             MOVS     R1,#+0
   \   0000019E   0x6001             STR      R1,[R0, #+0]
     50                FTM2_POL=0;          //Channels Polarity (FTMx_POL)
   \   000001A0   0x.... 0x....      LDR.W    R0,??DataTable4_22  ;; 0x400b8070
   \   000001A4   0x2100             MOVS     R1,#+0
   \   000001A6   0x6001             STR      R1,[R0, #+0]
     51                                           //0 The channel polarity is active high.
     52                                           //1 The channel polarity is active low.  
     53                FTM1_QDCTRL &=~FTM_QDCTRL_QUADEN_MASK;
   \   000001A8   0x.... 0x....      LDR.W    R0,??DataTable4_23  ;; 0x40039080
   \   000001AC   0x6800             LDR      R0,[R0, #+0]
   \   000001AE   0x0840             LSRS     R0,R0,#+1
   \   000001B0   0x0040             LSLS     R0,R0,#+1
   \   000001B2   0x.... 0x....      LDR.W    R1,??DataTable4_23  ;; 0x40039080
   \   000001B6   0x6008             STR      R0,[R1, #+0]
     54                FTM1_INVCTRL=0;     //反转控制
   \   000001B8   0x.... 0x....      LDR.W    R0,??DataTable4_24  ;; 0x40039090
   \   000001BC   0x2100             MOVS     R1,#+0
   \   000001BE   0x6001             STR      R1,[R0, #+0]
     55                FTM1_SWOCTRL=0;     //软件输出控制F TM Software Output Control (FTMx_SWOCTRL)
   \   000001C0   0x.... 0x....      LDR.W    R0,??DataTable4_25  ;; 0x40039094
   \   000001C4   0x2100             MOVS     R1,#+0
   \   000001C6   0x6001             STR      R1,[R0, #+0]
     56                FTM1_PWMLOAD=0;     //FTM PWM Load
   \   000001C8   0x.... 0x....      LDR.W    R0,??DataTable4_26  ;; 0x40039098
   \   000001CC   0x2100             MOVS     R1,#+0
   \   000001CE   0x6001             STR      R1,[R0, #+0]
     57                                    //BIT9: 0 Loading updated values is disabled.
     58                                    //1 Loading updated values is enabled.
     59                FTM2_QDCTRL &=~FTM_QDCTRL_QUADEN_MASK;
   \   000001D0   0x.... 0x....      LDR.W    R0,??DataTable4_27  ;; 0x400b8080
   \   000001D4   0x6800             LDR      R0,[R0, #+0]
   \   000001D6   0x0840             LSRS     R0,R0,#+1
   \   000001D8   0x0040             LSLS     R0,R0,#+1
   \   000001DA   0x.... 0x....      LDR.W    R1,??DataTable4_27  ;; 0x400b8080
   \   000001DE   0x6008             STR      R0,[R1, #+0]
     60                FTM2_INVCTRL=0;     //反转控制
   \   000001E0   0x.... 0x....      LDR.W    R0,??DataTable4_28  ;; 0x400b8090
   \   000001E4   0x2100             MOVS     R1,#+0
   \   000001E6   0x6001             STR      R1,[R0, #+0]
     61                FTM2_SWOCTRL=0;     //软件输出控制F TM Software Output Control (FTMx_SWOCTRL)
   \   000001E8   0x.... 0x....      LDR.W    R0,??DataTable4_29  ;; 0x400b8094
   \   000001EC   0x2100             MOVS     R1,#+0
   \   000001EE   0x6001             STR      R1,[R0, #+0]
     62                FTM2_PWMLOAD=0;     //FTM PWM Load
   \   000001F0   0x.... 0x....      LDR.W    R0,??DataTable4_30  ;; 0x400b8098
   \   000001F4   0x2100             MOVS     R1,#+0
   \   000001F6   0x6001             STR      R1,[R0, #+0]
     63                                          //BIT9: 0 Loading updated values is disabled.
     64                                          //1 Loading updated values is enabled.
     65                FTM1_CNTIN=0;        //Counter Initial Value      
   \   000001F8   0x.... 0x....      LDR.W    R0,??DataTable4_31  ;; 0x4003904c
   \   000001FC   0x2100             MOVS     R1,#+0
   \   000001FE   0x6001             STR      R1,[R0, #+0]
     66                FTM1_MOD=3750;       //Modulo value,The EPWM period is determined by (MOD - CNTIN + 0x0001) 
   \   00000200   0x.... 0x....      LDR.W    R0,??DataTable4_32  ;; 0x40039008
   \   00000204   0xF640 0x61A6      MOVW     R1,#+3750
   \   00000208   0x6001             STR      R1,[R0, #+0]
     67                                     //采用龙丘时钟初始化函数，可以得到4分频的频率，例如：系统60M频率时，PWM频率是15M,以此类推
     68                                     //PMW频率=系统频率/4/(2^FTM1_SC_PS)/FTM1_MOD
     69                                     //PMW频率=125M/4/(2^4)/19531=125000000/4/32/19531=50hz
     70                //PMW分频=125M/4/(2^5)=976562.5=1M,一个脉冲是1us,1500个脉冲就是1.5ms
     71                FTM2_CNTIN=0;        //Counter Initial Value      
   \   0000020A   0x.... 0x....      LDR.W    R0,??DataTable4_33  ;; 0x400b804c
   \   0000020E   0x2100             MOVS     R1,#+0
   \   00000210   0x6001             STR      R1,[R0, #+0]
     72                FTM2_MOD=3750;       //Modulo value,The EPWM period is determined by (MOD - CNTIN + 0x0001) 
   \   00000212   0x.... 0x....      LDR.W    R0,??DataTable4_34  ;; 0x400b8008
   \   00000216   0xF640 0x61A6      MOVW     R1,#+3750
   \   0000021A   0x6001             STR      R1,[R0, #+0]
     73                                          //采用龙丘时钟初始化函数，可以得到4分频的频率，例如：系统60M频率时，PWM频率是15M,以此类推
     74                                          //PMW频率=系统频率/4/(2^FTM1_SC_PS)/FTM1_MOD
     75                                          //PMW频率=180M/4/(2^5)/28125=180000000/4/32/28125=50hz
     76                     //PMW分频=125M/4/(2^5)=976562.5=1M,一个脉冲是1us,1500个脉冲就是1.5ms
     77                FTM1_C0V= (int)(1000 / 0.6667) ;       //设置 the pulse width(duty cycle) is determined by (CnV - CNTIN).
   \   0000021C   0x.... 0x....      LDR.W    R0,??DataTable4_35  ;; 0x40039010
   \   00000220   0xF240 0x51DB      MOVW     R1,#+1499
   \   00000224   0x6001             STR      R1,[R0, #+0]
     78                FTM1_C1V= (int)(1000 / 0.6667) ; 
   \   00000226   0x.... 0x....      LDR.W    R0,??DataTable4_36  ;; 0x40039018
   \   0000022A   0xF240 0x51DB      MOVW     R1,#+1499
   \   0000022E   0x6001             STR      R1,[R0, #+0]
     79                FTM1_CNT=0;          //只有低16位可用
   \   00000230   0x.... 0x....      LDR.W    R0,??DataTable4_37  ;; 0x40039004
   \   00000234   0x2100             MOVS     R1,#+0
   \   00000236   0x6001             STR      R1,[R0, #+0]
     80                
     81                FTM2_C0V= (int)(1000 / 0.6667);        //设置 the pulse width(duty cycle) is determined by (CnV - CNTIN).
   \   00000238   0x.... 0x....      LDR.W    R0,??DataTable4_38  ;; 0x400b8010
   \   0000023C   0xF240 0x51DB      MOVW     R1,#+1499
   \   00000240   0x6001             STR      R1,[R0, #+0]
     82                FTM2_C1V= (int)(1000 / 0.6667); 
   \   00000242   0x.... 0x....      LDR.W    R0,??DataTable4_39  ;; 0x400b8018
   \   00000246   0xF240 0x51DB      MOVW     R1,#+1499
   \   0000024A   0x6001             STR      R1,[R0, #+0]
     83                FTM2_CNT=0;          //只有低16位可用
   \   0000024C   0x.... 0x....      LDR.W    R0,??DataTable4_40  ;; 0x400b8004
   \   00000250   0x2100             MOVS     R1,#+0
   \   00000252   0x6001             STR      R1,[R0, #+0]
     84          }
   \   00000254   0x4770             BX       LR               ;; return

   \                                 In section .text, align 2, keep-with-next
     85          void set_pwm(uint16 a,uint16 b,uint16 c,uint16 d)
     86          {     if      (a >= 2000)a = 2000;
   \                     set_pwm:
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0x0005             MOVS     R5,R0
   \   00000004   0x000C             MOVS     R4,R1
   \   00000006   0x0010             MOVS     R0,R2
   \   00000008   0x001E             MOVS     R6,R3
   \   0000000A   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   0000000C   0xF5B5 0x6FFA      CMP      R5,#+2000
   \   00000010   0xD302             BCC.N    ??set_pwm_0
   \   00000012   0xF44F 0x65FA      MOV      R5,#+2000
   \   00000016   0xE006             B.N      ??set_pwm_1
     87                else if (a <= 1000)a = 1000;
   \                     ??set_pwm_0:
   \   00000018   0xF240 0x31E9      MOVW     R1,#+1001
   \   0000001C   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   0000001E   0x428D             CMP      R5,R1
   \   00000020   0xD201             BCS.N    ??set_pwm_1
   \   00000022   0xF44F 0x757A      MOV      R5,#+1000
     88                if      (b >= 2000)b = 2000;
   \                     ??set_pwm_1:
   \   00000026   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   00000028   0xF5B4 0x6FFA      CMP      R4,#+2000
   \   0000002C   0xD302             BCC.N    ??set_pwm_2
   \   0000002E   0xF44F 0x64FA      MOV      R4,#+2000
   \   00000032   0xE006             B.N      ??set_pwm_3
     89                else if (b <= 1000)b = 1000;
   \                     ??set_pwm_2:
   \   00000034   0xF240 0x31E9      MOVW     R1,#+1001
   \   00000038   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   0000003A   0x428C             CMP      R4,R1
   \   0000003C   0xD201             BCS.N    ??set_pwm_3
   \   0000003E   0xF44F 0x747A      MOV      R4,#+1000
     90                if      (c >= 2000)c = 2000;
   \                     ??set_pwm_3:
   \   00000042   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000044   0xF5B0 0x6FFA      CMP      R0,#+2000
   \   00000048   0xD302             BCC.N    ??set_pwm_4
   \   0000004A   0xF44F 0x60FA      MOV      R0,#+2000
   \   0000004E   0xE006             B.N      ??set_pwm_5
     91                else if (c <= 1000)c = 1000;
   \                     ??set_pwm_4:
   \   00000050   0xF240 0x31E9      MOVW     R1,#+1001
   \   00000054   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000056   0x4288             CMP      R0,R1
   \   00000058   0xD201             BCS.N    ??set_pwm_5
   \   0000005A   0xF44F 0x707A      MOV      R0,#+1000
     92                if      (d >= 2000)d = 2000;
   \                     ??set_pwm_5:
   \   0000005E   0xB2B6             UXTH     R6,R6            ;; ZeroExt  R6,R6,#+16,#+16
   \   00000060   0xF5B6 0x6FFA      CMP      R6,#+2000
   \   00000064   0xD302             BCC.N    ??set_pwm_6
   \   00000066   0xF44F 0x66FA      MOV      R6,#+2000
   \   0000006A   0xE006             B.N      ??set_pwm_7
     93                else if (d <= 1000)d = 1000;
   \                     ??set_pwm_6:
   \   0000006C   0xF240 0x31E9      MOVW     R1,#+1001
   \   00000070   0xB2B6             UXTH     R6,R6            ;; ZeroExt  R6,R6,#+16,#+16
   \   00000072   0x428E             CMP      R6,R1
   \   00000074   0xD201             BCS.N    ??set_pwm_7
   \   00000076   0xF44F 0x767A      MOV      R6,#+1000
     94                FTM1_C0V = (int)(c / 0.6667);       //设置 the pulse width(duty cycle) is determined by (CnV - CNTIN).
   \                     ??set_pwm_7:
   \   0000007A   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   0000007C   0x.... 0x....      BL       __aeabi_ui2d
   \   00000080   0x....             LDR.N    R2,??DataTable4_41  ;; 0x3d07c84b
   \   00000082   0x....             LDR.N    R3,??DataTable4_42  ;; 0x3fe5559b
   \   00000084   0x.... 0x....      BL       __aeabi_ddiv
   \   00000088   0x.... 0x....      BL       __aeabi_d2iz
   \   0000008C   0x....             LDR.N    R1,??DataTable4_35  ;; 0x40039010
   \   0000008E   0x6008             STR      R0,[R1, #+0]
     95                FTM1_C1V = (int)(d / 0.6667);
   \   00000090   0xB2B6             UXTH     R6,R6            ;; ZeroExt  R6,R6,#+16,#+16
   \   00000092   0x0030             MOVS     R0,R6
   \   00000094   0x.... 0x....      BL       __aeabi_ui2d
   \   00000098   0x....             LDR.N    R2,??DataTable4_41  ;; 0x3d07c84b
   \   0000009A   0x....             LDR.N    R3,??DataTable4_42  ;; 0x3fe5559b
   \   0000009C   0x.... 0x....      BL       __aeabi_ddiv
   \   000000A0   0x.... 0x....      BL       __aeabi_d2iz
   \   000000A4   0x....             LDR.N    R1,??DataTable4_36  ;; 0x40039018
   \   000000A6   0x6008             STR      R0,[R1, #+0]
     96                FTM2_C0V = (int)(b / 0.6667);       //设置 the pulse width(duty cycle) is determined by (CnV - CNTIN).
   \   000000A8   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   000000AA   0x0020             MOVS     R0,R4
   \   000000AC   0x.... 0x....      BL       __aeabi_ui2d
   \   000000B0   0x....             LDR.N    R2,??DataTable4_41  ;; 0x3d07c84b
   \   000000B2   0x....             LDR.N    R3,??DataTable4_42  ;; 0x3fe5559b
   \   000000B4   0x.... 0x....      BL       __aeabi_ddiv
   \   000000B8   0x.... 0x....      BL       __aeabi_d2iz
   \   000000BC   0x....             LDR.N    R1,??DataTable4_38  ;; 0x400b8010
   \   000000BE   0x6008             STR      R0,[R1, #+0]
     97                FTM2_C1V = (int)(a / 0.6667);//a
   \   000000C0   0xB2AD             UXTH     R5,R5            ;; ZeroExt  R5,R5,#+16,#+16
   \   000000C2   0x0028             MOVS     R0,R5
   \   000000C4   0x.... 0x....      BL       __aeabi_ui2d
   \   000000C8   0x....             LDR.N    R2,??DataTable4_41  ;; 0x3d07c84b
   \   000000CA   0x....             LDR.N    R3,??DataTable4_42  ;; 0x3fe5559b
   \   000000CC   0x.... 0x....      BL       __aeabi_ddiv
   \   000000D0   0x.... 0x....      BL       __aeabi_d2iz
   \   000000D4   0x....             LDR.N    R1,??DataTable4_39  ;; 0x400b8018
   \   000000D6   0x6008             STR      R0,[R1, #+0]
     98          }
   \   000000D8   0xBD70             POP      {R4-R6,PC}       ;; return
     99          

   \                                 In section .text, align 2, keep-with-next
    100          void SteerPWM_init()
    101          {
   \                     SteerPWM_init:
   \   00000000   0xB580             PUSH     {R7,LR}
    102                  
    103          	ftm0_pwm_init(100);//频率初始化   
   \   00000002   0x2064             MOVS     R0,#+100
   \   00000004   0x.... 0x....      BL       ftm0_pwm_init
    104          
    105                  ftm0_pwm_open(0,0);//初始化通道4,即PTD4口,占空比为0 0~10000,0.00%到100.00%
   \   00000008   0x2100             MOVS     R1,#+0
   \   0000000A   0x2000             MOVS     R0,#+0
   \   0000000C   0x.... 0x....      BL       ftm0_pwm_open
    106          	ftm0_pwm_change_duty(0,0);//控制占空比
   \   00000010   0x2100             MOVS     R1,#+0
   \   00000012   0x2000             MOVS     R0,#+0
   \   00000014   0x.... 0x....      BL       ftm0_pwm_change_duty
    107                  
    108          	ftm0_pwm_open(5,0);//初始化通道1,即PTC2口,占空比为0 0~10000,0.00%到100.00%
   \   00000018   0x2100             MOVS     R1,#+0
   \   0000001A   0x2005             MOVS     R0,#+5
   \   0000001C   0x.... 0x....      BL       ftm0_pwm_open
    109          	ftm0_pwm_change_duty(5,0);//控制占空比
   \   00000020   0x2100             MOVS     R1,#+0
   \   00000022   0x2005             MOVS     R0,#+5
   \   00000024   0x.... 0x....      BL       ftm0_pwm_change_duty
    110                 
    111          }
   \   00000028   0xBD01             POP      {R0,PC}          ;; return
    112          
    113          
    114          //全局变量定义

   \                                 In section .bss, align 4
    115          uint32 LPLD_FTM0_MOD;
   \                     LPLD_FTM0_MOD:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
    116          uint32 LPLD_FTM1_MOD;
   \                     LPLD_FTM1_MOD:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
    117          uint32 LPLD_FTM2_MOD;
   \                     LPLD_FTM2_MOD:
   \   00000000                      DS8 4
    118          
    119          /*
    120           * LPLD_FTM0_PWM_Init
    121           * FTM0模块PWM功能初始化函数
    122           * 
    123           * 参数:
    124           *    freq--期望频率，单位Hz
    125           *
    126           * 输出:
    127           *    0--配置错误
    128           *    1--配置成功
    129           */

   \                                 In section .text, align 2, keep-with-next
    130          uint8 ftm0_pwm_init(uint32 freq)
    131          {
   \                     ftm0_pwm_init:
   \   00000000   0xB410             PUSH     {R4}
    132          	uint32 bus_clk_hz;
    133          	uint32 mod;
    134          	uint8 ps;
    135          
    136          	bus_clk_hz = periph_clk_khz*1000;
   \   00000002   0x....             LDR.N    R1,??DataTable4_43
   \   00000004   0x6809             LDR      R1,[R1, #+0]
   \   00000006   0xF44F 0x727A      MOV      R2,#+1000
   \   0000000A   0x4351             MULS     R1,R2,R1
    137          	  
    138          	  if(freq>bus_clk_hz) return 0;
   \   0000000C   0x4281             CMP      R1,R0
   \   0000000E   0xD201             BCS.N    ??ftm0_pwm_init_0
   \   00000010   0x2000             MOVS     R0,#+0
   \   00000012   0xE06C             B.N      ??ftm0_pwm_init_1
    139          	  
    140          	  if((mod=bus_clk_hz/(freq*128)) < 0xFFFFu)
   \                     ??ftm0_pwm_init_0:
   \   00000014   0x2280             MOVS     R2,#+128
   \   00000016   0xFB02 0xF200      MUL      R2,R2,R0
   \   0000001A   0xFBB1 0xF3F2      UDIV     R3,R1,R2
   \   0000001E   0xF64F 0x72FF      MOVW     R2,#+65535
   \   00000022   0x4293             CMP      R3,R2
   \   00000024   0xD262             BCS.N    ??ftm0_pwm_init_2
    141          	  {
    142          	    ps = 7;
   \   00000026   0x2207             MOVS     R2,#+7
    143          	    LPLD_FTM0_MOD = mod;
   \   00000028   0x....             LDR.N    R4,??DataTable4_44
   \   0000002A   0x6023             STR      R3,[R4, #+0]
    144          	    if((mod=bus_clk_hz/(freq*64)) < 0xFFFFu)
   \   0000002C   0x2340             MOVS     R3,#+64
   \   0000002E   0xFB03 0xF300      MUL      R3,R3,R0
   \   00000032   0xFBB1 0xF3F3      UDIV     R3,R1,R3
   \   00000036   0xF64F 0x74FF      MOVW     R4,#+65535
   \   0000003A   0x42A3             CMP      R3,R4
   \   0000003C   0xD23D             BCS.N    ??ftm0_pwm_init_3
    145          	    {
    146          	      ps = 6;   
   \   0000003E   0x2206             MOVS     R2,#+6
    147          	      LPLD_FTM0_MOD = mod;  
   \   00000040   0x....             LDR.N    R4,??DataTable4_44
   \   00000042   0x6023             STR      R3,[R4, #+0]
    148          	      if((mod=bus_clk_hz/(freq*32)) < 0xFFFFu)
   \   00000044   0x0143             LSLS     R3,R0,#+5
   \   00000046   0xFBB1 0xF3F3      UDIV     R3,R1,R3
   \   0000004A   0xF64F 0x74FF      MOVW     R4,#+65535
   \   0000004E   0x42A3             CMP      R3,R4
   \   00000050   0xD233             BCS.N    ??ftm0_pwm_init_3
    149          	      {
    150          	        ps = 5; 
   \   00000052   0x2205             MOVS     R2,#+5
    151          	        LPLD_FTM0_MOD = mod;  
   \   00000054   0x....             LDR.N    R4,??DataTable4_44
   \   00000056   0x6023             STR      R3,[R4, #+0]
    152          	        if((mod=bus_clk_hz/(freq*16)) < 0xFFFFu)
   \   00000058   0x0103             LSLS     R3,R0,#+4
   \   0000005A   0xFBB1 0xF3F3      UDIV     R3,R1,R3
   \   0000005E   0xF64F 0x74FF      MOVW     R4,#+65535
   \   00000062   0x42A3             CMP      R3,R4
   \   00000064   0xD229             BCS.N    ??ftm0_pwm_init_3
    153          	        {
    154          	          ps = 4;  
   \   00000066   0x2204             MOVS     R2,#+4
    155          	          LPLD_FTM0_MOD = mod;    
   \   00000068   0x....             LDR.N    R4,??DataTable4_44
   \   0000006A   0x6023             STR      R3,[R4, #+0]
    156          	          if((mod=bus_clk_hz/(freq*8)) < 0xFFFFu)
   \   0000006C   0x00C3             LSLS     R3,R0,#+3
   \   0000006E   0xFBB1 0xF3F3      UDIV     R3,R1,R3
   \   00000072   0xF64F 0x74FF      MOVW     R4,#+65535
   \   00000076   0x42A3             CMP      R3,R4
   \   00000078   0xD21F             BCS.N    ??ftm0_pwm_init_3
    157          	          {
    158          	            ps = 3;
   \   0000007A   0x2203             MOVS     R2,#+3
    159          	            LPLD_FTM0_MOD = mod;
   \   0000007C   0x....             LDR.N    R4,??DataTable4_44
   \   0000007E   0x6023             STR      R3,[R4, #+0]
    160          	            if((mod=bus_clk_hz/(freq*4)) < 0xFFFFu)
   \   00000080   0x0083             LSLS     R3,R0,#+2
   \   00000082   0xFBB1 0xF3F3      UDIV     R3,R1,R3
   \   00000086   0xF64F 0x74FF      MOVW     R4,#+65535
   \   0000008A   0x42A3             CMP      R3,R4
   \   0000008C   0xD215             BCS.N    ??ftm0_pwm_init_3
    161          	            {
    162          	              ps = 2;
   \   0000008E   0x2202             MOVS     R2,#+2
    163          	              LPLD_FTM0_MOD = mod;
   \   00000090   0x....             LDR.N    R4,??DataTable4_44
   \   00000092   0x6023             STR      R3,[R4, #+0]
    164          	              if((mod=bus_clk_hz/(freq*2)) < 0xFFFFu)
   \   00000094   0x0043             LSLS     R3,R0,#+1
   \   00000096   0xFBB1 0xF3F3      UDIV     R3,R1,R3
   \   0000009A   0xF64F 0x74FF      MOVW     R4,#+65535
   \   0000009E   0x42A3             CMP      R3,R4
   \   000000A0   0xD20B             BCS.N    ??ftm0_pwm_init_3
    165          	              {
    166          	                ps = 1;
   \   000000A2   0x2201             MOVS     R2,#+1
    167          	                LPLD_FTM0_MOD = mod;
   \   000000A4   0x....             LDR.N    R4,??DataTable4_44
   \   000000A6   0x6023             STR      R3,[R4, #+0]
    168          	                if((mod=bus_clk_hz/(freq*1)) < 0xFFFFu)
   \   000000A8   0xFBB1 0xF3F0      UDIV     R3,R1,R0
   \   000000AC   0xF64F 0x70FF      MOVW     R0,#+65535
   \   000000B0   0x4283             CMP      R3,R0
   \   000000B2   0xD202             BCS.N    ??ftm0_pwm_init_3
    169          	                {
    170          	                  ps = 0;
   \   000000B4   0x2200             MOVS     R2,#+0
    171          	                  LPLD_FTM0_MOD = mod;
   \   000000B6   0x....             LDR.N    R0,??DataTable4_44
   \   000000B8   0x6003             STR      R3,[R0, #+0]
    172          	                }
    173          	              }
    174          	            }
    175          	          }
    176          	        }  
    177          	      }
    178          	    }
    179          	  }
    180          	  else
    181          	  {
    182          	    return 0;
    183          	  }
    184          	  
    185          	  // 使能FTM时钟模块
    186          	  SIM_SCGC6 |= SIM_SCGC6_FTM0_MASK;
   \                     ??ftm0_pwm_init_3:
   \   000000BA   0x....             LDR.N    R0,??DataTable4_5  ;; 0x4004803c
   \   000000BC   0x6800             LDR      R0,[R0, #+0]
   \   000000BE   0xF050 0x7080      ORRS     R0,R0,#0x1000000
   \   000000C2   0x....             LDR.N    R1,??DataTable4_5  ;; 0x4004803c
   \   000000C4   0x6008             STR      R0,[R1, #+0]
    187          	  
    188          	  // 配置FTM控制寄存器
    189          	  // 禁用中断, 加计数模式, 时钟源:System clock（Bus Clk）, 分频系数:8
    190          	  // 假设SysClk = 50MHz, SC_PS=3, FTM Clk = 50MHz/2^3 = 6.25MHz
    191          	  FTM0_SC = FTM_SC_CLKS(1)|FTM_SC_PS(ps);
   \   000000C6   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   000000C8   0xF012 0x0007      ANDS     R0,R2,#0x7
   \   000000CC   0xF050 0x0008      ORRS     R0,R0,#0x8
   \   000000D0   0x....             LDR.N    R1,??DataTable4_45  ;; 0x40038000
   \   000000D2   0x6008             STR      R0,[R1, #+0]
    192          	  
    193          	  // 设置PWM周期及占空比
    194          	  //    PWM周期 = (MOD-CNTIN+1)*FTM时钟周期 :
    195          	  // 配置FTM计数初始值
    196          	  FTM0_CNT = 0;
   \   000000D4   0x....             LDR.N    R0,??DataTable4_46  ;; 0x40038004
   \   000000D6   0x2100             MOVS     R1,#+0
   \   000000D8   0x6001             STR      R1,[R0, #+0]
    197          	  FTM0_CNTIN = 0;
   \   000000DA   0x....             LDR.N    R0,??DataTable4_47  ;; 0x4003804c
   \   000000DC   0x2100             MOVS     R1,#+0
   \   000000DE   0x6001             STR      R1,[R0, #+0]
    198          	  // 配置FTM计数MOD值
    199          	  FTM0_MOD = LPLD_FTM0_MOD;
   \   000000E0   0x....             LDR.N    R0,??DataTable4_48  ;; 0x40038008
   \   000000E2   0x....             LDR.N    R1,??DataTable4_44
   \   000000E4   0x6809             LDR      R1,[R1, #+0]
   \   000000E6   0x6001             STR      R1,[R0, #+0]
    200          	  
    201          	  return 1;
   \   000000E8   0x2001             MOVS     R0,#+1
   \   000000EA   0xE000             B.N      ??ftm0_pwm_init_1
   \                     ??ftm0_pwm_init_2:
   \   000000EC   0x2000             MOVS     R0,#+0
   \                     ??ftm0_pwm_init_1:
   \   000000EE   0xBC10             POP      {R4}
   \   000000F0   0x4770             BX       LR               ;; return
    202          }
    203          
    204          /*
    205           * 
    206           * FTM0模块PWM输出通道及占空比配置
    207           * 
    208           * 说明: 其他GPIO也可配置为FTM0输出,本函数只考虑PTC和PTD,如需改变请自行修改 
    209           * 
    210           * 参数:
    211           *    channel - PWM输出通道
    212           *      |__0--PTC1
    213           *      |__1--PTC2
    214           *      |__2--PTC3
    215           *      |__3--PTC4
    216           *      |__4--PTD4
    217           *      |__5--PTD5
    218           *      |__6--PTD6
    219           *      |__7--PTD7
    220           *    duty - PWM输出占空比
    221           *      |__0~10000--占空比0.00%~100.00%
    222           *
    223           * 输出:
    224           *    0--配置错误
    225           *    1--配置成功
    226           */

   \                                 In section .text, align 2, keep-with-next
    227          uint8 ftm0_pwm_open(uint8 channel, uint32 duty)
    228          {
   \                     ftm0_pwm_open:
   \   00000000   0xB081             SUB      SP,SP,#+4
    229          	uint32 cv;
    230          	  volatile uint32 mod;
    231          	  
    232          	  if(duty>10000) return 0;
   \   00000002   0xF242 0x7211      MOVW     R2,#+10001
   \   00000006   0x4291             CMP      R1,R2
   \   00000008   0xD301             BCC.N    ??ftm0_pwm_open_0
   \   0000000A   0x2000             MOVS     R0,#+0
   \   0000000C   0xE02C             B.N      ??ftm0_pwm_open_1
    233          	  //占空比 = (CnV-CNTIN)/(MOD-CNTIN+1)
    234          	  mod = LPLD_FTM0_MOD;
   \                     ??ftm0_pwm_open_0:
   \   0000000E   0x....             LDR.N    R2,??DataTable4_44
   \   00000010   0x6812             LDR      R2,[R2, #+0]
   \   00000012   0x9200             STR      R2,[SP, #+0]
    235          	  cv = (duty*(mod-0+1)+0)/10000;
   \   00000014   0x9A00             LDR      R2,[SP, #+0]
   \   00000016   0x1C52             ADDS     R2,R2,#+1
   \   00000018   0x4351             MULS     R1,R2,R1
   \   0000001A   0xF242 0x7210      MOVW     R2,#+10000
   \   0000001E   0xFBB1 0xF1F2      UDIV     R1,R1,R2
    236          	  
    237          	  //选择并开启通道
    238          	  switch(channel)
   \   00000022   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000024   0x0002             MOVS     R2,R0
   \   00000026   0x2A00             CMP      R2,#+0
   \   00000028   0x2A03             CMP      R2,#+3
   \   0000002A   0xD903             BLS.N    ??ftm0_pwm_open_2
   \   0000002C   0x1F12             SUBS     R2,R2,#+4
   \   0000002E   0x2A03             CMP      R2,#+3
   \   00000030   0xD91C             BLS.N    ??ftm0_pwm_open_3
   \   00000032   0xE028             B.N      ??ftm0_pwm_open_4
    239          	  {
    240          	    case 0:
    241          	    case 1:
    242          	    case 2:
    243          	    case 3:
    244          	      SIM_SCGC5 |= SIM_SCGC5_PORTC_MASK;
   \                     ??ftm0_pwm_open_2:
   \   00000034   0x....             LDR.N    R2,??DataTable4_4  ;; 0x40048038
   \   00000036   0x6812             LDR      R2,[R2, #+0]
   \   00000038   0xF452 0x6200      ORRS     R2,R2,#0x800
   \   0000003C   0x....             LDR.N    R3,??DataTable4_4  ;; 0x40048038
   \   0000003E   0x601A             STR      R2,[R3, #+0]
    245          	      PORT_PCR_REG(PORTC_BASE_PTR, channel+1) = PORT_PCR_MUX(4);
   \   00000040   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000042   0x0082             LSLS     R2,R0,#+2
   \   00000044   0xF102 0x4280      ADD      R2,R2,#+1073741824
   \   00000048   0xF512 0x2296      ADDS     R2,R2,#+307200
   \   0000004C   0xF44F 0x6380      MOV      R3,#+1024
   \   00000050   0x6053             STR      R3,[R2, #+4]
    246          	      break;
    247          	    case 4:
    248          	    case 5:
    249          	    case 6:
    250          	    case 7:
    251          	      SIM_SCGC5 |= SIM_SCGC5_PORTD_MASK;
    252          	      PORT_PCR_REG(PORTD_BASE_PTR, channel) = PORT_PCR_MUX(4);
    253          	      break;
    254          	    default:
    255          	       return 0;
    256          	  }  
    257          	  
    258          	  // 配置FTM通道控制寄存器 
    259          	  // 通道模式 MSB:MSA-1X, 通道边缘选择 ELSB:ELSA-10
    260          	  FTM_CnSC_REG(FTM0_BASE_PTR, channel) = FTM_CnSC_MSB_MASK|FTM_CnSC_ELSB_MASK;
   \                     ??ftm0_pwm_open_5:
   \   00000052   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000054   0x....             LDR.N    R2,??DataTable4_49  ;; 0x4003800c
   \   00000056   0x2328             MOVS     R3,#+40
   \   00000058   0xF842 0x3030      STR      R3,[R2, R0, LSL #+3]
    261          	  // 配置FTM通道值
    262          	  FTM_CnV_REG(FTM0_BASE_PTR, channel) = cv;
   \   0000005C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000005E   0x....             LDR.N    R2,??DataTable4_49  ;; 0x4003800c
   \   00000060   0xEB12 0x00C0      ADDS     R0,R2,R0, LSL #+3
   \   00000064   0x6041             STR      R1,[R0, #+4]
    263          	  
    264          	  return 1;
   \   00000066   0x2001             MOVS     R0,#+1
   \                     ??ftm0_pwm_open_1:
   \   00000068   0xB001             ADD      SP,SP,#+4
   \   0000006A   0x4770             BX       LR               ;; return
   \                     ??ftm0_pwm_open_3:
   \   0000006C   0x....             LDR.N    R2,??DataTable4_4  ;; 0x40048038
   \   0000006E   0x6812             LDR      R2,[R2, #+0]
   \   00000070   0xF452 0x5280      ORRS     R2,R2,#0x1000
   \   00000074   0x....             LDR.N    R3,??DataTable4_4  ;; 0x40048038
   \   00000076   0x601A             STR      R2,[R3, #+0]
   \   00000078   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000007A   0x....             LDR.N    R2,??DataTable4_50  ;; 0x4004c000
   \   0000007C   0xF44F 0x6380      MOV      R3,#+1024
   \   00000080   0xF842 0x3020      STR      R3,[R2, R0, LSL #+2]
   \   00000084   0xE7E5             B.N      ??ftm0_pwm_open_5
   \                     ??ftm0_pwm_open_4:
   \   00000086   0x2000             MOVS     R0,#+0
   \   00000088   0xE7EE             B.N      ??ftm0_pwm_open_1
    265          }
    266          
    267          /*
    268           * LPLD_FTM0_PWM_ChangeDuty
    269           * 改变FTM0模块PWM输出通道占空比
    270           *
    271           * 参数:
    272           *    channel - PWM输出通道
    273           *      |__0--PTC1
    274           *      |__1--PTC2
    275           *      |__2--PTC3
    276           *      |__3--PTC4
    277           *      |__4--PTD4
    278           *      |__5--PTD5
    279           *      |__6--PTD6
    280           *      |__7--PTD7
    281           *    duty - PWM输出占空比
    282           *      |__0~10000--占空比0.00%~100.00%
    283           *
    284           * 输出:
    285           *    0--配置错误
    286           *    1--配置成功
    287           */

   \                                 In section .text, align 2, keep-with-next
    288          uint8 ftm0_pwm_change_duty(uint8 channel, uint32 duty)
    289          {
   \                     ftm0_pwm_change_duty:
   \   00000000   0xB081             SUB      SP,SP,#+4
    290            uint32 cv;
    291            volatile uint32 mod;
    292            
    293            if(duty>10000) return 0;
   \   00000002   0xF242 0x7211      MOVW     R2,#+10001
   \   00000006   0x4291             CMP      R1,R2
   \   00000008   0xD301             BCC.N    ??ftm0_pwm_change_duty_0
   \   0000000A   0x2000             MOVS     R0,#+0
   \   0000000C   0xE00F             B.N      ??ftm0_pwm_change_duty_1
    294            //占空比 = (CnV-CNTIN)/(MOD-CNTIN+1)
    295            mod = LPLD_FTM0_MOD;
   \                     ??ftm0_pwm_change_duty_0:
   \   0000000E   0x....             LDR.N    R2,??DataTable4_44
   \   00000010   0x6812             LDR      R2,[R2, #+0]
   \   00000012   0x9200             STR      R2,[SP, #+0]
    296            cv = (duty*(mod-0+1)+0)/10000;
   \   00000014   0x9A00             LDR      R2,[SP, #+0]
   \   00000016   0x1C52             ADDS     R2,R2,#+1
   \   00000018   0x4351             MULS     R1,R2,R1
   \   0000001A   0xF242 0x7210      MOVW     R2,#+10000
   \   0000001E   0xFBB1 0xF1F2      UDIV     R1,R1,R2
    297           
    298            // 配置FTM通道值
    299            FTM_CnV_REG(FTM0_BASE_PTR, channel) = cv;
   \   00000022   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000024   0x....             LDR.N    R2,??DataTable4_49  ;; 0x4003800c
   \   00000026   0xEB12 0x00C0      ADDS     R0,R2,R0, LSL #+3
   \   0000002A   0x6041             STR      R1,[R0, #+4]
    300            
    301            return 1;
   \   0000002C   0x2001             MOVS     R0,#+1
   \                     ??ftm0_pwm_change_duty_1:
   \   0000002E   0xB001             ADD      SP,SP,#+4
   \   00000030   0x4770             BX       LR               ;; return
    302          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4:
   \   00000000   0x40049030         DC32     0x40049030

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_1:
   \   00000000   0x40049034         DC32     0x40049034

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_2:
   \   00000000   0x4004A048         DC32     0x4004a048

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_3:
   \   00000000   0x4004A04C         DC32     0x4004a04c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_4:
   \   00000000   0x40048038         DC32     0x40048038

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_5:
   \   00000000   0x4004803C         DC32     0x4004803c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_6:
   \   00000000   0x40048030         DC32     0x40048030

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_7:
   \   00000000   0x4003900C         DC32     0x4003900c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_8:
   \   00000000   0x40039014         DC32     0x40039014

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_9:
   \   00000000   0x40039000         DC32     0x40039000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_10:
   \   00000000   0x400B800C         DC32     0x400b800c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_11:
   \   00000000   0x400B8014         DC32     0x400b8014

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_12:
   \   00000000   0x400B8000         DC32     0x400b8000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_13:
   \   00000000   0x40039054         DC32     0x40039054

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_14:
   \   00000000   0x400B8054         DC32     0x400b8054

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_15:
   \   00000000   0x40039064         DC32     0x40039064

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_16:
   \   00000000   0x4003905C         DC32     0x4003905c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_17:
   \   00000000   0x4003906C         DC32     0x4003906c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_18:
   \   00000000   0x40039070         DC32     0x40039070

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_19:
   \   00000000   0x400B8064         DC32     0x400b8064

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_20:
   \   00000000   0x400B805C         DC32     0x400b805c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_21:
   \   00000000   0x400B806C         DC32     0x400b806c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_22:
   \   00000000   0x400B8070         DC32     0x400b8070

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_23:
   \   00000000   0x40039080         DC32     0x40039080

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_24:
   \   00000000   0x40039090         DC32     0x40039090

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_25:
   \   00000000   0x40039094         DC32     0x40039094

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_26:
   \   00000000   0x40039098         DC32     0x40039098

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_27:
   \   00000000   0x400B8080         DC32     0x400b8080

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_28:
   \   00000000   0x400B8090         DC32     0x400b8090

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_29:
   \   00000000   0x400B8094         DC32     0x400b8094

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_30:
   \   00000000   0x400B8098         DC32     0x400b8098

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_31:
   \   00000000   0x4003904C         DC32     0x4003904c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_32:
   \   00000000   0x40039008         DC32     0x40039008

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_33:
   \   00000000   0x400B804C         DC32     0x400b804c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_34:
   \   00000000   0x400B8008         DC32     0x400b8008

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_35:
   \   00000000   0x40039010         DC32     0x40039010

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_36:
   \   00000000   0x40039018         DC32     0x40039018

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_37:
   \   00000000   0x40039004         DC32     0x40039004

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_38:
   \   00000000   0x400B8010         DC32     0x400b8010

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_39:
   \   00000000   0x400B8018         DC32     0x400b8018

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_40:
   \   00000000   0x400B8004         DC32     0x400b8004

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_41:
   \   00000000   0x3D07C84B         DC32     0x3d07c84b

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_42:
   \   00000000   0x3FE5559B         DC32     0x3fe5559b

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_43:
   \   00000000   0x........         DC32     periph_clk_khz

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_44:
   \   00000000   0x........         DC32     LPLD_FTM0_MOD

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_45:
   \   00000000   0x40038000         DC32     0x40038000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_46:
   \   00000000   0x40038004         DC32     0x40038004

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_47:
   \   00000000   0x4003804C         DC32     0x4003804c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_48:
   \   00000000   0x40038008         DC32     0x40038008

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_49:
   \   00000000   0x4003800C         DC32     0x4003800c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_50:
   \   00000000   0x4004C000         DC32     0x4004c000

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
        8  SteerPWM_init
              8 -> ftm0_pwm_change_duty
              8 -> ftm0_pwm_init
              8 -> ftm0_pwm_open
        4  ftm0_pwm_change_duty
        4  ftm0_pwm_init
        4  ftm0_pwm_open
        0  hw_FTM_init
       16  set_pwm
             16 -> __aeabi_d2iz
             16 -> __aeabi_ddiv
             16 -> __aeabi_ui2d


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable4
       4  ??DataTable4_1
       4  ??DataTable4_10
       4  ??DataTable4_11
       4  ??DataTable4_12
       4  ??DataTable4_13
       4  ??DataTable4_14
       4  ??DataTable4_15
       4  ??DataTable4_16
       4  ??DataTable4_17
       4  ??DataTable4_18
       4  ??DataTable4_19
       4  ??DataTable4_2
       4  ??DataTable4_20
       4  ??DataTable4_21
       4  ??DataTable4_22
       4  ??DataTable4_23
       4  ??DataTable4_24
       4  ??DataTable4_25
       4  ??DataTable4_26
       4  ??DataTable4_27
       4  ??DataTable4_28
       4  ??DataTable4_29
       4  ??DataTable4_3
       4  ??DataTable4_30
       4  ??DataTable4_31
       4  ??DataTable4_32
       4  ??DataTable4_33
       4  ??DataTable4_34
       4  ??DataTable4_35
       4  ??DataTable4_36
       4  ??DataTable4_37
       4  ??DataTable4_38
       4  ??DataTable4_39
       4  ??DataTable4_4
       4  ??DataTable4_40
       4  ??DataTable4_41
       4  ??DataTable4_42
       4  ??DataTable4_43
       4  ??DataTable4_44
       4  ??DataTable4_45
       4  ??DataTable4_46
       4  ??DataTable4_47
       4  ??DataTable4_48
       4  ??DataTable4_49
       4  ??DataTable4_5
       4  ??DataTable4_50
       4  ??DataTable4_6
       4  ??DataTable4_7
       4  ??DataTable4_8
       4  ??DataTable4_9
       4  LPLD_FTM0_MOD
       4  LPLD_FTM1_MOD
       4  LPLD_FTM2_MOD
      42  SteerPWM_init
      50  ftm0_pwm_change_duty
     242  ftm0_pwm_init
     138  ftm0_pwm_open
     598  hw_FTM_init
     218  set_pwm

 
    12 bytes in section .bss
 1 492 bytes in section .text
 
 1 492 bytes of CODE memory
    12 bytes of DATA memory

Errors: none
Warnings: none
