###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.40.1.53790/W32 for ARM     03/Aug/2015  09:48:12 #
# Copyright 1999-2012 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  C:\Users\Thinkpad\Desktop\quadrotor150720飞行器跟随小车( #
#                    改I2C)\src\Sources\C\Component_C\function.c              #
#    Command line =  "C:\Users\Thinkpad\Desktop\quadrotor150720飞行器跟随小车 #
#                    (改I2C)\src\Sources\C\Component_C\function.c" -D IAR -D  #
#                    TWR_K60N512 -lCN "C:\Users\Thinkpad\Desktop\quadrotor150 #
#                    720飞行器跟随小车(改I2C)\bin\Flash\List\" -lB            #
#                    "C:\Users\Thinkpad\Desktop\quadrotor150720飞行器跟随小车 #
#                    (改I2C)\bin\Flash\List\" -o                              #
#                    "C:\Users\Thinkpad\Desktop\quadrotor150720飞行器跟随小车 #
#                    (改I2C)\bin\Flash\Obj\" --no_cse --no_unroll             #
#                    --no_inline --no_code_motion --no_tbaa --no_clustering   #
#                    --no_scheduling --debug --endian=little --cpu=Cortex-M4  #
#                    -e --fpu=None --dlib_config "E:\Program Files\IAR        #
#                    Systems\Embedded Workbench 6.4\arm\INC\c\DLib_Config_Nor #
#                    mal.h" -I "C:\Users\Thinkpad\Desktop\quadrotor150720飞行 #
#                    器跟随小车(改I2C)\src\Sources\H\" -I                     #
#                    "C:\Users\Thinkpad\Desktop\quadrotor150720飞行器跟随小车 #
#                    (改I2C)\src\Sources\H\Component_H\" -I                   #
#                    "C:\Users\Thinkpad\Desktop\quadrotor150720飞行器跟随小车 #
#                    (改I2C)\src\Sources\H\Frame_H\" -Ol --use_c++_inline     #
#    List file    =  C:\Users\Thinkpad\Desktop\quadrotor150720飞行器跟随小车( #
#                    改I2C)\bin\Flash\List\function.lst                       #
#    Object file  =  C:\Users\Thinkpad\Desktop\quadrotor150720飞行器跟随小车( #
#                    改I2C)\bin\Flash\Obj\function.o                          #
#                                                                             #
#                                                                             #
###############################################################################

C:\Users\Thinkpad\Desktop\quadrotor150720飞行器跟随小车(改I2C)\src\Sources\C\Component_C\function.c
      1          #include "function.h"
      2          

   \                                 In section .bss, align 4
      3          uint8 floatToByte[4];
   \                     floatToByte:
   \   00000000                      DS8 4

   \                                 In section .data, align 1
      4          bool  SendToGUI_Flag = true;
   \                     SendToGUI_Flag:
   \   00000000   0x01               DC8 1

   \                                 In section .bss, align 1
      5          bool  Integral_high = false;
   \                     Integral_high:
   \   00000000                      DS8 1

   \                                 In section .text, align 2, keep-with-next
      6          void SetIrqsPrio(void)
      7          {
   \                     SetIrqsPrio:
   \   00000000   0xB580             PUSH     {R7,LR}
      8              set_irq_priority(47, 2);//串口接收
   \   00000002   0x2102             MOVS     R1,#+2
   \   00000004   0x202F             MOVS     R0,#+47
   \   00000006   0x.... 0x....      BL       set_irq_priority
      9              set_irq_priority(68, 1);//PIT0中断
   \   0000000A   0x2101             MOVS     R1,#+1
   \   0000000C   0x2044             MOVS     R0,#+68
   \   0000000E   0x.... 0x....      BL       set_irq_priority
     10              set_irq_priority(91, 0);//超声波测高
   \   00000012   0x2100             MOVS     R1,#+0
   \   00000014   0x205B             MOVS     R0,#+91
   \   00000016   0x.... 0x....      BL       set_irq_priority
     11              //set_irq_priority(45, 3);//高度接收
     12          }
   \   0000001A   0xBD01             POP      {R0,PC}          ;; return
     13          

   \                                 In section .text, align 2, keep-with-next
     14          bool Initial(void)
     15          {
   \                     Initial:
   \   00000000   0xB580             PUSH     {R7,LR}
     16              hw_gpio_init (PORT_A, 15, 1, 1);                 //PORTA15输出口
   \   00000002   0x2301             MOVS     R3,#+1
   \   00000004   0x2201             MOVS     R2,#+1
   \   00000006   0x210F             MOVS     R1,#+15
   \   00000008   0x2000             MOVS     R0,#+0
   \   0000000A   0x.... 0x....      BL       hw_gpio_init
     17              hw_gpio_init (PORT_C, 18, 1, 0);                 //超声波Trig
   \   0000000E   0x2300             MOVS     R3,#+0
   \   00000010   0x2201             MOVS     R2,#+1
   \   00000012   0x2112             MOVS     R1,#+18
   \   00000014   0x2002             MOVS     R0,#+2
   \   00000016   0x.... 0x....      BL       hw_gpio_init
     18              hw_gpio_init (PORT_E, 6, 1, 0);
   \   0000001A   0x2300             MOVS     R3,#+0
   \   0000001C   0x2201             MOVS     R2,#+1
   \   0000001E   0x2106             MOVS     R1,#+6
   \   00000020   0x2004             MOVS     R0,#+4
   \   00000022   0x.... 0x....      BL       hw_gpio_init
     19              hw_gpio_init (PORT_E, 2, 1, 1);
   \   00000026   0x2301             MOVS     R3,#+1
   \   00000028   0x2201             MOVS     R2,#+1
   \   0000002A   0x2102             MOVS     R1,#+2
   \   0000002C   0x2004             MOVS     R0,#+4
   \   0000002E   0x.... 0x....      BL       hw_gpio_init
     20              hw_gpio_init (PORT_B, 3, 1, 0);
   \   00000032   0x2300             MOVS     R3,#+0
   \   00000034   0x2201             MOVS     R2,#+1
   \   00000036   0x2103             MOVS     R1,#+3
   \   00000038   0x2001             MOVS     R0,#+1
   \   0000003A   0x.... 0x....      BL       hw_gpio_init
     21              hw_gpio_init (PORT_B, 10, 1, 0);
   \   0000003E   0x2300             MOVS     R3,#+0
   \   00000040   0x2201             MOVS     R2,#+1
   \   00000042   0x210A             MOVS     R1,#+10
   \   00000044   0x2001             MOVS     R0,#+1
   \   00000046   0x.... 0x....      BL       hw_gpio_init
     22              hw_gpio_init (PORT_B, 16, 1, 0);
   \   0000004A   0x2300             MOVS     R3,#+0
   \   0000004C   0x2201             MOVS     R2,#+1
   \   0000004E   0x2110             MOVS     R1,#+16
   \   00000050   0x2001             MOVS     R0,#+1
   \   00000052   0x.... 0x....      BL       hw_gpio_init
     23              hw_gpio_init (PORT_B, 21, 1, 1);                 //蜂鸣器控制口
   \   00000056   0x2301             MOVS     R3,#+1
   \   00000058   0x2201             MOVS     R2,#+1
   \   0000005A   0x2115             MOVS     R1,#+21
   \   0000005C   0x2001             MOVS     R0,#+1
   \   0000005E   0x.... 0x....      BL       hw_gpio_init
     24              hw_FTM_init();                                   //PWM初始化
   \   00000062   0x.... 0x....      BL       hw_FTM_init
     25              SteerPWM_init();                                 //云台初始化
   \   00000066   0x.... 0x....      BL       SteerPWM_init
     26              hw_i2c_init(0);                                   //I2C0初始化
   \   0000006A   0x2000             MOVS     R0,#+0
   \   0000006C   0x.... 0x....      BL       hw_i2c_init
     27              hw_i2c_init(1);
   \   00000070   0x2001             MOVS     R0,#+1
   \   00000072   0x.... 0x....      BL       hw_i2c_init
     28              uart_init (UART0, periph_clk_khz, 921600);          //串口0波特率9600
   \   00000076   0xF45F 0x2261      MOVS     R2,#+921600
   \   0000007A   0x....             LDR.N    R0,??DataTable4
   \   0000007C   0x6801             LDR      R1,[R0, #+0]
   \   0000007E   0x....             LDR.N    R0,??DataTable4_1  ;; 0x4006a000
   \   00000080   0x.... 0x....      BL       uart_init
     29              uart_init (UART1, periph_clk_khz, 57600);	     //遥控串口1波特率9600
   \   00000084   0xF44F 0x4261      MOV      R2,#+57600
   \   00000088   0x....             LDR.N    R0,??DataTable4
   \   0000008A   0x6801             LDR      R1,[R0, #+0]
   \   0000008C   0x....             LDR.N    R0,??DataTable4_2  ;; 0x4006b000
   \   0000008E   0x.... 0x....      BL       uart_init
     30              enableuartreint(UART0, UART0irq);	            //串口0中断使能
   \   00000092   0x212D             MOVS     R1,#+45
   \   00000094   0x....             LDR.N    R0,??DataTable4_1  ;; 0x4006a000
   \   00000096   0x.... 0x....      BL       enableuartreint
     31              enableuartreint(UART1, UART1irq);		    //串口1中断使能
   \   0000009A   0x212F             MOVS     R1,#+47
   \   0000009C   0x....             LDR.N    R0,??DataTable4_2  ;; 0x4006b000
   \   0000009E   0x.... 0x....      BL       enableuartreint
     32              hw_pit_init(0, (int)(periph_clk_khz * T));               //初始化pit0，周期20ms
   \   000000A2   0x....             LDR.N    R0,??DataTable4
   \   000000A4   0x6800             LDR      R0,[R0, #+0]
   \   000000A6   0x.... 0x....      BL       __aeabi_i2d
   \   000000AA   0x2200             MOVS     R2,#+0
   \   000000AC   0x....             LDR.N    R3,??DataTable4_3  ;; 0x40040000
   \   000000AE   0x.... 0x....      BL       __aeabi_dmul
   \   000000B2   0x.... 0x....      BL       __aeabi_d2iz
   \   000000B6   0x0001             MOVS     R1,R0
   \   000000B8   0x2000             MOVS     R0,#+0
   \   000000BA   0x.... 0x....      BL       hw_pit_init
     33              hw_pit_init(1, 0XFFFFFFFF);               //初始化pit0，周期20ms                     //开pit中断
   \   000000BE   0xF05F 0x31FF      MOVS     R1,#-1
   \   000000C2   0x2001             MOVS     R0,#+1
   \   000000C4   0x.... 0x....      BL       hw_pit_init
     34              LED1_OFF;
   \   000000C8   0x2201             MOVS     R2,#+1
   \   000000CA   0x2103             MOVS     R1,#+3
   \   000000CC   0x2001             MOVS     R0,#+1
   \   000000CE   0x.... 0x....      BL       hw_gpio_set
     35              LED2_OFF;
   \   000000D2   0x2201             MOVS     R2,#+1
   \   000000D4   0x210A             MOVS     R1,#+10
   \   000000D6   0x2001             MOVS     R0,#+1
   \   000000D8   0x.... 0x....      BL       hw_gpio_set
     36              LED3_OFF;
   \   000000DC   0x2201             MOVS     R2,#+1
   \   000000DE   0x2110             MOVS     R1,#+16
   \   000000E0   0x2001             MOVS     R0,#+1
   \   000000E2   0x.... 0x....      BL       hw_gpio_set
     37              AnalogSPI();
   \   000000E6   0x.... 0x....      BL       AnalogSPI
     38              //Init_BMP085();
     39              //Init_HMC5883L();//磁力计
     40              InitBMA180();//加速度计
   \   000000EA   0x.... 0x....      BL       InitBMA180
     41              InitMPU3205();//陀螺仪
   \   000000EE   0x.... 0x....      BL       InitMPU3205
     42              InitMPUsteer(); 
   \   000000F2   0x.... 0x....      BL       InitMPUsteer
     43              InitBMAsteer();
   \   000000F6   0x.... 0x....      BL       InitBMAsteer
     44              LED2_ON;
   \   000000FA   0x2200             MOVS     R2,#+0
   \   000000FC   0x210A             MOVS     R1,#+10
   \   000000FE   0x2001             MOVS     R0,#+1
   \   00000100   0x.... 0x....      BL       hw_gpio_set
     45              while(!InitOpticalFlowSensor());
   \                     ??Initial_0:
   \   00000104   0x.... 0x....      BL       InitOpticalFlowSensor
   \   00000108   0x2800             CMP      R0,#+0
   \   0000010A   0xD0FB             BEQ.N    ??Initial_0
     46              LED3_ON;
   \   0000010C   0x2200             MOVS     R2,#+0
   \   0000010E   0x2110             MOVS     R1,#+16
   \   00000110   0x2001             MOVS     R0,#+1
   \   00000112   0x.... 0x....      BL       hw_gpio_set
     47              //Init_L3G4200D();
     48              //Init_ADXL345();
     49              LPLD_GPIO_Init(PORTE, 5, 0, 1, 11);              //e0 下降中断
   \   00000116   0x200B             MOVS     R0,#+11
   \   00000118   0x9000             STR      R0,[SP, #+0]
   \   0000011A   0x2301             MOVS     R3,#+1
   \   0000011C   0x2200             MOVS     R2,#+0
   \   0000011E   0x2105             MOVS     R1,#+5
   \   00000120   0x....             LDR.N    R0,??DataTable4_4  ;; 0x4004d000
   \   00000122   0x.... 0x....      BL       LPLD_GPIO_Init
     50              LPLD_GPIO_SetIsr(PORTE, PORTE_isr);
   \   00000126   0x....             LDR.N    R1,??DataTable4_5
   \   00000128   0x....             LDR.N    R0,??DataTable4_4  ;; 0x4004d000
   \   0000012A   0x.... 0x....      BL       LPLD_GPIO_SetIsr
     51              enable_irq(107);
   \   0000012E   0x206B             MOVS     R0,#+107
   \   00000130   0x.... 0x....      BL       enable_irq
     52              SetIrqsPrio();
   \   00000134   0x.... 0x....      BL       SetIrqsPrio
     53              return true;
   \   00000138   0x2001             MOVS     R0,#+1
   \   0000013A   0xBD02             POP      {R1,PC}          ;; return
     54          }
     55          

   \                                 In section .text, align 2, keep-with-next
     56          bool CheckHeightSensor(void)
     57          {
   \                     CheckHeightSensor:
   \   00000000   0xB510             PUSH     {R4,LR}
     58              for(uint16 i = 0; i < 1000; i++ )
   \   00000002   0x2400             MOVS     R4,#+0
   \   00000004   0xE000             B.N      ??CheckHeightSensor_0
   \                     ??CheckHeightSensor_1:
   \   00000006   0x1C64             ADDS     R4,R4,#+1
   \                     ??CheckHeightSensor_0:
   \   00000008   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \   0000000A   0xF5B4 0x7F7A      CMP      R4,#+1000
   \   0000000E   0xD245             BCS.N    ??CheckHeightSensor_2
     59              {
     60                  static uint8 temp = 0;
     61          
     62                  Trig_ON;
   \   00000010   0x2201             MOVS     R2,#+1
   \   00000012   0x2112             MOVS     R1,#+18
   \   00000014   0x2002             MOVS     R0,#+2
   \   00000016   0x.... 0x....      BL       hw_gpio_set
     63                  Delay_10us();
   \   0000001A   0x.... 0x....      BL       Delay_10us
     64                  Trig_OFF;
   \   0000001E   0x2200             MOVS     R2,#+0
   \   00000020   0x2112             MOVS     R1,#+18
   \   00000022   0x2002             MOVS     R0,#+2
   \   00000024   0x.... 0x....      BL       hw_gpio_set
     65                  Delay_ms(30);
   \   00000028   0x....             LDR.N    R0,??DataTable4_6  ;; 0x41f00000
   \   0000002A   0x.... 0x....      BL       Delay_ms
     66                  if( Height_update == true)
   \   0000002E   0x....             LDR.N    R0,??DataTable4_7
   \   00000030   0x7800             LDRB     R0,[R0, #+0]
   \   00000032   0x2800             CMP      R0,#+0
   \   00000034   0xD012             BEQ.N    ??CheckHeightSensor_3
     67                  {
     68                      Height_update = false;
   \   00000036   0x....             LDR.N    R0,??DataTable4_7
   \   00000038   0x2100             MOVS     R1,#+0
   \   0000003A   0x7001             STRB     R1,[R0, #+0]
     69                      BaseHeight = (BaseHeight + Height) / 2;
   \   0000003C   0x....             LDR.N    R0,??DataTable4_8
   \   0000003E   0x8800             LDRH     R0,[R0, #+0]
   \   00000040   0x....             LDR.N    R1,??DataTable4_9
   \   00000042   0x8809             LDRH     R1,[R1, #+0]
   \   00000044   0xFA11 0xF080      UXTAH    R0,R1,R0
   \   00000048   0x2102             MOVS     R1,#+2
   \   0000004A   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   0000004E   0x....             LDR.N    R1,??DataTable4_8
   \   00000050   0x8008             STRH     R0,[R1, #+0]
     70                      temp++;
   \   00000052   0x....             LDR.N    R0,??DataTable4_10
   \   00000054   0x7800             LDRB     R0,[R0, #+0]
   \   00000056   0x1C40             ADDS     R0,R0,#+1
   \   00000058   0x....             LDR.N    R1,??DataTable4_10
   \   0000005A   0x7008             STRB     R0,[R1, #+0]
     71                  }
     72                  if(temp >= 10)
   \                     ??CheckHeightSensor_3:
   \   0000005C   0x....             LDR.N    R0,??DataTable4_10
   \   0000005E   0x7800             LDRB     R0,[R0, #+0]
   \   00000060   0x280A             CMP      R0,#+10
   \   00000062   0xD3D0             BCC.N    ??CheckHeightSensor_1
     73                  {
     74                    lastHeight = BaseHeight  ;
   \   00000064   0x....             LDR.N    R0,??DataTable4_8
   \   00000066   0x8800             LDRH     R0,[R0, #+0]
   \   00000068   0x.... 0x....      BL       __aeabi_ui2f
   \   0000006C   0x....             LDR.N    R1,??DataTable4_11
   \   0000006E   0x6008             STR      R0,[R1, #+0]
     75                    preHeight = BaseHeight ;
   \   00000070   0x....             LDR.N    R0,??DataTable4_8
   \   00000072   0x8800             LDRH     R0,[R0, #+0]
   \   00000074   0x.... 0x....      BL       __aeabi_ui2f
   \   00000078   0x....             LDR.N    R1,??DataTable4_12
   \   0000007A   0x6008             STR      R0,[R1, #+0]
     76                    break;
   \   0000007C   0xE00E             B.N      ??CheckHeightSensor_2
     77                  }
     78              }
     79          
     80              while(BaseHeight < 2 || BaseHeight > 20)
     81              {
     82                  LED1_Change;
   \                     ??CheckHeightSensor_4:
   \   0000007E   0x2103             MOVS     R1,#+3
   \   00000080   0x2001             MOVS     R0,#+1
   \   00000082   0x.... 0x....      BL       hw_gpio_reverse
     83                  LED2_Change;
   \   00000086   0x210A             MOVS     R1,#+10
   \   00000088   0x2001             MOVS     R0,#+1
   \   0000008A   0x.... 0x....      BL       hw_gpio_reverse
     84                  LED3_Change;
   \   0000008E   0x2110             MOVS     R1,#+16
   \   00000090   0x2001             MOVS     R0,#+1
   \   00000092   0x.... 0x....      BL       hw_gpio_reverse
     85                  Delay_ms(30);
   \   00000096   0x....             LDR.N    R0,??DataTable4_6  ;; 0x41f00000
   \   00000098   0x.... 0x....      BL       Delay_ms
     86              }
   \                     ??CheckHeightSensor_2:
   \   0000009C   0x....             LDR.N    R0,??DataTable4_8
   \   0000009E   0x8800             LDRH     R0,[R0, #+0]
   \   000000A0   0x1E80             SUBS     R0,R0,#+2
   \   000000A2   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   000000A4   0x2813             CMP      R0,#+19
   \   000000A6   0xD2EA             BCS.N    ??CheckHeightSensor_4
     87          
     88              return true;
   \   000000A8   0x2001             MOVS     R0,#+1
   \   000000AA   0xBD10             POP      {R4,PC}          ;; return
     89          }

   \                                 In section .bss, align 1
   \                     ??temp:
   \   00000000                      DS8 1
     90          

   \                                 In section .text, align 2, keep-with-next
     91          void FloatToByte(float floatNum, unsigned char *byteArry)
     92          {
   \                     FloatToByte:
   \   00000000   0xB401             PUSH     {R0}
     93              char *pchar = (char *)&floatNum;
   \   00000002   0xA800             ADD      R0,SP,#+0
     94              for(int i = 0; i < sizeof(float); i++)
   \   00000004   0x2200             MOVS     R2,#+0
   \   00000006   0xE004             B.N      ??FloatToByte_0
     95              {
     96                  *byteArry = *pchar;
   \                     ??FloatToByte_1:
   \   00000008   0x7803             LDRB     R3,[R0, #+0]
   \   0000000A   0x700B             STRB     R3,[R1, #+0]
     97                  pchar++;
   \   0000000C   0x1C40             ADDS     R0,R0,#+1
     98                  byteArry++;
   \   0000000E   0x1C49             ADDS     R1,R1,#+1
     99              }
   \   00000010   0x1C52             ADDS     R2,R2,#+1
   \                     ??FloatToByte_0:
   \   00000012   0x2A04             CMP      R2,#+4
   \   00000014   0xD3F8             BCC.N    ??FloatToByte_1
    100          }
   \   00000016   0xB001             ADD      SP,SP,#+4
   \   00000018   0x4770             BX       LR               ;; return

   \                                 In section .text, align 2, keep-with-next
    101          void Int32ToByte(int32 intNum,unsigned char *byteArry)
    102          {
   \                     Int32ToByte:
   \   00000000   0xB401             PUSH     {R0}
    103            char *pchar = (char *)&intNum;
   \   00000002   0xA800             ADD      R0,SP,#+0
    104              for(int i = 0; i < sizeof(int32); i++)
   \   00000004   0x2200             MOVS     R2,#+0
   \   00000006   0xE004             B.N      ??Int32ToByte_0
    105              {
    106                  *byteArry = *pchar;
   \                     ??Int32ToByte_1:
   \   00000008   0x7803             LDRB     R3,[R0, #+0]
   \   0000000A   0x700B             STRB     R3,[R1, #+0]
    107                  pchar++;
   \   0000000C   0x1C40             ADDS     R0,R0,#+1
    108                  byteArry++;
   \   0000000E   0x1C49             ADDS     R1,R1,#+1
    109              }
   \   00000010   0x1C52             ADDS     R2,R2,#+1
   \                     ??Int32ToByte_0:
   \   00000012   0x2A04             CMP      R2,#+4
   \   00000014   0xD3F8             BCC.N    ??Int32ToByte_1
    110          
    111          }
   \   00000016   0xB001             ADD      SP,SP,#+4
   \   00000018   0x4770             BX       LR               ;; return
    112          

   \                                 In section .text, align 2, keep-with-next
    113          void SendFloat(float floatNum,UART_MemMapPtr uartch)
    114          {
   \                     SendFloat:
   \   00000000   0xB571             PUSH     {R0,R4-R6,LR}
   \   00000002   0xB081             SUB      SP,SP,#+4
   \   00000004   0x000C             MOVS     R4,R1
    115              char *pchar = (char *)&floatNum;
   \   00000006   0xAD01             ADD      R5,SP,#+4
    116              for(int m = 0; m < sizeof(float); m++)
   \   00000008   0x2600             MOVS     R6,#+0
   \   0000000A   0xE005             B.N      ??SendFloat_0
    117              {
    118                  uart_send1 (uartch, *pchar);
   \                     ??SendFloat_1:
   \   0000000C   0x7829             LDRB     R1,[R5, #+0]
   \   0000000E   0x0020             MOVS     R0,R4
   \   00000010   0x.... 0x....      BL       uart_send1
    119                  pchar++;
   \   00000014   0x1C6D             ADDS     R5,R5,#+1
    120              }
   \   00000016   0x1C76             ADDS     R6,R6,#+1
   \                     ??SendFloat_0:
   \   00000018   0x2E04             CMP      R6,#+4
   \   0000001A   0xD3F7             BCC.N    ??SendFloat_1
    121          }
   \   0000001C   0xBD73             POP      {R0,R1,R4-R6,PC}  ;; return
    122          

   \                                 In section .text, align 2, keep-with-next
    123          void SendInt32(int32 intNum,UART_MemMapPtr uartch)
    124          {
   \                     SendInt32:
   \   00000000   0xB571             PUSH     {R0,R4-R6,LR}
   \   00000002   0xB081             SUB      SP,SP,#+4
   \   00000004   0x000C             MOVS     R4,R1
    125              uint8 *pchar = (uint8 *)&intNum;
   \   00000006   0xAD01             ADD      R5,SP,#+4
    126          
    127              for(int m = 0; m < sizeof(int32); m++)
   \   00000008   0x2600             MOVS     R6,#+0
   \   0000000A   0xE005             B.N      ??SendInt32_0
    128              {
    129                  uart_send1 (uartch, *pchar);//*pchar);
   \                     ??SendInt32_1:
   \   0000000C   0x7829             LDRB     R1,[R5, #+0]
   \   0000000E   0x0020             MOVS     R0,R4
   \   00000010   0x.... 0x....      BL       uart_send1
    130                  pchar++;
   \   00000014   0x1C6D             ADDS     R5,R5,#+1
    131              }
   \   00000016   0x1C76             ADDS     R6,R6,#+1
   \                     ??SendInt32_0:
   \   00000018   0x2E04             CMP      R6,#+4
   \   0000001A   0xD3F7             BCC.N    ??SendInt32_1
    132          
    133          }
   \   0000001C   0xBD73             POP      {R0,R1,R4-R6,PC}  ;; return
    134          
    135          

   \                                 In section .text, align 2, keep-with-next
    136          void SendStopToGUI(void)
    137          {
   \                     SendStopToGUI:
   \   00000000   0xB510             PUSH     {R4,LR}
    138              uint8 sendtemp = 0;
   \   00000002   0x2400             MOVS     R4,#+0
    139              Delay_ms(200);
   \   00000004   0x....             LDR.N    R0,??DataTable4_13  ;; 0x43480000
   \   00000006   0x.... 0x....      BL       Delay_ms
    140              for(sendtemp = 0; sendtemp < 10; sendtemp++)
   \   0000000A   0x2000             MOVS     R0,#+0
   \   0000000C   0x0004             MOVS     R4,R0
   \   0000000E   0xE00C             B.N      ??SendStopToGUI_0
    141              {
    142                  uart_send1 (UART1, 0x70);
   \                     ??SendStopToGUI_1:
   \   00000010   0x2170             MOVS     R1,#+112
   \   00000012   0x....             LDR.N    R0,??DataTable4_2  ;; 0x4006b000
   \   00000014   0x.... 0x....      BL       uart_send1
    143                  sendtemp++;
   \   00000018   0x1C64             ADDS     R4,R4,#+1
    144                  Delay_ms(20);
   \   0000001A   0x....             LDR.N    R0,??DataTable4_14  ;; 0x41a00000
   \   0000001C   0x.... 0x....      BL       Delay_ms
    145                  LED_Change;
   \   00000020   0x210F             MOVS     R1,#+15
   \   00000022   0x2000             MOVS     R0,#+0
   \   00000024   0x.... 0x....      BL       hw_gpio_reverse
    146              }
   \   00000028   0x1C64             ADDS     R4,R4,#+1
   \                     ??SendStopToGUI_0:
   \   0000002A   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \   0000002C   0x2C0A             CMP      R4,#+10
   \   0000002E   0xD3EF             BCC.N    ??SendStopToGUI_1
    147              SendToGUI_Flag = false;
   \   00000030   0x....             LDR.N    R0,??DataTable4_15
   \   00000032   0x2100             MOVS     R1,#+0
   \   00000034   0x7001             STRB     R1,[R0, #+0]
    148          }
   \   00000036   0xBD10             POP      {R4,PC}          ;; return
    149          
    150          

   \                                 In section .text, align 2, keep-with-next
    151          float High_update(void)
    152          {
   \                     High_update:
   \   00000000   0xB580             PUSH     {R7,LR}
    153              float high = 0;
   \   00000002   0x2000             MOVS     R0,#+0
    154              static float h;
    155              
    156              if(Height_update == true)
   \   00000004   0x....             LDR.N    R1,??DataTable4_7
   \   00000006   0x7809             LDRB     R1,[R1, #+0]
   \   00000008   0x2900             CMP      R1,#+0
   \   0000000A   0xD010             BEQ.N    ??High_update_0
    157              { 
    158                  Integral_high = true;
   \   0000000C   0x....             LDR.N    R0,??DataTable4_16
   \   0000000E   0x2101             MOVS     R1,#+1
   \   00000010   0x7001             STRB     R1,[R0, #+0]
    159                  Height_update = false;       
   \   00000012   0x....             LDR.N    R0,??DataTable4_7
   \   00000014   0x2100             MOVS     R1,#+0
   \   00000016   0x7001             STRB     R1,[R0, #+0]
    160                  h =  median(data_high, 7, (float)Height);
   \   00000018   0x....             LDR.N    R0,??DataTable4_9
   \   0000001A   0x8800             LDRH     R0,[R0, #+0]
   \   0000001C   0x.... 0x....      BL       __aeabi_ui2f
   \   00000020   0x0002             MOVS     R2,R0
   \   00000022   0x2107             MOVS     R1,#+7
   \   00000024   0x....             LDR.N    R0,??DataTable4_17
   \   00000026   0x.... 0x....      BL       median
   \   0000002A   0x....             LDR.N    R1,??DataTable4_18
   \   0000002C   0x6008             STR      R0,[R1, #+0]
    161          //           if(ph <= &wh[5999])
    162          //           {
    163          //             *ph = Height;
    164          //              ph++;
    165          //           }    
    166              }
    167             
    168              high =  kalman_filter1(h);
   \                     ??High_update_0:
   \   0000002E   0x....             LDR.N    R0,??DataTable4_18
   \   00000030   0x6800             LDR      R0,[R0, #+0]
   \   00000032   0x.... 0x....      BL       kalman_filter1
    169              if(high >= 180)Landing = true;
   \   00000036   0x....             LDR.N    R1,??DataTable4_19  ;; 0x43340000
   \   00000038   0x.... 0x....      BL       __aeabi_cfrcmple
   \   0000003C   0xD802             BHI.N    ??High_update_1
   \   0000003E   0x....             LDR.N    R1,??DataTable4_20
   \   00000040   0x2201             MOVS     R2,#+1
   \   00000042   0x700A             STRB     R2,[R1, #+0]
    170              return high;
   \                     ??High_update_1:
   \   00000044   0xBD02             POP      {R1,PC}          ;; return
    171          }

   \                                 In section .bss, align 4
   \                     ??h:
   \   00000000                      DS8 4
    172          

   \                                 In section .text, align 2, keep-with-next
    173          void SendDataToGUI(void)
    174          {
   \                     SendDataToGUI:
   \   00000000   0xB538             PUSH     {R3-R5,LR}
    175          
    176              Send_flag = false;
   \   00000002   0x....             LDR.N    R0,??DataTable4_21
   \   00000004   0x2100             MOVS     R1,#+0
   \   00000006   0x7001             STRB     R1,[R0, #+0]
    177              int data_length = 0;
   \   00000008   0x2400             MOVS     R4,#+0
    178              Delay_ms(200);
   \   0000000A   0x....             LDR.N    R0,??DataTable4_13  ;; 0x43480000
   \   0000000C   0x.... 0x....      BL       Delay_ms
    179              data_length = dataLencounter;
   \   00000010   0x....             LDR.N    R0,??DataTable4_22
   \   00000012   0x6800             LDR      R0,[R0, #+0]
   \   00000014   0x0004             MOVS     R4,R0
    180              if(data_length > DataLength)data_length = DataLength;
   \   00000016   0xF241 0x7071      MOVW     R0,#+6001
   \   0000001A   0x4284             CMP      R4,R0
   \   0000001C   0xDB01             BLT.N    ??SendDataToGUI_0
   \   0000001E   0xF241 0x7470      MOVW     R4,#+6000
    181              //////////////////////发送数据长度///////////////////////////////////////////////
    182              SendFloat((float)data_length,UART0);
   \                     ??SendDataToGUI_0:
   \   00000022   0x....             LDR.N    R1,??DataTable4_1  ;; 0x4006a000
   \   00000024   0x000D             MOVS     R5,R1
   \   00000026   0x0020             MOVS     R0,R4
   \   00000028   0x.... 0x....      BL       __aeabi_i2f
   \   0000002C   0x0029             MOVS     R1,R5
   \   0000002E   0x.... 0x....      BL       SendFloat
    183              Delay_ms(120);
   \   00000032   0x....             LDR.N    R0,??DataTable4_23  ;; 0x42f00000
   \   00000034   0x.... 0x....      BL       Delay_ms
    184              LED_Change;
   \   00000038   0x210F             MOVS     R1,#+15
   \   0000003A   0x2000             MOVS     R0,#+0
   \   0000003C   0x.... 0x....      BL       hw_gpio_reverse
    185              //////////////////////发送X方向位移//////////////////////////////////////////////
    186              for(int i = 0;i < data_length;i++)
   \   00000040   0x2500             MOVS     R5,#+0
   \   00000042   0xE011             B.N      ??SendDataToGUI_1
    187              {
    188                //SendInt32(wx[i],UART0);
    189                SendFloat(wx[i],UART0);
   \                     ??SendDataToGUI_2:
   \   00000044   0x....             LDR.N    R1,??DataTable4_1  ;; 0x4006a000
   \   00000046   0x....             LDR.N    R0,??DataTable4_24
   \   00000048   0xF850 0x0025      LDR      R0,[R0, R5, LSL #+2]
   \   0000004C   0x.... 0x....      BL       SendFloat
    190                if(i % 103 == 0)
   \   00000050   0x2067             MOVS     R0,#+103
   \   00000052   0xFB95 0xF1F0      SDIV     R1,R5,R0
   \   00000056   0xFB00 0x5011      MLS      R0,R0,R1,R5
   \   0000005A   0x2800             CMP      R0,#+0
   \   0000005C   0xD103             BNE.N    ??SendDataToGUI_3
    191                {
    192                //  Delay_ms(110);
    193                  LED_Change;
   \   0000005E   0x210F             MOVS     R1,#+15
   \   00000060   0x2000             MOVS     R0,#+0
   \   00000062   0x.... 0x....      BL       hw_gpio_reverse
    194                }
    195              }
   \                     ??SendDataToGUI_3:
   \   00000066   0x1C6D             ADDS     R5,R5,#+1
   \                     ??SendDataToGUI_1:
   \   00000068   0x42A5             CMP      R5,R4
   \   0000006A   0xDBEB             BLT.N    ??SendDataToGUI_2
    196              //////////////////////发送Y方向位移//////////////////////////////////////////////
    197              for(int i = 0;i < data_length;i++)
   \   0000006C   0x2500             MOVS     R5,#+0
   \   0000006E   0xE011             B.N      ??SendDataToGUI_4
    198              {
    199                //SendInt32(wx[i],UART0);
    200                SendFloat(wy[i],UART0);
   \                     ??SendDataToGUI_5:
   \   00000070   0x....             LDR.N    R1,??DataTable4_1  ;; 0x4006a000
   \   00000072   0x....             LDR.N    R0,??DataTable4_25
   \   00000074   0xF850 0x0025      LDR      R0,[R0, R5, LSL #+2]
   \   00000078   0x.... 0x....      BL       SendFloat
    201                if(i % 103 == 0)
   \   0000007C   0x2067             MOVS     R0,#+103
   \   0000007E   0xFB95 0xF1F0      SDIV     R1,R5,R0
   \   00000082   0xFB00 0x5011      MLS      R0,R0,R1,R5
   \   00000086   0x2800             CMP      R0,#+0
   \   00000088   0xD103             BNE.N    ??SendDataToGUI_6
    202                {
    203                //  Delay_ms(110);
    204                  LED_Change;
   \   0000008A   0x210F             MOVS     R1,#+15
   \   0000008C   0x2000             MOVS     R0,#+0
   \   0000008E   0x.... 0x....      BL       hw_gpio_reverse
    205                }
    206              }
   \                     ??SendDataToGUI_6:
   \   00000092   0x1C6D             ADDS     R5,R5,#+1
   \                     ??SendDataToGUI_4:
   \   00000094   0x42A5             CMP      R5,R4
   \   00000096   0xDBEB             BLT.N    ??SendDataToGUI_5
    207              //////////////////////发送高度H/////////////////////////////////////////////////
    208              for(int i = 0;i < data_length;i++)
   \   00000098   0x2500             MOVS     R5,#+0
   \   0000009A   0xE011             B.N      ??SendDataToGUI_7
    209              {
    210                //SendInt32(wx[i],UART0);
    211                SendFloat(wz[i],UART0);
   \                     ??SendDataToGUI_8:
   \   0000009C   0x....             LDR.N    R1,??DataTable4_1  ;; 0x4006a000
   \   0000009E   0x....             LDR.N    R0,??DataTable4_26
   \   000000A0   0xF850 0x0025      LDR      R0,[R0, R5, LSL #+2]
   \   000000A4   0x.... 0x....      BL       SendFloat
    212                if(i % 103 == 0)
   \   000000A8   0x2067             MOVS     R0,#+103
   \   000000AA   0xFB95 0xF1F0      SDIV     R1,R5,R0
   \   000000AE   0xFB00 0x5011      MLS      R0,R0,R1,R5
   \   000000B2   0x2800             CMP      R0,#+0
   \   000000B4   0xD103             BNE.N    ??SendDataToGUI_9
    213                {
    214                //  Delay_ms(110);
    215                  LED_Change;
   \   000000B6   0x210F             MOVS     R1,#+15
   \   000000B8   0x2000             MOVS     R0,#+0
   \   000000BA   0x.... 0x....      BL       hw_gpio_reverse
    216                }
    217              }
   \                     ??SendDataToGUI_9:
   \   000000BE   0x1C6D             ADDS     R5,R5,#+1
   \                     ??SendDataToGUI_7:
   \   000000C0   0x42A5             CMP      R5,R4
   \   000000C2   0xDBEB             BLT.N    ??SendDataToGUI_8
    218          
    219          }
   \   000000C4   0xBD31             POP      {R0,R4,R5,PC}    ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4:
   \   00000000   0x........         DC32     periph_clk_khz

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_1:
   \   00000000   0x4006A000         DC32     0x4006a000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_2:
   \   00000000   0x4006B000         DC32     0x4006b000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_3:
   \   00000000   0x40040000         DC32     0x40040000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_4:
   \   00000000   0x4004D000         DC32     0x4004d000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_5:
   \   00000000   0x........         DC32     PORTE_isr

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_6:
   \   00000000   0x41F00000         DC32     0x41f00000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_7:
   \   00000000   0x........         DC32     Height_update

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_8:
   \   00000000   0x........         DC32     BaseHeight

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_9:
   \   00000000   0x........         DC32     Height

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_10:
   \   00000000   0x........         DC32     ??temp

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_11:
   \   00000000   0x........         DC32     lastHeight

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_12:
   \   00000000   0x........         DC32     preHeight

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_13:
   \   00000000   0x43480000         DC32     0x43480000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_14:
   \   00000000   0x41A00000         DC32     0x41a00000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_15:
   \   00000000   0x........         DC32     SendToGUI_Flag

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_16:
   \   00000000   0x........         DC32     Integral_high

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_17:
   \   00000000   0x........         DC32     data_high

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_18:
   \   00000000   0x........         DC32     ??h

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_19:
   \   00000000   0x43340000         DC32     0x43340000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_20:
   \   00000000   0x........         DC32     Landing

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_21:
   \   00000000   0x........         DC32     Send_flag

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_22:
   \   00000000   0x........         DC32     dataLencounter

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_23:
   \   00000000   0x42F00000         DC32     0x42f00000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_24:
   \   00000000   0x........         DC32     wx

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_25:
   \   00000000   0x........         DC32     wy

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4_26:
   \   00000000   0x........         DC32     wz

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
        8  CheckHeightSensor
              8 -> Delay_10us
              8 -> Delay_ms
              8 -> __aeabi_ui2f
              8 -> hw_gpio_reverse
              8 -> hw_gpio_set
        4  FloatToByte
        8  High_update
              8 -> __aeabi_cfrcmple
              8 -> __aeabi_ui2f
              8 -> kalman_filter1
              8 -> median
        8  Initial
              8 -> AnalogSPI
              8 -> InitBMA180
              8 -> InitBMAsteer
              8 -> InitMPU3205
              8 -> InitMPUsteer
              8 -> InitOpticalFlowSensor
              8 -> LPLD_GPIO_Init
              8 -> LPLD_GPIO_SetIsr
              8 -> SetIrqsPrio
              8 -> SteerPWM_init
              8 -> __aeabi_d2iz
              8 -> __aeabi_dmul
              8 -> __aeabi_i2d
              8 -> enable_irq
              8 -> enableuartreint
              8 -> hw_FTM_init
              8 -> hw_gpio_init
              8 -> hw_gpio_set
              8 -> hw_i2c_init
              8 -> hw_pit_init
              8 -> uart_init
        4  Int32ToByte
       16  SendDataToGUI
             16 -> Delay_ms
             16 -> SendFloat
             16 -> __aeabi_i2f
             16 -> hw_gpio_reverse
       24  SendFloat
             24 -> uart_send1
       24  SendInt32
             24 -> uart_send1
        8  SendStopToGUI
              8 -> Delay_ms
              8 -> hw_gpio_reverse
              8 -> uart_send1
        8  SetIrqsPrio
              8 -> set_irq_priority


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable4
       4  ??DataTable4_1
       4  ??DataTable4_10
       4  ??DataTable4_11
       4  ??DataTable4_12
       4  ??DataTable4_13
       4  ??DataTable4_14
       4  ??DataTable4_15
       4  ??DataTable4_16
       4  ??DataTable4_17
       4  ??DataTable4_18
       4  ??DataTable4_19
       4  ??DataTable4_2
       4  ??DataTable4_20
       4  ??DataTable4_21
       4  ??DataTable4_22
       4  ??DataTable4_23
       4  ??DataTable4_24
       4  ??DataTable4_25
       4  ??DataTable4_26
       4  ??DataTable4_3
       4  ??DataTable4_4
       4  ??DataTable4_5
       4  ??DataTable4_6
       4  ??DataTable4_7
       4  ??DataTable4_8
       4  ??DataTable4_9
     172  CheckHeightSensor
      26  FloatToByte
      70  High_update
     316  Initial
      26  Int32ToByte
       1  Integral_high
     198  SendDataToGUI
      30  SendFloat
      30  SendInt32
      56  SendStopToGUI
       1  SendToGUI_Flag
      28  SetIrqsPrio
       4  floatToByte
       4  h
       1  temp

 
    10 bytes in section .bss
     1 byte  in section .data
 1 060 bytes in section .text
 
 1 060 bytes of CODE memory
    11 bytes of DATA memory

Errors: none
Warnings: none
