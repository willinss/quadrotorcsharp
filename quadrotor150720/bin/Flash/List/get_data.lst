###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.40.1.53790/W32 for ARM     03/Aug/2015  09:48:12 #
# Copyright 1999-2012 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  C:\Users\Thinkpad\Desktop\quadrotor150720飞行器跟随小车( #
#                    改I2C)\src\Sources\C\Component_C\get_data.c              #
#    Command line =  "C:\Users\Thinkpad\Desktop\quadrotor150720飞行器跟随小车 #
#                    (改I2C)\src\Sources\C\Component_C\get_data.c" -D IAR -D  #
#                    TWR_K60N512 -lCN "C:\Users\Thinkpad\Desktop\quadrotor150 #
#                    720飞行器跟随小车(改I2C)\bin\Flash\List\" -lB            #
#                    "C:\Users\Thinkpad\Desktop\quadrotor150720飞行器跟随小车 #
#                    (改I2C)\bin\Flash\List\" -o                              #
#                    "C:\Users\Thinkpad\Desktop\quadrotor150720飞行器跟随小车 #
#                    (改I2C)\bin\Flash\Obj\" --no_cse --no_unroll             #
#                    --no_inline --no_code_motion --no_tbaa --no_clustering   #
#                    --no_scheduling --debug --endian=little --cpu=Cortex-M4  #
#                    -e --fpu=None --dlib_config "E:\Program Files\IAR        #
#                    Systems\Embedded Workbench 6.4\arm\INC\c\DLib_Config_Nor #
#                    mal.h" -I "C:\Users\Thinkpad\Desktop\quadrotor150720飞行 #
#                    器跟随小车(改I2C)\src\Sources\H\" -I                     #
#                    "C:\Users\Thinkpad\Desktop\quadrotor150720飞行器跟随小车 #
#                    (改I2C)\src\Sources\H\Component_H\" -I                   #
#                    "C:\Users\Thinkpad\Desktop\quadrotor150720飞行器跟随小车 #
#                    (改I2C)\src\Sources\H\Frame_H\" -Ol --use_c++_inline     #
#    List file    =  C:\Users\Thinkpad\Desktop\quadrotor150720飞行器跟随小车( #
#                    改I2C)\bin\Flash\List\get_data.lst                       #
#    Object file  =  C:\Users\Thinkpad\Desktop\quadrotor150720飞行器跟随小车( #
#                    改I2C)\bin\Flash\Obj\get_data.o                          #
#                                                                             #
#                                                                             #
###############################################################################

C:\Users\Thinkpad\Desktop\quadrotor150720飞行器跟随小车(改I2C)\src\Sources\C\Component_C\get_data.c
      1          #include  <math.h>
      2          #include "get_data.h"
      3          #include  "hw_i2c.h"
      4          #include  "uart.h"
      5          #include  "stdio.h"
      6          #include  "pit.h"
      7          #include "Balance_Kalman.h"
      8          #include "isr.h"
      9          #include "hw_gpio.h"
     10          #include"OpticalSensor.h"
     11          
     12          #define   OSS 0	 //	BMP085使用
     13          
     14          //定义器件在IIC总线中的从地址,根据ALT  ADDRESS地址引脚不同修改
     15          #define	HMC5883L_Addr   0x3C	//磁场传感器器件地址
     16          #define	ADXL345_Addr    0xA6	//加速度传感器器件地址
     17          #define	BMP085_Addr     0xee	//气压传感器器件地址
     18          #define	L3G4200_Addr    0xD2	//陀螺仪传感器器件地址
     19          
     20          //定义MPU3050内部地址********************
     21          #define WHO     0x00
     22          #define	SMPL	0x15
     23          #define DLPF	0x16
     24          #define INT_C	0x17
     25          #define INT_S	0x1A
     26          #define	TMP_H	0x1B
     27          #define	TMP_L	0x1C
     28          #define	GX_H	0x1D
     29          #define	GX_L	0x1E
     30          #define	GY_H	0x1F
     31          #define	GY_L	0x20
     32          #define GZ_H	0x21
     33          #define GZ_L	0x22
     34          #define PWR_M	0x3E
     35          //****************************
     36          
     37          #define BMA180 		0x80
     38          #define ChipID		0x00
     39          #define Version		0x01
     40          #define DATAX0      0x02
     41          #define DATAX1      0x03
     42          #define DATAY0      0x04
     43          #define DATAY1      0x05
     44          #define DATAZ0      0x06
     45          #define DATAZ1      0x07
     46          #define Ctrl_reg0	0x0d
     47          #define Ctrl_reg1	0x0e
     48          #define Ctrl_reg2	0x0f
     49          #define BW_TCS		0x20
     50          #define Ctrl_reg3	0x21
     51          #define TCO_Z		0x30
     52          #define Offset_lsb1	0x35
     53          
     54          #define	MPU3205_Addr   0xD0	  //定义器件在IIC总线中的从地址,根据ALT  ADDRESS地址引脚不同修改
     55          

   \                                 In section .bss, align 4
     56          unsigned char BUF[6];                         //接收数据缓存区
   \                     BUF:
   \   00000000                      DS8 8

   \                                 In section .bss, align 1
     57          char  test = 0;
   \                     test:
   \   00000000                      DS8 1
     58          //int   x,y;
     59          //float angle;

   \                                 In section .bss, align 2
     60          short A_X, A_Y, A_Z;
   \                     A_X:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     A_Y:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     A_Z:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
     61          short T_X, T_Y, T_Z;
   \                     T_X:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     T_Y:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
   \                     T_Z:
   \   00000000                      DS8 2

   \                                 In section .bss, align 4
     62          int  mx, my, mz;
   \                     mx:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     my:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     mz:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     63          short data_xyz[3];
   \                     data_xyz:
   \   00000000                      DS8 8
     64          //float Roll,Pitch,Q,T,K;

   \                                 In section .bss, align 4
     65          float Angle_accx = 0, Angle_accy = 0, Angle_accz = 0;
   \                     Angle_accx:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     Angle_accy:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     Angle_accz:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     66          float Dot_gyro_x = 0, Dot_gyro_y = 0, Dot_gyro_z = 0;
   \                     Dot_gyro_x:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     Dot_gyro_y:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     Dot_gyro_z:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     67          float Angle_gyrox = 0, Angle_gyroy = 0, Angle_gyroz = 0;
   \                     Angle_gyrox:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     Angle_gyroy:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     Angle_gyroz:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     68          float Q_x, Q_y, Q_z;
   \                     Q_x:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     Q_y:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     Q_z:
   \   00000000                      DS8 4
     69          

   \                                 In section .bss, align 4
     70          float Q_x1, Q_y1, Q_z1;
   \                     Q_x1:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     Q_y1:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     Q_z1:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     71          float Dot_gyro_x0 = 0, Dot_gyro_y0 = 0, Dot_gyro_z0 = 0;
   \                     Dot_gyro_x0:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     Dot_gyro_y0:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     Dot_gyro_z0:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     72          float Angle_gyrox0 = 0, Angle_gyroy0 = 0, Angle_gyroz0 = 0;
   \                     Angle_gyrox0:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     Angle_gyroy0:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     Angle_gyroz0:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     73          float Angle_accx0 = 0, Angle_accy0 = 0, Angle_accz0 = 0;
   \                     Angle_accx0:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     Angle_accy0:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     Angle_accz0:
   \   00000000                      DS8 4
     74          
     75          //***BMP085使用

   \                                 In section .bss, align 4
     76          uint8 AC[22] = {0};
   \                     AC:
   \   00000000                      DS8 24

   \                                 In section .bss, align 2
     77          short ac1;
   \                     ac1:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
     78          short ac2;
   \                     ac2:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
     79          short ac3;
   \                     ac3:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
     80          unsigned short ac4;
   \                     ac4:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
     81          unsigned short ac5;
   \                     ac5:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
     82          unsigned short ac6;
   \                     ac6:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
     83          short b1;
   \                     b1:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
     84          short b2;
   \                     b2:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
     85          short mb;
   \                     mb:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
     86          short mc;
   \                     mc:
   \   00000000                      DS8 2

   \                                 In section .bss, align 2
     87          short md;
   \                     md:
   \   00000000                      DS8 2
     88          

   \                                 In section .bss, align 4
     89          long  temperature;
   \                     temperature:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     90          long  pressure;
   \                     pressure:
   \   00000000                      DS8 4
     91          

   \                                 In section .bss, align 4
     92          float Dot_xgyro, Dot_ygyro, Dot_zgyro , Dot_xacc, Dot_yacc, Dot_zacc;
   \                     Dot_xgyro:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     Dot_ygyro:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     Dot_zgyro:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     Dot_xacc:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     Dot_yacc:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     Dot_zacc:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     93          float Dot_xgyro0, Dot_ygyro0, Dot_zgyro0 , Dot_xacc0, Dot_yacc0, Dot_zacc0;
   \                     Dot_xgyro0:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     Dot_ygyro0:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     Dot_zgyro0:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     Dot_xacc0:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     Dot_yacc0:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     Dot_zacc0:
   \   00000000                      DS8 4

   \                                 In section .bss, align 1
     94          signed char DeltX = 0, DeltY = 0;
   \                     DeltX:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
   \                     DeltY:
   \   00000000                      DS8 1

   \                                 In section .bss, align 8
     95          double SumDeltX = 0, SumDeltY = 0;
   \                     SumDeltX:
   \   00000000                      DS8 8

   \                                 In section .bss, align 8
   \                     SumDeltY:
   \   00000000                      DS8 8

   \                                 In section .bss, align 4
     96          int maxDelt = 0;
   \                     maxDelt:
   \   00000000                      DS8 4
     97          //--------------------------------------
     98          //##Soft filter 软件滤波
     99          #define FILTERNUM		4 //Soft filter buffer size
    100          #define FILTERMASK		3 //Idx from 0~7
    101          #define WARP(X)			(X=((X+1)&FILTERMASK))

   \                                 In section .bss, align 1
    102          uint8 GyroRolIdx = 0, GyroPitIdx = 0, GyroYawIdx = 0;
   \                     GyroRolIdx:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
   \                     GyroPitIdx:
   \   00000000                      DS8 1

   \                                 In section .bss, align 1
   \                     GyroYawIdx:
   \   00000000                      DS8 1

   \                                 In section .bss, align 4
    103          float   GyroRolBuf[FILTERNUM], GyroPitBuf[FILTERNUM], GyroYawBuf[FILTERNUM];
   \                     GyroRolBuf:
   \   00000000                      DS8 16

   \                                 In section .bss, align 4
   \                     GyroPitBuf:
   \   00000000                      DS8 16

   \                                 In section .bss, align 4
   \                     GyroYawBuf:
   \   00000000                      DS8 16

   \                                 In section .bss, align 4
    104          float 	dot_GyroRol, dot_GyroPit, dot_GyroYaw;
   \                     dot_GyroRol:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     dot_GyroPit:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     dot_GyroYaw:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
    105          float 	GyroRol, GyroPit, GyroYaw;
   \                     GyroRol:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     GyroPit:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     GyroYaw:
   \   00000000                      DS8 4
    106          
    107          void GyroRead();
    108          float Filter(float *value);
    109          int get_mid(int a, int b, int c);
    110          
    111          /********卡马克方法求算术平方根*********/

   \                                 In section .text, align 2, keep-with-next
    112          float SquareRootFloat(float number)
    113          {
   \                     SquareRootFloat:
   \   00000000   0xB5F0             PUSH     {R4-R7,LR}
   \   00000002   0x0004             MOVS     R4,R0
    114              long i;
    115              float x, y;
    116              const float f = 1.5F;
   \   00000004   0xF05F 0x577F      MOVS     R7,#+1069547520
    117              x = number * 0.5F;
   \   00000008   0xF05F 0x507C      MOVS     R0,#+1056964608
   \   0000000C   0x0021             MOVS     R1,R4
   \   0000000E   0x.... 0x....      BL       __aeabi_fmul
   \   00000012   0x0006             MOVS     R6,R0
    118              y  = number;
   \   00000014   0x0025             MOVS     R5,R4
    119              i  = * ( long * ) &y;
    120              i  = 0x5f3759df - ( i >> 1 );        //注意这一行
   \   00000016   0x.... 0x....      LDR.W    R0,??DataTable5  ;; 0x5f3759df
   \   0000001A   0xEBB0 0x0565      SUBS     R5,R0,R5, ASR #+1
    121              y  = * ( float * ) &i;
    122              y  = y * ( f - ( x * y * y ) );
   \   0000001E   0x0030             MOVS     R0,R6
   \   00000020   0x0029             MOVS     R1,R5
   \   00000022   0x.... 0x....      BL       __aeabi_fmul
   \   00000026   0x0029             MOVS     R1,R5
   \   00000028   0x.... 0x....      BL       __aeabi_fmul
   \   0000002C   0x0001             MOVS     R1,R0
   \   0000002E   0x0038             MOVS     R0,R7
   \   00000030   0x.... 0x....      BL       __aeabi_fsub
   \   00000034   0x0029             MOVS     R1,R5
   \   00000036   0x.... 0x....      BL       __aeabi_fmul
   \   0000003A   0x0005             MOVS     R5,R0
    123              y  = y * ( f - ( x * y * y ) );
   \   0000003C   0x0030             MOVS     R0,R6
   \   0000003E   0x0029             MOVS     R1,R5
   \   00000040   0x.... 0x....      BL       __aeabi_fmul
   \   00000044   0x0029             MOVS     R1,R5
   \   00000046   0x.... 0x....      BL       __aeabi_fmul
   \   0000004A   0x0001             MOVS     R1,R0
   \   0000004C   0x0038             MOVS     R0,R7
   \   0000004E   0x.... 0x....      BL       __aeabi_fsub
   \   00000052   0x0029             MOVS     R1,R5
   \   00000054   0x.... 0x....      BL       __aeabi_fmul
   \   00000058   0x0005             MOVS     R5,R0
    124              return number * y;
   \   0000005A   0x0020             MOVS     R0,R4
   \   0000005C   0x0029             MOVS     R1,R5
   \   0000005E   0x.... 0x....      BL       __aeabi_fmul
   \   00000062   0xBDF0             POP      {R4-R7,PC}       ;; return
    125          }
    126          //============================================================================
    127          //函数名称：Delay_Nms
    128          //功能概要：延时ms。
    129          //参数说明：N为延时的时间单位ms
    130          //函数返回：无
    131          //============================================================================

   \                                 In section .text, align 2, keep-with-next
    132          void Delay_ms(float n)
    133          {
   \                     Delay_ms:
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
    134              uint32 i = 24000;
   \   00000004   0xF645 0x50C0      MOVW     R0,#+24000
    135              i = (int)(i * n);
   \   00000008   0x.... 0x....      BL       __aeabi_ui2f
   \   0000000C   0x0021             MOVS     R1,R4
   \   0000000E   0x.... 0x....      BL       __aeabi_fmul
   \   00000012   0x.... 0x....      BL       __aeabi_f2iz
   \   00000016   0xE000             B.N      ??Delay_ms_0
    136              while(i > 0)i--;
   \                     ??Delay_ms_1:
   \   00000018   0x1E40             SUBS     R0,R0,#+1
   \                     ??Delay_ms_0:
   \   0000001A   0x2800             CMP      R0,#+0
   \   0000001C   0xD1FC             BNE.N    ??Delay_ms_1
    137          }
   \   0000001E   0xBD10             POP      {R4,PC}          ;; return

   \                                 In section .text, align 2, keep-with-next
    138          void Delay_10us()
    139          {
    140              uint32 i = 400;
   \                     Delay_10us:
   \   00000000   0xF44F 0x70C8      MOV      R0,#+400
   \   00000004   0xE000             B.N      ??Delay_10us_0
    141              //i = (int)(i * n);
    142              while(i > 0)i--;
   \                     ??Delay_10us_1:
   \   00000006   0x1E40             SUBS     R0,R0,#+1
   \                     ??Delay_10us_0:
   \   00000008   0x2800             CMP      R0,#+0
   \   0000000A   0xD1FC             BNE.N    ??Delay_10us_1
    143          }
   \   0000000C   0x4770             BX       LR               ;; return
    144          ////////////////////////////////////////////////////////////////////////////////

   \                                 In section .text, align 2, keep-with-next
    145          void uart_putchar(unsigned char data)
    146          {
    147              while(!(UART1_S1 & UART_S1_TDRE_MASK)); //等待发送缓冲区空
   \                     uart_putchar:
   \                     ??uart_putchar_0:
   \   00000000   0x.... 0x....      LDR.W    R1,??DataTable4  ;; 0x4006b004
   \   00000004   0x7809             LDRB     R1,[R1, #+0]
   \   00000006   0x0609             LSLS     R1,R1,#+24
   \   00000008   0xD5FA             BPL.N    ??uart_putchar_0
    148              UART1_D = data;
   \   0000000A   0x.... 0x....      LDR.W    R1,??DataTable5_1  ;; 0x4006b007
   \   0000000E   0x7008             STRB     R0,[R1, #+0]
    149          }
   \   00000010   0x4770             BX       LR               ;; return
    150          

   \                                 In section .text, align 2, keep-with-next
    151          void putstr(char ch[])
    152          {
   \                     putstr:
   \   00000000   0xB538             PUSH     {R3-R5,LR}
   \   00000002   0x0004             MOVS     R4,R0
    153              unsigned char ptr = 0;
   \   00000004   0x2500             MOVS     R5,#+0
   \   00000006   0xE004             B.N      ??putstr_0
    154              while(ch[ptr])
    155              {
    156                  uart_putchar((unsigned char)ch[ptr++]);
   \                     ??putstr_1:
   \   00000008   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   0000000A   0x5D28             LDRB     R0,[R5, R4]
   \   0000000C   0x.... 0x....      BL       uart_putchar
   \   00000010   0x1C6D             ADDS     R5,R5,#+1
    157              }
   \                     ??putstr_0:
   \   00000012   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000014   0x5D28             LDRB     R0,[R5, R4]
   \   00000016   0x2800             CMP      R0,#+0
   \   00000018   0xD1F6             BNE.N    ??putstr_1
    158          }
   \   0000001A   0xBD31             POP      {R0,R4,R5,PC}    ;; return
    159          

   \                                 In section .text, align 2, keep-with-next
    160          long bmp085ReadTemp(void)
    161          {
   \                     bmp085ReadTemp:
   \   00000000   0xB580             PUSH     {R7,LR}
    162              uint8  temp_ut_l = 0, temp_ut_h = 0;
   \   00000002   0x2000             MOVS     R0,#+0
   \   00000004   0xF88D 0x0001      STRB     R0,[SP, #+1]
   \   00000008   0x2000             MOVS     R0,#+0
   \   0000000A   0xF88D 0x0000      STRB     R0,[SP, #+0]
    163              short temp_ut;
    164          
    165              hw_iic_write1(0, BMP085_Addr, 0xF4, 0x2E);
   \   0000000E   0x232E             MOVS     R3,#+46
   \   00000010   0x22F4             MOVS     R2,#+244
   \   00000012   0x21EE             MOVS     R1,#+238
   \   00000014   0x2000             MOVS     R0,#+0
   \   00000016   0x.... 0x....      BL       hw_iic_write1
    166              Delay_ms(5);	// max time is 4.5ms
   \   0000001A   0x.... 0x....      LDR.W    R0,??DataTable5_2  ;; 0x40a00000
   \   0000001E   0x.... 0x....      BL       Delay_ms
    167              hw_iic_read1(0, BMP085_Addr, 0xF6, &temp_ut_h);
   \   00000022   0xAB00             ADD      R3,SP,#+0
   \   00000024   0x22F6             MOVS     R2,#+246
   \   00000026   0x21EE             MOVS     R1,#+238
   \   00000028   0x2000             MOVS     R0,#+0
   \   0000002A   0x.... 0x....      BL       hw_iic_read1
    168              hw_iic_read1(0, BMP085_Addr, 0xF7, &temp_ut_l);
   \   0000002E   0xF10D 0x0301      ADD      R3,SP,#+1
   \   00000032   0x22F7             MOVS     R2,#+247
   \   00000034   0x21EE             MOVS     R1,#+238
   \   00000036   0x2000             MOVS     R0,#+0
   \   00000038   0x.... 0x....      BL       hw_iic_read1
    169              temp_ut = temp_ut_h ;
   \   0000003C   0xF89D 0x0000      LDRB     R0,[SP, #+0]
    170              temp_ut = (temp_ut << 8) | temp_ut_l ;
   \   00000040   0xF89D 0x1001      LDRB     R1,[SP, #+1]
   \   00000044   0xEA51 0x2000      ORRS     R0,R1,R0, LSL #+8
    171              return  temp_ut ;
   \   00000048   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   0000004A   0xBD02             POP      {R1,PC}          ;; return
    172          }
    173          
    174          
    175          //void  Init_BMP085(void)
    176          //{
    177          //    while(hw_iic_readn(0, BMP085_Addr, 0xAA, AC, 22));
    178          //    ac1 = AC[0];
    179          //    ac1 = ac1 << 8 | AC[1];
    180          //
    181          //    ac2 = AC[2];
    182          //    ac2 = ac2 << 8 | AC[3];
    183          //
    184          //    ac3 = AC[4];
    185          //    ac3 = ac3 << 8 | AC[5];
    186          //
    187          //    ac4 = AC[6];
    188          //    ac4 = ac4 << 8 | AC[7];
    189          //
    190          //    ac5 = AC[8];
    191          //    ac5 = ac5 << 8 | AC[9];
    192          //
    193          //    ac6 = AC[10];
    194          //    ac6 = ac6 << 8 | AC[11];
    195          //
    196          //    b1 = AC[12];
    197          //    b1 = b1 << 8 | AC[13];
    198          //
    199          //    b2 = AC[14];
    200          //    b2 = b2 << 8 | AC[15];
    201          //
    202          //    mb = AC[16];
    203          //    mb = mb << 8 | AC[17];
    204          //
    205          //    mc = AC[18];
    206          //    mc = mc << 8 | AC[19];
    207          //
    208          //    md = AC[20];
    209          //    md = md << 8 | AC[21];
    210          //    /*
    211          //    ac1 = hw_iic_read1(BMP085_Addr,0xAA);
    212          //    	ac1 = (ac1<<8)|hw_iic_read1(BMP085_Addr,0xAB);
    213          //
    214          //    ac2 = hw_iic_read1(BMP085_Addr,0xAC);
    215          //    	ac2 = (ac2<<8)| hw_iic_read1(BMP085_Addr,0xAD);
    216          //
    217          //    	ac3 = hw_iic_read1(BMP085_Addr,0xAE);
    218          //    	ac3 = (ac3<<8)| hw_iic_read1(BMP085_Addr,0xAF);
    219          //
    220          //    	ac4 = hw_iic_read1(BMP085_Addr,0xB0);
    221          //    	ac4 = (ac4<<8)| hw_iic_read1(BMP085_Addr,0xB1);
    222          //
    223          //    	ac5 = hw_iic_read1(BMP085_Addr,0xB2);
    224          //    	ac5 = (ac5<<8)| hw_iic_read1(BMP085_Addr,0xB3);
    225          //
    226          //    	ac6 = hw_iic_read1(BMP085_Addr,0xB4);
    227          //    	ac6 = (ac6<<8)| hw_iic_read1(BMP085_Addr,0xB5);
    228          //
    229          //    	b1 = hw_iic_read1(BMP085_Addr,0xB6);
    230          //    	b1 = (b1<<8)| hw_iic_read1(BMP085_Addr,0xB7);
    231          //
    232          //    	b2 = hw_iic_read1(BMP085_Addr,0xB8);
    233          //    	b2 = (b2<<8)| hw_iic_read1(BMP085_Addr,0xB9);
    234          //
    235          //    	mb = hw_iic_read1(BMP085_Addr,0xBA);
    236          //    	mb = (mb<<8)| hw_iic_read1(BMP085_Addr,0xBB);
    237          //
    238          //    	mc = hw_iic_read1(BMP085_Addr,0xBC);
    239          //    	mc = (mc<<8)| hw_iic_read1(BMP085_Addr,0xBD);
    240          //
    241          //    	md = hw_iic_read1(BMP085_Addr,0xBE);
    242          //    	md = (md<<8)| hw_iic_read1(BMP085_Addr,0xBF);
    243          //    */
    244          //
    245          //}
    246          //
    247          //long bmp085ReadPressure(void)
    248          //{
    249          //	uint8  pressure_l,pressure_h;
    250          //        int32 pressure;
    251          //	hw_iic_write1(0,BMP085_Addr,0xF4,0x34);
    252          //	Delay_ms(5);	// max time is 4.5ms
    253          //	hw_iic_read1(0,BMP085_Addr,0xF6,&pressure_h);
    254          //        hw_iic_read1(0,BMP085_Addr,0xF7,&pressure_l);
    255          //	pressure = pressure_h;
    256          //        pressure = (pressure<<8)| pressure_l;
    257          //	pressure &= 0x0000FFFF;
    258          //	return pressure;
    259          //}
    260          
    261          
    262          
    263          //****************************
    264          //
    265          //void  Init_HMC5883L()
    266          //{
    267          //    hw_iic_write1(0, HMC5883L_Addr, 0x00, 0x18); //
    268          //    hw_iic_write1(0, HMC5883L_Addr, 0x02, 0x00); //
    269          //}
    270          
    271          //*****************************************
    272          //
    273          //void read_hmc5883l(void)
    274          //{
    275          //    static int Revise_mx = 0, Revise_my = 0, Revise_mz = 0;
    276          //    static int sum_mx = 0, sum_my = 0, sum_mz = 0;
    277          //    // uint8 x_l,x_h,y_l,y_h;
    278          //
    279          //    // int32 temp;
    280          //    // char txtbuf[]={0};
    281          //
    282          //    //hw_iic_write1(0,HMC5883L_Addr,0x00,0x14);   //
    283          //    //hw_iic_write1(0,HMC5883L_Addr,0x02,0x00);   //
    284          //    //Delay_ms(10);
    285          //    while(hw_iic_readn(0, HMC5883L_Addr, 0x03, BUF, 6));
    286          //    mx = (BUF[0] << 8 | BUF[1]) - Revise_mx; //Combine MSB and LSB of X Data output register
    287          //    mz = (BUF[2] << 8 | BUF[3]); //Combine MSB and LSB of Z Data output register
    288          //    my = (BUF[4] << 8 | BUF[5]) - Revise_my; //Combine MSB and LSB of Y Data output register
    289          //    if(Time_counter < COUNTER)
    290          //    {
    291          //        sum_mx += mx;
    292          //        sum_my += my;
    293          //        sum_mz += mz;
    294          //    }
    295          //    if(Time_counter == COUNTER)
    296          //    {
    297          //        Revise_mx = sum_mx / COUNTER ;
    298          //        Revise_my = sum_my / COUNTER ;
    299          //        Revise_mz = sum_mz / COUNTER ;
    300          //
    301          //    }
    302          //    //if(mx > 0x7fff)mx -= 0xffff;
    303          //    //if(my > 0x7fff)my -= 0xffff;
    304          //    //angle = atan2(my, mx) * (180 / 3.14159265) + 180; // angle in degrees
    305          //    /*
    306          //        if(angle > 0) //补码求出加速度原始对应数值
    307          //    {
    308          //         temp =  angle * 100;
    309          //         //wz=((float)(0xffff-wz+1))*10000*3.9*0.896; //扩大一万倍，好取出整数部分
    310          //    // height += (984.6788 - wz) *10000* 0.02 * 0.02 ;
    311          //         sprintf(txtbuf,"\n angle:%d.%04d",temp/100,temp%100);
    312          //    putstr(txtbuf);
    313          //    }
    314          //      else
    315          //    {
    316          //         temp =  -angle * 100;
    317          //    sprintf(txtbuf,"\n angle:-%d.%04d",temp/100,temp%100);
    318          //    putstr(txtbuf);
    319          //     }
    320          //     */
    321          //}
    322          
    323          //****************************************
    324          
    325          //*****************************************
    326          //
    327          //float read_BMP085(void)
    328          //{
    329          //    float altitude = 0;
    330          //    long ut;
    331          //    long up;
    332          //    long x1, x2, b5 = 0, b6, x3, b3, p;
    333          //    unsigned long b4, b7;
    334          //
    335          //    uint8  pressure_l, pressure_h;
    336          //    uint32 pressure_t;
    337          //
    338          //
    339          //    while(hw_iic_write1(0, BMP085_Addr, 0xF4, 0x34));
    340          //    Delay_ms(50);	// max time is 4.5ms
    341          //    while(hw_iic_read1(0, BMP085_Addr, 0xF6, &pressure_h));
    342          //    while(hw_iic_read1(0, BMP085_Addr, 0xF7, &pressure_l));
    343          //    pressure_t = pressure_h;
    344          //    pressure_t = (pressure_t << 8) | pressure_l;
    345          //    pressure_t &= 0x0000FFFF;
    346          //
    347          //
    348          //    ut = bmp085ReadTemp();	   // 读取温度
    349          //    ////	ut = bmp085ReadTemp();	   // 读取温度
    350          //    ////	up = bmp085ReadPressure();  // 读取压强
    351          //    ////	up = bmp085ReadPressure();  // 读取压强
    352          //    x1 = ((long)ut - ac6) * ac5 >> 15;
    353          //    x2 = ((long) mc << 11) / (x1 + md);
    354          //    b5 = x1 + x2;
    355          //    temperature = (b5 + 8) >> 4;
    356          //    //
    357          //
    358          //    up = pressure_t;
    359          //    b6 = b5 - 4000;
    360          //    x1 = (b2 * (b6 * b6 >> 12)) >> 11;
    361          //    x2 = ac2 * b6 >> 11;
    362          //    x3 = x1 + x2;
    363          //    b3 = (((long)ac1 * 4 + x3) + 2) / 4;
    364          //    x1 = ac3 * b6 >> 13;
    365          //    x2 = (b1 * (b6 * b6 >> 12)) >> 16;
    366          //    x3 = ((x1 + x2) + 2) >> 2;
    367          //    b4 = (ac4 * (unsigned long) (x3 + 32768)) >> 15;
    368          //    b7 = ((unsigned long) up - b3) * (50000 >> OSS);
    369          //    if( b7 < 0x80000000)
    370          //        p = (b7 * 2) / b4 ;
    371          //    else
    372          //        p = (b7 / b4) * 2;
    373          //    x1 = (p >> 8) * (p >> 8);
    374          //    x1 = (x1 * 3038) >> 16;
    375          //    x2 = (-7357 * p) >> 16;
    376          //    pressure = p + ((x1 + x2 + 3791) >> 4);
    377          //    altitude = 44330 * (1 - (pow((float)pressure / 101325, 1 / 5.255)));
    378          //
    379          //    return altitude;
    380          //}
    381          
    382          
    383          
    384          
    385          
    386          //初始化MPU3050，根据需要请参考pdf进行修改************************

   \                                 In section .text, align 2, keep-with-next
    387          void InitMPU3205()
    388          {
   \                     InitMPU3205:
   \   00000000   0xB580             PUSH     {R7,LR}
    389              Delay_ms(1);
   \   00000002   0xF05F 0x507E      MOVS     R0,#+1065353216
   \   00000006   0x.... 0x....      BL       Delay_ms
    390              while(hw_iic_write1(1, MPU3205_Addr, PWR_M, 0x00));
   \                     ??InitMPU3205_0:
   \   0000000A   0x2300             MOVS     R3,#+0
   \   0000000C   0x223E             MOVS     R2,#+62
   \   0000000E   0x21D0             MOVS     R1,#+208
   \   00000010   0x2001             MOVS     R0,#+1
   \   00000012   0x.... 0x....      BL       hw_iic_write1
   \   00000016   0x2800             CMP      R0,#+0
   \   00000018   0xD1F7             BNE.N    ??InitMPU3205_0
    391              Delay_ms(1);
   \   0000001A   0xF05F 0x507E      MOVS     R0,#+1065353216
   \   0000001E   0x.... 0x....      BL       Delay_ms
    392              while(hw_iic_write1(1, MPU3205_Addr, SMPL, 0x07));
   \                     ??InitMPU3205_1:
   \   00000022   0x2307             MOVS     R3,#+7
   \   00000024   0x2215             MOVS     R2,#+21
   \   00000026   0x21D0             MOVS     R1,#+208
   \   00000028   0x2001             MOVS     R0,#+1
   \   0000002A   0x.... 0x....      BL       hw_iic_write1
   \   0000002E   0x2800             CMP      R0,#+0
   \   00000030   0xD1F7             BNE.N    ??InitMPU3205_1
    393              Delay_ms(1);
   \   00000032   0xF05F 0x507E      MOVS     R0,#+1065353216
   \   00000036   0x.... 0x....      BL       Delay_ms
    394              while(hw_iic_write1(1, MPU3205_Addr, DLPF, 0x1E));
   \                     ??InitMPU3205_2:
   \   0000003A   0x231E             MOVS     R3,#+30
   \   0000003C   0x2216             MOVS     R2,#+22
   \   0000003E   0x21D0             MOVS     R1,#+208
   \   00000040   0x2001             MOVS     R0,#+1
   \   00000042   0x.... 0x....      BL       hw_iic_write1
   \   00000046   0x2800             CMP      R0,#+0
   \   00000048   0xD1F7             BNE.N    ??InitMPU3205_2
    395              Delay_ms(1);
   \   0000004A   0xF05F 0x507E      MOVS     R0,#+1065353216
   \   0000004E   0x.... 0x....      BL       Delay_ms
    396              while(hw_iic_write1(1, MPU3205_Addr, INT_C, 0x00));
   \                     ??InitMPU3205_3:
   \   00000052   0x2300             MOVS     R3,#+0
   \   00000054   0x2217             MOVS     R2,#+23
   \   00000056   0x21D0             MOVS     R1,#+208
   \   00000058   0x2001             MOVS     R0,#+1
   \   0000005A   0x.... 0x....      BL       hw_iic_write1
   \   0000005E   0x2800             CMP      R0,#+0
   \   00000060   0xD1F7             BNE.N    ??InitMPU3205_3
    397              Delay_ms(1);
   \   00000062   0xF05F 0x507E      MOVS     R0,#+1065353216
   \   00000066   0x.... 0x....      BL       Delay_ms
    398              // while(hw_iic_write1(0,MPU3205_Addr,PWR_M, 0x00));
    399              /*
    400              Single_WriteMPU3050(PWR_M, 0x80);   //
    401              Single_WriteMPU3050(SMPL, 0x07);    //
    402              Single_WriteMPU3050(DLPF, 0x1E);    //±2000°
    403              Single_WriteMPU3050(INT_C, 0x00 );  //
    404              Single_WriteMPU3050(PWR_M, 0x00);   //
    405              */
    406          }
   \   0000006A   0xBD01             POP      {R0,PC}          ;; return
    407          
    408          //初始化MPU3205，于I2C0************************

   \                                 In section .text, align 2, keep-with-next
    409          void InitMPUsteer()
    410          {
   \                     InitMPUsteer:
   \   00000000   0xB580             PUSH     {R7,LR}
    411              Delay_ms(1);
   \   00000002   0xF05F 0x507E      MOVS     R0,#+1065353216
   \   00000006   0x.... 0x....      BL       Delay_ms
    412              while(hw_iic_write1(0, MPU3205_Addr, PWR_M, 0x00));
   \                     ??InitMPUsteer_0:
   \   0000000A   0x2300             MOVS     R3,#+0
   \   0000000C   0x223E             MOVS     R2,#+62
   \   0000000E   0x21D0             MOVS     R1,#+208
   \   00000010   0x2000             MOVS     R0,#+0
   \   00000012   0x.... 0x....      BL       hw_iic_write1
   \   00000016   0x2800             CMP      R0,#+0
   \   00000018   0xD1F7             BNE.N    ??InitMPUsteer_0
    413              Delay_ms(1);
   \   0000001A   0xF05F 0x507E      MOVS     R0,#+1065353216
   \   0000001E   0x.... 0x....      BL       Delay_ms
    414              while(hw_iic_write1(0, MPU3205_Addr, SMPL, 0x07));
   \                     ??InitMPUsteer_1:
   \   00000022   0x2307             MOVS     R3,#+7
   \   00000024   0x2215             MOVS     R2,#+21
   \   00000026   0x21D0             MOVS     R1,#+208
   \   00000028   0x2000             MOVS     R0,#+0
   \   0000002A   0x.... 0x....      BL       hw_iic_write1
   \   0000002E   0x2800             CMP      R0,#+0
   \   00000030   0xD1F7             BNE.N    ??InitMPUsteer_1
    415              Delay_ms(1);
   \   00000032   0xF05F 0x507E      MOVS     R0,#+1065353216
   \   00000036   0x.... 0x....      BL       Delay_ms
    416              while(hw_iic_write1(0, MPU3205_Addr, DLPF, 0x1E));
   \                     ??InitMPUsteer_2:
   \   0000003A   0x231E             MOVS     R3,#+30
   \   0000003C   0x2216             MOVS     R2,#+22
   \   0000003E   0x21D0             MOVS     R1,#+208
   \   00000040   0x2000             MOVS     R0,#+0
   \   00000042   0x.... 0x....      BL       hw_iic_write1
   \   00000046   0x2800             CMP      R0,#+0
   \   00000048   0xD1F7             BNE.N    ??InitMPUsteer_2
    417              Delay_ms(1);
   \   0000004A   0xF05F 0x507E      MOVS     R0,#+1065353216
   \   0000004E   0x.... 0x....      BL       Delay_ms
    418              while(hw_iic_write1(0, MPU3205_Addr, INT_C, 0x00));
   \                     ??InitMPUsteer_3:
   \   00000052   0x2300             MOVS     R3,#+0
   \   00000054   0x2217             MOVS     R2,#+23
   \   00000056   0x21D0             MOVS     R1,#+208
   \   00000058   0x2000             MOVS     R0,#+0
   \   0000005A   0x.... 0x....      BL       hw_iic_write1
   \   0000005E   0x2800             CMP      R0,#+0
   \   00000060   0xD1F7             BNE.N    ??InitMPUsteer_3
    419              Delay_ms(1);
   \   00000062   0xF05F 0x507E      MOVS     R0,#+1065353216
   \   00000066   0x.... 0x....      BL       Delay_ms
    420              // while(hw_iic_write1(0,MPU3205_Addr,PWR_M, 0x00));
    421              /*
    422              Single_WriteMPU3050(PWR_M, 0x80);   //
    423              Single_WriteMPU3050(SMPL, 0x07);    //
    424              Single_WriteMPU3050(DLPF, 0x1E);    //±2000°
    425              Single_WriteMPU3050(INT_C, 0x00 );  //
    426              Single_WriteMPU3050(PWR_M, 0x00);   //
    427              */
    428          }
   \   0000006A   0xBD01             POP      {R0,PC}          ;; return
    429          
    430          //读取MPU3205，于I2C0************************

   \                                 In section .text, align 2, keep-with-next
    431          void ReadMPUsteer()
    432          {
   \                     ReadMPUsteer:
   \   00000000   0xB5F8             PUSH     {R3-R7,LR}
    433             
    434              static float Revise_gyroX = 0, Revise_gyroY = 0, Revise_gyroZ = 0;
    435              int16 gyrox, gyroy, gyroz;
    436              static float dotx_gyro[3] = {0}, doty_gyro[3] = {0}, dotz_gyro[3] = {0};
    437          
    438              while(hw_iic_readn(0, MPU3205_Addr, GX_H, BUF, 6));
   \                     ??ReadMPUsteer_0:
   \   00000002   0x2006             MOVS     R0,#+6
   \   00000004   0x9000             STR      R0,[SP, #+0]
   \   00000006   0x.... 0x....      LDR.W    R3,??DataTable5_3
   \   0000000A   0x221D             MOVS     R2,#+29
   \   0000000C   0x21D0             MOVS     R1,#+208
   \   0000000E   0x2000             MOVS     R0,#+0
   \   00000010   0x.... 0x....      BL       hw_iic_readn
   \   00000014   0x2800             CMP      R0,#+0
   \   00000016   0xD1F4             BNE.N    ??ReadMPUsteer_0
    439          
    440              gyrox = (BUF[0] << 8) + BUF[1] ;
   \   00000018   0x.... 0x....      LDR.W    R0,??DataTable5_3
   \   0000001C   0x7800             LDRB     R0,[R0, #+0]
   \   0000001E   0x0200             LSLS     R0,R0,#+8
   \   00000020   0x.... 0x....      LDR.W    R1,??DataTable5_3
   \   00000024   0x7849             LDRB     R1,[R1, #+1]
   \   00000026   0x1840             ADDS     R0,R0,R1
    441              gyroy = (BUF[2] << 8) + BUF[3] ;
   \   00000028   0x.... 0x....      LDR.W    R1,??DataTable5_3
   \   0000002C   0x7889             LDRB     R1,[R1, #+2]
   \   0000002E   0x0209             LSLS     R1,R1,#+8
   \   00000030   0x.... 0x....      LDR.W    R2,??DataTable5_3
   \   00000034   0x78D2             LDRB     R2,[R2, #+3]
   \   00000036   0x188F             ADDS     R7,R1,R2
    442              gyroz = (BUF[4] << 8) + BUF[5] ;
   \   00000038   0x.... 0x....      LDR.W    R1,??DataTable5_3
   \   0000003C   0x7909             LDRB     R1,[R1, #+4]
   \   0000003E   0x0209             LSLS     R1,R1,#+8
   \   00000040   0x.... 0x....      LDR.W    R2,??DataTable5_3
   \   00000044   0x7952             LDRB     R2,[R2, #+5]
   \   00000046   0x188E             ADDS     R6,R1,R2
    443          
    444              Dot_gyro_x0 = (float)gyrox  / 14.375 - Revise_gyroX / T * 1000;
   \   00000048   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   0000004A   0x.... 0x....      BL       __aeabi_i2f
   \   0000004E   0x.... 0x....      BL       __aeabi_f2d
   \   00000052   0x2200             MOVS     R2,#+0
   \   00000054   0x.... 0x....      LDR.W    R3,??DataTable5_4  ;; 0x402cc000
   \   00000058   0x.... 0x....      BL       __aeabi_ddiv
   \   0000005C   0x0004             MOVS     R4,R0
   \   0000005E   0x000D             MOVS     R5,R1
   \   00000060   0x.... 0x....      LDR.W    R0,??DataTable5_5
   \   00000064   0x6800             LDR      R0,[R0, #+0]
   \   00000066   0x.... 0x....      BL       __aeabi_f2d
   \   0000006A   0x2200             MOVS     R2,#+0
   \   0000006C   0x.... 0x....      LDR.W    R3,??DataTable5_6  ;; 0x40040000
   \   00000070   0x.... 0x....      BL       __aeabi_ddiv
   \   00000074   0x2200             MOVS     R2,#+0
   \   00000076   0x.... 0x....      LDR.W    R3,??DataTable5_7  ;; 0x408f4000
   \   0000007A   0x.... 0x....      BL       __aeabi_dmul
   \   0000007E   0x0002             MOVS     R2,R0
   \   00000080   0x000B             MOVS     R3,R1
   \   00000082   0x0020             MOVS     R0,R4
   \   00000084   0x0029             MOVS     R1,R5
   \   00000086   0x.... 0x....      BL       __aeabi_dsub
   \   0000008A   0x.... 0x....      BL       __aeabi_d2f
   \   0000008E   0x.... 0x....      LDR.W    R1,??DataTable5_8
   \   00000092   0x6008             STR      R0,[R1, #+0]
    445              Dot_gyro_y0 = (float)gyroy  / 14.375 - Revise_gyroY / T * 1000;
   \   00000094   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   00000096   0x0038             MOVS     R0,R7
   \   00000098   0x.... 0x....      BL       __aeabi_i2f
   \   0000009C   0x.... 0x....      BL       __aeabi_f2d
   \   000000A0   0x2200             MOVS     R2,#+0
   \   000000A2   0x.... 0x....      LDR.W    R3,??DataTable5_4  ;; 0x402cc000
   \   000000A6   0x.... 0x....      BL       __aeabi_ddiv
   \   000000AA   0x0004             MOVS     R4,R0
   \   000000AC   0x000D             MOVS     R5,R1
   \   000000AE   0x.... 0x....      LDR.W    R0,??DataTable5_9
   \   000000B2   0x6800             LDR      R0,[R0, #+0]
   \   000000B4   0x.... 0x....      BL       __aeabi_f2d
   \   000000B8   0x2200             MOVS     R2,#+0
   \   000000BA   0x.... 0x....      LDR.W    R3,??DataTable5_6  ;; 0x40040000
   \   000000BE   0x.... 0x....      BL       __aeabi_ddiv
   \   000000C2   0x2200             MOVS     R2,#+0
   \   000000C4   0x.... 0x....      LDR.W    R3,??DataTable5_7  ;; 0x408f4000
   \   000000C8   0x.... 0x....      BL       __aeabi_dmul
   \   000000CC   0x0002             MOVS     R2,R0
   \   000000CE   0x000B             MOVS     R3,R1
   \   000000D0   0x0020             MOVS     R0,R4
   \   000000D2   0x0029             MOVS     R1,R5
   \   000000D4   0x.... 0x....      BL       __aeabi_dsub
   \   000000D8   0x.... 0x....      BL       __aeabi_d2f
   \   000000DC   0x.... 0x....      LDR.W    R1,??DataTable5_10
   \   000000E0   0x6008             STR      R0,[R1, #+0]
    446              Dot_gyro_z0 = (float)gyroz  / 14.375 - Revise_gyroZ / T * 1000;
   \   000000E2   0xB236             SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
   \   000000E4   0x0030             MOVS     R0,R6
   \   000000E6   0x.... 0x....      BL       __aeabi_i2f
   \   000000EA   0x.... 0x....      BL       __aeabi_f2d
   \   000000EE   0x2200             MOVS     R2,#+0
   \   000000F0   0x.... 0x....      LDR.W    R3,??DataTable5_4  ;; 0x402cc000
   \   000000F4   0x.... 0x....      BL       __aeabi_ddiv
   \   000000F8   0x0004             MOVS     R4,R0
   \   000000FA   0x000D             MOVS     R5,R1
   \   000000FC   0x.... 0x....      LDR.W    R0,??DataTable5_11
   \   00000100   0x6800             LDR      R0,[R0, #+0]
   \   00000102   0x.... 0x....      BL       __aeabi_f2d
   \   00000106   0x2200             MOVS     R2,#+0
   \   00000108   0x.... 0x....      LDR.W    R3,??DataTable5_6  ;; 0x40040000
   \   0000010C   0x.... 0x....      BL       __aeabi_ddiv
   \   00000110   0x2200             MOVS     R2,#+0
   \   00000112   0x.... 0x....      LDR.W    R3,??DataTable5_7  ;; 0x408f4000
   \   00000116   0x.... 0x....      BL       __aeabi_dmul
   \   0000011A   0x0002             MOVS     R2,R0
   \   0000011C   0x000B             MOVS     R3,R1
   \   0000011E   0x0020             MOVS     R0,R4
   \   00000120   0x0029             MOVS     R1,R5
   \   00000122   0x.... 0x....      BL       __aeabi_dsub
   \   00000126   0x.... 0x....      BL       __aeabi_d2f
   \   0000012A   0x.... 0x....      LDR.W    R1,??DataTable5_12
   \   0000012E   0x6008             STR      R0,[R1, #+0]
    447          
    448              for(uint8 i = 1; i < 3; i++)
   \   00000130   0x2001             MOVS     R0,#+1
   \   00000132   0xE024             B.N      ??ReadMPUsteer_1
    449              {
    450                  dotx_gyro[i-1] = dotx_gyro[i];
   \                     ??ReadMPUsteer_2:
   \   00000134   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000136   0x.... 0x....      LDR.W    R1,??DataTable5_13
   \   0000013A   0xEB11 0x0180      ADDS     R1,R1,R0, LSL #+2
   \   0000013E   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000140   0x.... 0x....      LDR.W    R2,??DataTable5_13
   \   00000144   0xF852 0x2020      LDR      R2,[R2, R0, LSL #+2]
   \   00000148   0xF841 0x2C04      STR      R2,[R1, #-4]
    451                  doty_gyro[i-1] = doty_gyro[i];
   \   0000014C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000014E   0x.... 0x....      LDR.W    R1,??DataTable5_14
   \   00000152   0xEB11 0x0180      ADDS     R1,R1,R0, LSL #+2
   \   00000156   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000158   0x.... 0x....      LDR.W    R2,??DataTable5_14
   \   0000015C   0xF852 0x2020      LDR      R2,[R2, R0, LSL #+2]
   \   00000160   0xF841 0x2C04      STR      R2,[R1, #-4]
    452                  dotz_gyro[i-1] = dotz_gyro[i];
   \   00000164   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000166   0x.... 0x....      LDR.W    R1,??DataTable5_15
   \   0000016A   0xEB11 0x0180      ADDS     R1,R1,R0, LSL #+2
   \   0000016E   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000170   0x.... 0x....      LDR.W    R2,??DataTable5_15
   \   00000174   0xF852 0x2020      LDR      R2,[R2, R0, LSL #+2]
   \   00000178   0xF841 0x2C04      STR      R2,[R1, #-4]
    453              }
   \   0000017C   0x1C40             ADDS     R0,R0,#+1
   \                     ??ReadMPUsteer_1:
   \   0000017E   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000180   0x2803             CMP      R0,#+3
   \   00000182   0xD3D7             BCC.N    ??ReadMPUsteer_2
    454              dotx_gyro[2] = Dot_gyro_x0;
   \   00000184   0x.... 0x....      LDR.W    R0,??DataTable5_13
   \   00000188   0x.... 0x....      LDR.W    R1,??DataTable5_8
   \   0000018C   0x6809             LDR      R1,[R1, #+0]
   \   0000018E   0x6081             STR      R1,[R0, #+8]
    455              doty_gyro[2] = Dot_gyro_y0;
   \   00000190   0x.... 0x....      LDR.W    R0,??DataTable5_14
   \   00000194   0x.... 0x....      LDR.W    R1,??DataTable5_10
   \   00000198   0x6809             LDR      R1,[R1, #+0]
   \   0000019A   0x6081             STR      R1,[R0, #+8]
    456              dotz_gyro[2] = Dot_gyro_z0;
   \   0000019C   0x.... 0x....      LDR.W    R0,??DataTable5_15
   \   000001A0   0x.... 0x....      LDR.W    R1,??DataTable5_12
   \   000001A4   0x6809             LDR      R1,[R1, #+0]
   \   000001A6   0x6081             STR      R1,[R0, #+8]
    457          
    458              Dot_xgyro0 = (dotx_gyro[2] * 0.5  + dotx_gyro[1] * 0.3  + dotx_gyro[0] * 0.2)  / 57.3 ;
   \   000001A8   0x.... 0x....      LDR.W    R0,??DataTable5_13
   \   000001AC   0x6880             LDR      R0,[R0, #+8]
   \   000001AE   0x.... 0x....      BL       __aeabi_f2d
   \   000001B2   0x2200             MOVS     R2,#+0
   \   000001B4   0x.... 0x....      LDR.W    R3,??DataTable5_16  ;; 0x3fe00000
   \   000001B8   0x.... 0x....      BL       __aeabi_dmul
   \   000001BC   0x0004             MOVS     R4,R0
   \   000001BE   0x000D             MOVS     R5,R1
   \   000001C0   0x.... 0x....      LDR.W    R0,??DataTable5_13
   \   000001C4   0x6840             LDR      R0,[R0, #+4]
   \   000001C6   0x.... 0x....      BL       __aeabi_f2d
   \   000001CA   0xF05F 0x3233      MOVS     R2,#+858993459
   \   000001CE   0x.... 0x....      LDR.W    R3,??DataTable5_17  ;; 0x3fd33333
   \   000001D2   0x.... 0x....      BL       __aeabi_dmul
   \   000001D6   0x0022             MOVS     R2,R4
   \   000001D8   0x002B             MOVS     R3,R5
   \   000001DA   0x.... 0x....      BL       __aeabi_dadd
   \   000001DE   0x0004             MOVS     R4,R0
   \   000001E0   0x000D             MOVS     R5,R1
   \   000001E2   0x.... 0x....      LDR.W    R0,??DataTable5_13
   \   000001E6   0x6800             LDR      R0,[R0, #+0]
   \   000001E8   0x.... 0x....      BL       __aeabi_f2d
   \   000001EC   0x.... 0x....      LDR.W    R2,??DataTable5_18  ;; 0x9999999a
   \   000001F0   0x.... 0x....      LDR.W    R3,??DataTable5_19  ;; 0x3fc99999
   \   000001F4   0x.... 0x....      BL       __aeabi_dmul
   \   000001F8   0x0022             MOVS     R2,R4
   \   000001FA   0x002B             MOVS     R3,R5
   \   000001FC   0x.... 0x....      BL       __aeabi_dadd
   \   00000200   0xF05F 0x3266      MOVS     R2,#+1717986918
   \   00000204   0x.... 0x....      LDR.W    R3,??DataTable5_20  ;; 0x404ca666
   \   00000208   0x.... 0x....      BL       __aeabi_ddiv
   \   0000020C   0x.... 0x....      BL       __aeabi_d2f
   \   00000210   0x.... 0x....      LDR.W    R1,??DataTable5_21
   \   00000214   0x6008             STR      R0,[R1, #+0]
    459              Dot_ygyro0 = (doty_gyro[2] * 0.5  + doty_gyro[1] * 0.3  + doty_gyro[0] * 0.2)  / 57.3 ;
   \   00000216   0x.... 0x....      LDR.W    R0,??DataTable5_14
   \   0000021A   0x6880             LDR      R0,[R0, #+8]
   \   0000021C   0x.... 0x....      BL       __aeabi_f2d
   \   00000220   0x2200             MOVS     R2,#+0
   \   00000222   0x.... 0x....      LDR.W    R3,??DataTable5_16  ;; 0x3fe00000
   \   00000226   0x.... 0x....      BL       __aeabi_dmul
   \   0000022A   0x0004             MOVS     R4,R0
   \   0000022C   0x000D             MOVS     R5,R1
   \   0000022E   0x.... 0x....      LDR.W    R0,??DataTable5_14
   \   00000232   0x6840             LDR      R0,[R0, #+4]
   \   00000234   0x.... 0x....      BL       __aeabi_f2d
   \   00000238   0xF05F 0x3233      MOVS     R2,#+858993459
   \   0000023C   0x.... 0x....      LDR.W    R3,??DataTable5_17  ;; 0x3fd33333
   \   00000240   0x.... 0x....      BL       __aeabi_dmul
   \   00000244   0x0022             MOVS     R2,R4
   \   00000246   0x002B             MOVS     R3,R5
   \   00000248   0x.... 0x....      BL       __aeabi_dadd
   \   0000024C   0x0004             MOVS     R4,R0
   \   0000024E   0x000D             MOVS     R5,R1
   \   00000250   0x.... 0x....      LDR.W    R0,??DataTable5_14
   \   00000254   0x6800             LDR      R0,[R0, #+0]
   \   00000256   0x.... 0x....      BL       __aeabi_f2d
   \   0000025A   0x.... 0x....      LDR.W    R2,??DataTable5_18  ;; 0x9999999a
   \   0000025E   0x.... 0x....      LDR.W    R3,??DataTable5_19  ;; 0x3fc99999
   \   00000262   0x.... 0x....      BL       __aeabi_dmul
   \   00000266   0x0022             MOVS     R2,R4
   \   00000268   0x002B             MOVS     R3,R5
   \   0000026A   0x.... 0x....      BL       __aeabi_dadd
   \   0000026E   0xF05F 0x3266      MOVS     R2,#+1717986918
   \   00000272   0x.... 0x....      LDR.W    R3,??DataTable5_20  ;; 0x404ca666
   \   00000276   0x.... 0x....      BL       __aeabi_ddiv
   \   0000027A   0x.... 0x....      BL       __aeabi_d2f
   \   0000027E   0x.... 0x....      LDR.W    R1,??DataTable5_22
   \   00000282   0x6008             STR      R0,[R1, #+0]
    460              Dot_zgyro0 = (dotz_gyro[2] * 0.5  + dotz_gyro[1] * 0.3  + dotz_gyro[0] * 0.2)  / 57.3 ;
   \   00000284   0x.... 0x....      LDR.W    R0,??DataTable5_15
   \   00000288   0x6880             LDR      R0,[R0, #+8]
   \   0000028A   0x.... 0x....      BL       __aeabi_f2d
   \   0000028E   0x2200             MOVS     R2,#+0
   \   00000290   0x.... 0x....      LDR.W    R3,??DataTable5_16  ;; 0x3fe00000
   \   00000294   0x.... 0x....      BL       __aeabi_dmul
   \   00000298   0x0004             MOVS     R4,R0
   \   0000029A   0x000D             MOVS     R5,R1
   \   0000029C   0x.... 0x....      LDR.W    R0,??DataTable5_15
   \   000002A0   0x6840             LDR      R0,[R0, #+4]
   \   000002A2   0x.... 0x....      BL       __aeabi_f2d
   \   000002A6   0xF05F 0x3233      MOVS     R2,#+858993459
   \   000002AA   0x.... 0x....      LDR.W    R3,??DataTable5_17  ;; 0x3fd33333
   \   000002AE   0x.... 0x....      BL       __aeabi_dmul
   \   000002B2   0x0022             MOVS     R2,R4
   \   000002B4   0x002B             MOVS     R3,R5
   \   000002B6   0x.... 0x....      BL       __aeabi_dadd
   \   000002BA   0x0004             MOVS     R4,R0
   \   000002BC   0x000D             MOVS     R5,R1
   \   000002BE   0x.... 0x....      LDR.W    R0,??DataTable5_15
   \   000002C2   0x6800             LDR      R0,[R0, #+0]
   \   000002C4   0x.... 0x....      BL       __aeabi_f2d
   \   000002C8   0x.... 0x....      LDR.W    R2,??DataTable5_18  ;; 0x9999999a
   \   000002CC   0x.... 0x....      LDR.W    R3,??DataTable5_19  ;; 0x3fc99999
   \   000002D0   0x.... 0x....      BL       __aeabi_dmul
   \   000002D4   0x0022             MOVS     R2,R4
   \   000002D6   0x002B             MOVS     R3,R5
   \   000002D8   0x.... 0x....      BL       __aeabi_dadd
   \   000002DC   0xF05F 0x3266      MOVS     R2,#+1717986918
   \   000002E0   0x.... 0x....      LDR.W    R3,??DataTable5_20  ;; 0x404ca666
   \   000002E4   0x.... 0x....      BL       __aeabi_ddiv
   \   000002E8   0x.... 0x....      BL       __aeabi_d2f
   \   000002EC   0x.... 0x....      LDR.W    R1,??DataTable5_23
   \   000002F0   0x6008             STR      R0,[R1, #+0]
    461          
    462              Angle_gyrox0 += Dot_gyro_x0 * T / 1000 ;
   \   000002F2   0x.... 0x....      LDR.W    R0,??DataTable5_24
   \   000002F6   0x6800             LDR      R0,[R0, #+0]
   \   000002F8   0x.... 0x....      BL       __aeabi_f2d
   \   000002FC   0x0004             MOVS     R4,R0
   \   000002FE   0x000D             MOVS     R5,R1
   \   00000300   0x.... 0x....      LDR.W    R0,??DataTable5_8
   \   00000304   0x6800             LDR      R0,[R0, #+0]
   \   00000306   0x.... 0x....      BL       __aeabi_f2d
   \   0000030A   0x2200             MOVS     R2,#+0
   \   0000030C   0x.... 0x....      LDR.W    R3,??DataTable5_6  ;; 0x40040000
   \   00000310   0x.... 0x....      BL       __aeabi_dmul
   \   00000314   0x2200             MOVS     R2,#+0
   \   00000316   0x.... 0x....      LDR.W    R3,??DataTable5_7  ;; 0x408f4000
   \   0000031A   0x.... 0x....      BL       __aeabi_ddiv
   \   0000031E   0x0022             MOVS     R2,R4
   \   00000320   0x002B             MOVS     R3,R5
   \   00000322   0x.... 0x....      BL       __aeabi_dadd
   \   00000326   0x.... 0x....      BL       __aeabi_d2f
   \   0000032A   0x.... 0x....      LDR.W    R1,??DataTable5_24
   \   0000032E   0x6008             STR      R0,[R1, #+0]
    463              Angle_gyroy0 += Dot_gyro_y0 * T / 1000 ;
   \   00000330   0x.... 0x....      LDR.W    R0,??DataTable5_25
   \   00000334   0x6800             LDR      R0,[R0, #+0]
   \   00000336   0x.... 0x....      BL       __aeabi_f2d
   \   0000033A   0x0004             MOVS     R4,R0
   \   0000033C   0x000D             MOVS     R5,R1
   \   0000033E   0x.... 0x....      LDR.W    R0,??DataTable5_10
   \   00000342   0x6800             LDR      R0,[R0, #+0]
   \   00000344   0x.... 0x....      BL       __aeabi_f2d
   \   00000348   0x2200             MOVS     R2,#+0
   \   0000034A   0x.... 0x....      LDR.W    R3,??DataTable5_6  ;; 0x40040000
   \   0000034E   0x.... 0x....      BL       __aeabi_dmul
   \   00000352   0x2200             MOVS     R2,#+0
   \   00000354   0x.... 0x....      LDR.W    R3,??DataTable5_7  ;; 0x408f4000
   \   00000358   0x.... 0x....      BL       __aeabi_ddiv
   \   0000035C   0x0022             MOVS     R2,R4
   \   0000035E   0x002B             MOVS     R3,R5
   \   00000360   0x.... 0x....      BL       __aeabi_dadd
   \   00000364   0x.... 0x....      BL       __aeabi_d2f
   \   00000368   0x.... 0x....      LDR.W    R1,??DataTable5_25
   \   0000036C   0x6008             STR      R0,[R1, #+0]
    464              Angle_gyroz0 += Dot_gyro_z0 * T / 1000 ;
   \   0000036E   0x.... 0x....      LDR.W    R0,??DataTable7
   \   00000372   0x6800             LDR      R0,[R0, #+0]
   \   00000374   0x.... 0x....      BL       __aeabi_f2d
   \   00000378   0x0004             MOVS     R4,R0
   \   0000037A   0x000D             MOVS     R5,R1
   \   0000037C   0x.... 0x....      LDR.W    R0,??DataTable5_12
   \   00000380   0x6800             LDR      R0,[R0, #+0]
   \   00000382   0x.... 0x....      BL       __aeabi_f2d
   \   00000386   0x2200             MOVS     R2,#+0
   \   00000388   0x.... 0x....      LDR.W    R3,??DataTable5_6  ;; 0x40040000
   \   0000038C   0x.... 0x....      BL       __aeabi_dmul
   \   00000390   0x2200             MOVS     R2,#+0
   \   00000392   0x.... 0x....      LDR.W    R3,??DataTable5_7  ;; 0x408f4000
   \   00000396   0x.... 0x....      BL       __aeabi_ddiv
   \   0000039A   0x0022             MOVS     R2,R4
   \   0000039C   0x002B             MOVS     R3,R5
   \   0000039E   0x.... 0x....      BL       __aeabi_dadd
   \   000003A2   0x.... 0x....      BL       __aeabi_d2f
   \   000003A6   0x.... 0x....      LDR.W    R1,??DataTable7
   \   000003AA   0x6008             STR      R0,[R1, #+0]
    465          
    466              //////////////////////////修正0点，读COUNTER次然后取平均////////////////////////////
    467              if(Time_counter == COUNTER)
   \   000003AC   0x.... 0x....      LDR.W    R0,??DataTable6
   \   000003B0   0x6800             LDR      R0,[R0, #+0]
   \   000003B2   0xF5B0 0x7F7A      CMP      R0,#+1000
   \   000003B6   0xD129             BNE.N    ??ReadMPUsteer_3
    468              {
    469                  Revise_gyroX = Angle_gyrox0 / COUNTER ;
   \   000003B8   0x.... 0x....      LDR.W    R0,??DataTable5_24
   \   000003BC   0x6800             LDR      R0,[R0, #+0]
   \   000003BE   0x.... 0x....      LDR.W    R1,??DataTable6_1  ;; 0x447a0000
   \   000003C2   0x.... 0x....      BL       __aeabi_fdiv
   \   000003C6   0x.... 0x....      LDR.W    R1,??DataTable5_5
   \   000003CA   0x6008             STR      R0,[R1, #+0]
    470                  Revise_gyroY = Angle_gyroy0 / COUNTER ;
   \   000003CC   0x.... 0x....      LDR.W    R0,??DataTable5_25
   \   000003D0   0x6800             LDR      R0,[R0, #+0]
   \   000003D2   0x.... 0x....      LDR.W    R1,??DataTable6_1  ;; 0x447a0000
   \   000003D6   0x.... 0x....      BL       __aeabi_fdiv
   \   000003DA   0x.... 0x....      LDR.W    R1,??DataTable5_9
   \   000003DE   0x6008             STR      R0,[R1, #+0]
    471                  Revise_gyroZ = Angle_gyroz0 / COUNTER ;
   \   000003E0   0x.... 0x....      LDR.W    R0,??DataTable7
   \   000003E4   0x6800             LDR      R0,[R0, #+0]
   \   000003E6   0x.... 0x....      LDR.W    R1,??DataTable6_1  ;; 0x447a0000
   \   000003EA   0x.... 0x....      BL       __aeabi_fdiv
   \   000003EE   0x.... 0x....      LDR.W    R1,??DataTable5_11
   \   000003F2   0x6008             STR      R0,[R1, #+0]
    472                  Angle_gyrox0 = 0;
   \   000003F4   0x.... 0x....      LDR.W    R0,??DataTable5_24
   \   000003F8   0x2100             MOVS     R1,#+0
   \   000003FA   0x6001             STR      R1,[R0, #+0]
    473                  Angle_gyroy0 = 0;
   \   000003FC   0x.... 0x....      LDR.W    R0,??DataTable5_25
   \   00000400   0x2100             MOVS     R1,#+0
   \   00000402   0x6001             STR      R1,[R0, #+0]
    474                  Angle_gyroz0 = 0;
   \   00000404   0x.... 0x....      LDR.W    R0,??DataTable7
   \   00000408   0x2100             MOVS     R1,#+0
   \   0000040A   0x6001             STR      R1,[R0, #+0]
    475              }
    476          }
   \                     ??ReadMPUsteer_3:
   \   0000040C   0xBDF1             POP      {R0,R4-R7,PC}    ;; return

   \                                 In section .bss, align 4
   \                     ??Revise_gyroX:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     ??Revise_gyroY:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     ??Revise_gyroZ:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     ??dotx_gyro:
   \   00000000                      DS8 12

   \                                 In section .bss, align 4
   \                     ??doty_gyro:
   \   00000000                      DS8 12

   \                                 In section .bss, align 4
   \                     ??dotz_gyro:
   \   00000000                      DS8 12
    477          

   \                                 In section .text, align 2, keep-with-next
    478          void ReadMPU3205()
    479          {
   \                     ReadMPU3205:
   \   00000000   0xB5F8             PUSH     {R3-R7,LR}
    480              //float temp_dotgyrox, temp_dotgyroy, temp_dotgyroz;
    481              static float Revise_gyroX = 0, Revise_gyroY = 0, Revise_gyroZ = 0;
    482              int16 gyrox, gyroy, gyroz;
    483              static float dotx_gyro[3] = {0}, doty_gyro[3] = {0}, dotz_gyro[3] = {0};
    484              //  static float sum_gyrox = 0, sum_gyroy = 0, sum_gyroz = 0;
    485              //   float gx, gy, gz;
    486          
    487              while(hw_iic_readn(1, MPU3205_Addr, GX_H, BUF, 6));
   \                     ??ReadMPU3205_0:
   \   00000002   0x2006             MOVS     R0,#+6
   \   00000004   0x9000             STR      R0,[SP, #+0]
   \   00000006   0x.... 0x....      LDR.W    R3,??DataTable5_3
   \   0000000A   0x221D             MOVS     R2,#+29
   \   0000000C   0x21D0             MOVS     R1,#+208
   \   0000000E   0x2001             MOVS     R0,#+1
   \   00000010   0x.... 0x....      BL       hw_iic_readn
   \   00000014   0x2800             CMP      R0,#+0
   \   00000016   0xD1F4             BNE.N    ??ReadMPU3205_0
    488          
    489              gyrox = (BUF[0] << 8) + BUF[1] ;
   \   00000018   0x.... 0x....      LDR.W    R0,??DataTable5_3
   \   0000001C   0x7800             LDRB     R0,[R0, #+0]
   \   0000001E   0x0200             LSLS     R0,R0,#+8
   \   00000020   0x.... 0x....      LDR.W    R1,??DataTable5_3
   \   00000024   0x7849             LDRB     R1,[R1, #+1]
   \   00000026   0x1840             ADDS     R0,R0,R1
    490              gyroy = (BUF[2] << 8) + BUF[3] ;
   \   00000028   0x.... 0x....      LDR.W    R1,??DataTable5_3
   \   0000002C   0x7889             LDRB     R1,[R1, #+2]
   \   0000002E   0x0209             LSLS     R1,R1,#+8
   \   00000030   0x.... 0x....      LDR.W    R2,??DataTable5_3
   \   00000034   0x78D2             LDRB     R2,[R2, #+3]
   \   00000036   0x188F             ADDS     R7,R1,R2
    491              gyroz = (BUF[4] << 8) + BUF[5] ;
   \   00000038   0x.... 0x....      LDR.W    R1,??DataTable5_3
   \   0000003C   0x7909             LDRB     R1,[R1, #+4]
   \   0000003E   0x0209             LSLS     R1,R1,#+8
   \   00000040   0x.... 0x....      LDR.W    R2,??DataTable5_3
   \   00000044   0x7952             LDRB     R2,[R2, #+5]
   \   00000046   0x188E             ADDS     R6,R1,R2
    492          
    493          
    494              //gyrox = get_mid(xgyro[0],xgyro[1],xgyro[2]);
    495              //gyroy = get_mid(ygyro[0],ygyro[1],ygyro[2]);
    496              //gyroz = get_mid(zgyro[0],zgyro[1],zgyro[2]);
    497          
    498              Dot_gyro_x = (float)gyrox  / 14.375 - Revise_gyroX / T * 1000;
   \   00000048   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   0000004A   0x.... 0x....      BL       __aeabi_i2f
   \   0000004E   0x.... 0x....      BL       __aeabi_f2d
   \   00000052   0x2200             MOVS     R2,#+0
   \   00000054   0x.... 0x....      LDR.W    R3,??DataTable5_4  ;; 0x402cc000
   \   00000058   0x.... 0x....      BL       __aeabi_ddiv
   \   0000005C   0x0004             MOVS     R4,R0
   \   0000005E   0x000D             MOVS     R5,R1
   \   00000060   0x.... 0x....      LDR.W    R0,??DataTable6_2
   \   00000064   0x6800             LDR      R0,[R0, #+0]
   \   00000066   0x.... 0x....      BL       __aeabi_f2d
   \   0000006A   0x2200             MOVS     R2,#+0
   \   0000006C   0x.... 0x....      LDR.W    R3,??DataTable5_6  ;; 0x40040000
   \   00000070   0x.... 0x....      BL       __aeabi_ddiv
   \   00000074   0x2200             MOVS     R2,#+0
   \   00000076   0x.... 0x....      LDR.W    R3,??DataTable5_7  ;; 0x408f4000
   \   0000007A   0x.... 0x....      BL       __aeabi_dmul
   \   0000007E   0x0002             MOVS     R2,R0
   \   00000080   0x000B             MOVS     R3,R1
   \   00000082   0x0020             MOVS     R0,R4
   \   00000084   0x0029             MOVS     R1,R5
   \   00000086   0x.... 0x....      BL       __aeabi_dsub
   \   0000008A   0x.... 0x....      BL       __aeabi_d2f
   \   0000008E   0x.... 0x....      LDR.W    R1,??DataTable6_3
   \   00000092   0x6008             STR      R0,[R1, #+0]
    499              Dot_gyro_y = (float)gyroy  / 14.375 - Revise_gyroY / T * 1000;
   \   00000094   0xB23F             SXTH     R7,R7            ;; SignExt  R7,R7,#+16,#+16
   \   00000096   0x0038             MOVS     R0,R7
   \   00000098   0x.... 0x....      BL       __aeabi_i2f
   \   0000009C   0x.... 0x....      BL       __aeabi_f2d
   \   000000A0   0x2200             MOVS     R2,#+0
   \   000000A2   0x.... 0x....      LDR.W    R3,??DataTable5_4  ;; 0x402cc000
   \   000000A6   0x.... 0x....      BL       __aeabi_ddiv
   \   000000AA   0x0004             MOVS     R4,R0
   \   000000AC   0x000D             MOVS     R5,R1
   \   000000AE   0x.... 0x....      LDR.W    R0,??DataTable7_1
   \   000000B2   0x6800             LDR      R0,[R0, #+0]
   \   000000B4   0x.... 0x....      BL       __aeabi_f2d
   \   000000B8   0x2200             MOVS     R2,#+0
   \   000000BA   0x.... 0x....      LDR.W    R3,??DataTable5_6  ;; 0x40040000
   \   000000BE   0x.... 0x....      BL       __aeabi_ddiv
   \   000000C2   0x2200             MOVS     R2,#+0
   \   000000C4   0x.... 0x....      LDR.W    R3,??DataTable5_7  ;; 0x408f4000
   \   000000C8   0x.... 0x....      BL       __aeabi_dmul
   \   000000CC   0x0002             MOVS     R2,R0
   \   000000CE   0x000B             MOVS     R3,R1
   \   000000D0   0x0020             MOVS     R0,R4
   \   000000D2   0x0029             MOVS     R1,R5
   \   000000D4   0x.... 0x....      BL       __aeabi_dsub
   \   000000D8   0x.... 0x....      BL       __aeabi_d2f
   \   000000DC   0x.... 0x....      LDR.W    R1,??DataTable7_2
   \   000000E0   0x6008             STR      R0,[R1, #+0]
    500              Dot_gyro_z = (float)gyroz  / 14.375 - Revise_gyroZ / T * 1000;
   \   000000E2   0xB236             SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
   \   000000E4   0x0030             MOVS     R0,R6
   \   000000E6   0x.... 0x....      BL       __aeabi_i2f
   \   000000EA   0x.... 0x....      BL       __aeabi_f2d
   \   000000EE   0x2200             MOVS     R2,#+0
   \   000000F0   0x.... 0x....      LDR.W    R3,??DataTable5_4  ;; 0x402cc000
   \   000000F4   0x.... 0x....      BL       __aeabi_ddiv
   \   000000F8   0x0004             MOVS     R4,R0
   \   000000FA   0x000D             MOVS     R5,R1
   \   000000FC   0x.... 0x....      LDR.W    R0,??DataTable7_3
   \   00000100   0x6800             LDR      R0,[R0, #+0]
   \   00000102   0x.... 0x....      BL       __aeabi_f2d
   \   00000106   0x2200             MOVS     R2,#+0
   \   00000108   0x.... 0x....      LDR.W    R3,??DataTable5_6  ;; 0x40040000
   \   0000010C   0x.... 0x....      BL       __aeabi_ddiv
   \   00000110   0x2200             MOVS     R2,#+0
   \   00000112   0x.... 0x....      LDR.W    R3,??DataTable5_7  ;; 0x408f4000
   \   00000116   0x.... 0x....      BL       __aeabi_dmul
   \   0000011A   0x0002             MOVS     R2,R0
   \   0000011C   0x000B             MOVS     R3,R1
   \   0000011E   0x0020             MOVS     R0,R4
   \   00000120   0x0029             MOVS     R1,R5
   \   00000122   0x.... 0x....      BL       __aeabi_dsub
   \   00000126   0x.... 0x....      BL       __aeabi_d2f
   \   0000012A   0x.... 0x....      LDR.W    R1,??DataTable7_4
   \   0000012E   0x6008             STR      R0,[R1, #+0]
    501          
    502              for(uint8 i = 1; i < 3; i++)
   \   00000130   0x2001             MOVS     R0,#+1
   \   00000132   0xE024             B.N      ??ReadMPU3205_1
    503              {
    504                  dotx_gyro[i-1] = dotx_gyro[i];
   \                     ??ReadMPU3205_2:
   \   00000134   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000136   0x.... 0x....      LDR.W    R1,??DataTable7_5
   \   0000013A   0xEB11 0x0180      ADDS     R1,R1,R0, LSL #+2
   \   0000013E   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000140   0x.... 0x....      LDR.W    R2,??DataTable7_5
   \   00000144   0xF852 0x2020      LDR      R2,[R2, R0, LSL #+2]
   \   00000148   0xF841 0x2C04      STR      R2,[R1, #-4]
    505                  doty_gyro[i-1] = doty_gyro[i];
   \   0000014C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000014E   0x.... 0x....      LDR.W    R1,??DataTable7_6
   \   00000152   0xEB11 0x0180      ADDS     R1,R1,R0, LSL #+2
   \   00000156   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000158   0x.... 0x....      LDR.W    R2,??DataTable7_6
   \   0000015C   0xF852 0x2020      LDR      R2,[R2, R0, LSL #+2]
   \   00000160   0xF841 0x2C04      STR      R2,[R1, #-4]
    506                  dotz_gyro[i-1] = dotz_gyro[i];
   \   00000164   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000166   0x.... 0x....      LDR.W    R1,??DataTable7_7
   \   0000016A   0xEB11 0x0180      ADDS     R1,R1,R0, LSL #+2
   \   0000016E   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000170   0x.... 0x....      LDR.W    R2,??DataTable7_7
   \   00000174   0xF852 0x2020      LDR      R2,[R2, R0, LSL #+2]
   \   00000178   0xF841 0x2C04      STR      R2,[R1, #-4]
    507              }
   \   0000017C   0x1C40             ADDS     R0,R0,#+1
   \                     ??ReadMPU3205_1:
   \   0000017E   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000180   0x2803             CMP      R0,#+3
   \   00000182   0xD3D7             BCC.N    ??ReadMPU3205_2
    508              dotx_gyro[2] = Dot_gyro_x;
   \   00000184   0x.... 0x....      LDR.W    R0,??DataTable7_5
   \   00000188   0x.... 0x....      LDR.W    R1,??DataTable6_3
   \   0000018C   0x6809             LDR      R1,[R1, #+0]
   \   0000018E   0x6081             STR      R1,[R0, #+8]
    509              doty_gyro[2] = Dot_gyro_y;
   \   00000190   0x.... 0x....      LDR.W    R0,??DataTable7_6
   \   00000194   0x.... 0x....      LDR.W    R1,??DataTable7_2
   \   00000198   0x6809             LDR      R1,[R1, #+0]
   \   0000019A   0x6081             STR      R1,[R0, #+8]
    510              dotz_gyro[2] = Dot_gyro_z;
   \   0000019C   0x.... 0x....      LDR.W    R0,??DataTable7_7
   \   000001A0   0x.... 0x....      LDR.W    R1,??DataTable7_4
   \   000001A4   0x6809             LDR      R1,[R1, #+0]
   \   000001A6   0x6081             STR      R1,[R0, #+8]
    511              //temp_dotgyrox = Dot_gyro_x  / 57.3;
    512              //temp_dotgyroy = -Dot_gyro_y / 57.3;
    513              //temp_dotgyroz = Dot_gyro_z /  57.3;
    514              Dot_xgyro = (dotx_gyro[2] * 0.5  + dotx_gyro[1] * 0.3  + dotx_gyro[0] * 0.2)  / 57.3 ;
   \   000001A8   0x.... 0x....      LDR.W    R0,??DataTable7_5
   \   000001AC   0x6880             LDR      R0,[R0, #+8]
   \   000001AE   0x.... 0x....      BL       __aeabi_f2d
   \   000001B2   0x2200             MOVS     R2,#+0
   \   000001B4   0x.... 0x....      LDR.W    R3,??DataTable5_16  ;; 0x3fe00000
   \   000001B8   0x.... 0x....      BL       __aeabi_dmul
   \   000001BC   0x0004             MOVS     R4,R0
   \   000001BE   0x000D             MOVS     R5,R1
   \   000001C0   0x.... 0x....      LDR.W    R0,??DataTable7_5
   \   000001C4   0x6840             LDR      R0,[R0, #+4]
   \   000001C6   0x.... 0x....      BL       __aeabi_f2d
   \   000001CA   0xF05F 0x3233      MOVS     R2,#+858993459
   \   000001CE   0x.... 0x....      LDR.W    R3,??DataTable5_17  ;; 0x3fd33333
   \   000001D2   0x.... 0x....      BL       __aeabi_dmul
   \   000001D6   0x0022             MOVS     R2,R4
   \   000001D8   0x002B             MOVS     R3,R5
   \   000001DA   0x.... 0x....      BL       __aeabi_dadd
   \   000001DE   0x0004             MOVS     R4,R0
   \   000001E0   0x000D             MOVS     R5,R1
   \   000001E2   0x.... 0x....      LDR.W    R0,??DataTable7_5
   \   000001E6   0x6800             LDR      R0,[R0, #+0]
   \   000001E8   0x.... 0x....      BL       __aeabi_f2d
   \   000001EC   0x.... 0x....      LDR.W    R2,??DataTable5_18  ;; 0x9999999a
   \   000001F0   0x.... 0x....      LDR.W    R3,??DataTable5_19  ;; 0x3fc99999
   \   000001F4   0x.... 0x....      BL       __aeabi_dmul
   \   000001F8   0x0022             MOVS     R2,R4
   \   000001FA   0x002B             MOVS     R3,R5
   \   000001FC   0x.... 0x....      BL       __aeabi_dadd
   \   00000200   0xF05F 0x3266      MOVS     R2,#+1717986918
   \   00000204   0x.... 0x....      LDR.W    R3,??DataTable5_20  ;; 0x404ca666
   \   00000208   0x.... 0x....      BL       __aeabi_ddiv
   \   0000020C   0x.... 0x....      BL       __aeabi_d2f
   \   00000210   0x.... 0x....      LDR.W    R1,??DataTable8
   \   00000214   0x6008             STR      R0,[R1, #+0]
    515              Dot_ygyro = (doty_gyro[2] * 0.5  + doty_gyro[1] * 0.3  + doty_gyro[0] * 0.2)  / 57.3 ;
   \   00000216   0x.... 0x....      LDR.W    R0,??DataTable7_6
   \   0000021A   0x6880             LDR      R0,[R0, #+8]
   \   0000021C   0x.... 0x....      BL       __aeabi_f2d
   \   00000220   0x2200             MOVS     R2,#+0
   \   00000222   0x.... 0x....      LDR.W    R3,??DataTable5_16  ;; 0x3fe00000
   \   00000226   0x.... 0x....      BL       __aeabi_dmul
   \   0000022A   0x0004             MOVS     R4,R0
   \   0000022C   0x000D             MOVS     R5,R1
   \   0000022E   0x.... 0x....      LDR.W    R0,??DataTable7_6
   \   00000232   0x6840             LDR      R0,[R0, #+4]
   \   00000234   0x.... 0x....      BL       __aeabi_f2d
   \   00000238   0xF05F 0x3233      MOVS     R2,#+858993459
   \   0000023C   0x.... 0x....      LDR.W    R3,??DataTable5_17  ;; 0x3fd33333
   \   00000240   0x.... 0x....      BL       __aeabi_dmul
   \   00000244   0x0022             MOVS     R2,R4
   \   00000246   0x002B             MOVS     R3,R5
   \   00000248   0x.... 0x....      BL       __aeabi_dadd
   \   0000024C   0x0004             MOVS     R4,R0
   \   0000024E   0x000D             MOVS     R5,R1
   \   00000250   0x.... 0x....      LDR.W    R0,??DataTable7_6
   \   00000254   0x6800             LDR      R0,[R0, #+0]
   \   00000256   0x.... 0x....      BL       __aeabi_f2d
   \   0000025A   0x.... 0x....      LDR.W    R2,??DataTable5_18  ;; 0x9999999a
   \   0000025E   0x.... 0x....      LDR.W    R3,??DataTable5_19  ;; 0x3fc99999
   \   00000262   0x.... 0x....      BL       __aeabi_dmul
   \   00000266   0x0022             MOVS     R2,R4
   \   00000268   0x002B             MOVS     R3,R5
   \   0000026A   0x.... 0x....      BL       __aeabi_dadd
   \   0000026E   0xF05F 0x3266      MOVS     R2,#+1717986918
   \   00000272   0x.... 0x....      LDR.W    R3,??DataTable5_20  ;; 0x404ca666
   \   00000276   0x.... 0x....      BL       __aeabi_ddiv
   \   0000027A   0x.... 0x....      BL       __aeabi_d2f
   \   0000027E   0x.... 0x....      LDR.W    R1,??DataTable8_1
   \   00000282   0x6008             STR      R0,[R1, #+0]
    516              Dot_zgyro = (dotz_gyro[2] * 0.5  + dotz_gyro[1] * 0.3  + dotz_gyro[0] * 0.2)  / 57.3 ;
   \   00000284   0x.... 0x....      LDR.W    R0,??DataTable7_7
   \   00000288   0x6880             LDR      R0,[R0, #+8]
   \   0000028A   0x.... 0x....      BL       __aeabi_f2d
   \   0000028E   0x2200             MOVS     R2,#+0
   \   00000290   0x.... 0x....      LDR.W    R3,??DataTable5_16  ;; 0x3fe00000
   \   00000294   0x.... 0x....      BL       __aeabi_dmul
   \   00000298   0x0004             MOVS     R4,R0
   \   0000029A   0x000D             MOVS     R5,R1
   \   0000029C   0x.... 0x....      LDR.W    R0,??DataTable7_7
   \   000002A0   0x6840             LDR      R0,[R0, #+4]
   \   000002A2   0x.... 0x....      BL       __aeabi_f2d
   \   000002A6   0xF05F 0x3233      MOVS     R2,#+858993459
   \   000002AA   0x.... 0x....      LDR.W    R3,??DataTable5_17  ;; 0x3fd33333
   \   000002AE   0x.... 0x....      BL       __aeabi_dmul
   \   000002B2   0x0022             MOVS     R2,R4
   \   000002B4   0x002B             MOVS     R3,R5
   \   000002B6   0x.... 0x....      BL       __aeabi_dadd
   \   000002BA   0x0004             MOVS     R4,R0
   \   000002BC   0x000D             MOVS     R5,R1
   \   000002BE   0x.... 0x....      LDR.W    R0,??DataTable7_7
   \   000002C2   0x6800             LDR      R0,[R0, #+0]
   \   000002C4   0x.... 0x....      BL       __aeabi_f2d
   \   000002C8   0x.... 0x....      LDR.W    R2,??DataTable5_18  ;; 0x9999999a
   \   000002CC   0x.... 0x....      LDR.W    R3,??DataTable5_19  ;; 0x3fc99999
   \   000002D0   0x.... 0x....      BL       __aeabi_dmul
   \   000002D4   0x0022             MOVS     R2,R4
   \   000002D6   0x002B             MOVS     R3,R5
   \   000002D8   0x.... 0x....      BL       __aeabi_dadd
   \   000002DC   0xF05F 0x3266      MOVS     R2,#+1717986918
   \   000002E0   0x.... 0x....      LDR.W    R3,??DataTable5_20  ;; 0x404ca666
   \   000002E4   0x.... 0x....      BL       __aeabi_ddiv
   \   000002E8   0x.... 0x....      BL       __aeabi_d2f
   \   000002EC   0x.... 0x....      LDR.W    R1,??DataTable8_2
   \   000002F0   0x6008             STR      R0,[R1, #+0]
    517              //Dot_xgyro = Dot_gyro_x / 57.3;
    518              //Dot_ygyro = -Dot_gyro_y / 57.3;
    519              //Dot_zgyro = Dot_gyro_z / 57.3;
    520          
    521              Angle_gyrox += Dot_gyro_x * T / 1000 ;
   \   000002F2   0x.... 0x....      LDR.W    R0,??DataTable8_3
   \   000002F6   0x6800             LDR      R0,[R0, #+0]
   \   000002F8   0x.... 0x....      BL       __aeabi_f2d
   \   000002FC   0x0004             MOVS     R4,R0
   \   000002FE   0x000D             MOVS     R5,R1
   \   00000300   0x.... 0x....      LDR.W    R0,??DataTable6_3
   \   00000304   0x6800             LDR      R0,[R0, #+0]
   \   00000306   0x.... 0x....      BL       __aeabi_f2d
   \   0000030A   0x2200             MOVS     R2,#+0
   \   0000030C   0x.... 0x....      LDR.W    R3,??DataTable5_6  ;; 0x40040000
   \   00000310   0x.... 0x....      BL       __aeabi_dmul
   \   00000314   0x2200             MOVS     R2,#+0
   \   00000316   0x.... 0x....      LDR.W    R3,??DataTable5_7  ;; 0x408f4000
   \   0000031A   0x.... 0x....      BL       __aeabi_ddiv
   \   0000031E   0x0022             MOVS     R2,R4
   \   00000320   0x002B             MOVS     R3,R5
   \   00000322   0x.... 0x....      BL       __aeabi_dadd
   \   00000326   0x.... 0x....      BL       __aeabi_d2f
   \   0000032A   0x.... 0x....      LDR.W    R1,??DataTable8_3
   \   0000032E   0x6008             STR      R0,[R1, #+0]
    522              Angle_gyroy += Dot_gyro_y * T / 1000 ;
   \   00000330   0x.... 0x....      LDR.W    R0,??DataTable8_4
   \   00000334   0x6800             LDR      R0,[R0, #+0]
   \   00000336   0x.... 0x....      BL       __aeabi_f2d
   \   0000033A   0x0004             MOVS     R4,R0
   \   0000033C   0x000D             MOVS     R5,R1
   \   0000033E   0x.... 0x....      LDR.W    R0,??DataTable7_2
   \   00000342   0x6800             LDR      R0,[R0, #+0]
   \   00000344   0x.... 0x....      BL       __aeabi_f2d
   \   00000348   0x2200             MOVS     R2,#+0
   \   0000034A   0x.... 0x....      LDR.W    R3,??DataTable5_6  ;; 0x40040000
   \   0000034E   0x.... 0x....      BL       __aeabi_dmul
   \   00000352   0x2200             MOVS     R2,#+0
   \   00000354   0x.... 0x....      LDR.W    R3,??DataTable5_7  ;; 0x408f4000
   \   00000358   0x.... 0x....      BL       __aeabi_ddiv
   \   0000035C   0x0022             MOVS     R2,R4
   \   0000035E   0x002B             MOVS     R3,R5
   \   00000360   0x.... 0x....      BL       __aeabi_dadd
   \   00000364   0x.... 0x....      BL       __aeabi_d2f
   \   00000368   0x.... 0x....      LDR.W    R1,??DataTable8_4
   \   0000036C   0x6008             STR      R0,[R1, #+0]
    523              Angle_gyroz += Dot_gyro_z * T / 1000 ;
   \   0000036E   0x.... 0x....      LDR.W    R0,??DataTable8_5
   \   00000372   0x6800             LDR      R0,[R0, #+0]
   \   00000374   0x.... 0x....      BL       __aeabi_f2d
   \   00000378   0x0004             MOVS     R4,R0
   \   0000037A   0x000D             MOVS     R5,R1
   \   0000037C   0x.... 0x....      LDR.W    R0,??DataTable7_4
   \   00000380   0x6800             LDR      R0,[R0, #+0]
   \   00000382   0x.... 0x....      BL       __aeabi_f2d
   \   00000386   0x2200             MOVS     R2,#+0
   \   00000388   0x.... 0x....      LDR.W    R3,??DataTable5_6  ;; 0x40040000
   \   0000038C   0x.... 0x....      BL       __aeabi_dmul
   \   00000390   0x2200             MOVS     R2,#+0
   \   00000392   0x.... 0x....      LDR.W    R3,??DataTable5_7  ;; 0x408f4000
   \   00000396   0x.... 0x....      BL       __aeabi_ddiv
   \   0000039A   0x0022             MOVS     R2,R4
   \   0000039C   0x002B             MOVS     R3,R5
   \   0000039E   0x.... 0x....      BL       __aeabi_dadd
   \   000003A2   0x.... 0x....      BL       __aeabi_d2f
   \   000003A6   0x.... 0x....      LDR.W    R1,??DataTable8_5
   \   000003AA   0x6008             STR      R0,[R1, #+0]
    524          
    525              //////////////////////////修正0点，读COUNTER次然后取平均////////////////////////////
    526              if(Time_counter == COUNTER)
   \   000003AC   0x.... 0x....      LDR.W    R0,??DataTable6
   \   000003B0   0x6800             LDR      R0,[R0, #+0]
   \   000003B2   0xF5B0 0x7F7A      CMP      R0,#+1000
   \   000003B6   0xD129             BNE.N    ??ReadMPU3205_3
    527              {
    528                  Revise_gyroX = Angle_gyrox / COUNTER ;
   \   000003B8   0x.... 0x....      LDR.W    R0,??DataTable8_3
   \   000003BC   0x6800             LDR      R0,[R0, #+0]
   \   000003BE   0x.... 0x....      LDR.W    R1,??DataTable6_1  ;; 0x447a0000
   \   000003C2   0x.... 0x....      BL       __aeabi_fdiv
   \   000003C6   0x.... 0x....      LDR.W    R1,??DataTable6_2
   \   000003CA   0x6008             STR      R0,[R1, #+0]
    529                  Revise_gyroY = Angle_gyroy / COUNTER ;
   \   000003CC   0x.... 0x....      LDR.W    R0,??DataTable8_4
   \   000003D0   0x6800             LDR      R0,[R0, #+0]
   \   000003D2   0x.... 0x....      LDR.W    R1,??DataTable6_1  ;; 0x447a0000
   \   000003D6   0x.... 0x....      BL       __aeabi_fdiv
   \   000003DA   0x.... 0x....      LDR.W    R1,??DataTable7_1
   \   000003DE   0x6008             STR      R0,[R1, #+0]
    530                  Revise_gyroZ = Angle_gyroz / COUNTER ;
   \   000003E0   0x.... 0x....      LDR.W    R0,??DataTable8_5
   \   000003E4   0x6800             LDR      R0,[R0, #+0]
   \   000003E6   0x.... 0x....      LDR.W    R1,??DataTable6_1  ;; 0x447a0000
   \   000003EA   0x.... 0x....      BL       __aeabi_fdiv
   \   000003EE   0x.... 0x....      LDR.W    R1,??DataTable7_3
   \   000003F2   0x6008             STR      R0,[R1, #+0]
    531                  Angle_gyrox = 0;
   \   000003F4   0x.... 0x....      LDR.W    R0,??DataTable8_3
   \   000003F8   0x2100             MOVS     R1,#+0
   \   000003FA   0x6001             STR      R1,[R0, #+0]
    532                  Angle_gyroy = 0;
   \   000003FC   0x.... 0x....      LDR.W    R0,??DataTable8_4
   \   00000400   0x2100             MOVS     R1,#+0
   \   00000402   0x6001             STR      R1,[R0, #+0]
    533                  Angle_gyroz = 0;
   \   00000404   0x.... 0x....      LDR.W    R0,??DataTable8_5
   \   00000408   0x2100             MOVS     R1,#+0
   \   0000040A   0x6001             STR      R1,[R0, #+0]
    534              }
    535          }
   \                     ??ReadMPU3205_3:
   \   0000040C   0xBDF1             POP      {R0,R4-R7,PC}    ;; return

   \                                 In section .bss, align 4
   \                     ??Revise_gyroX_1:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     ??Revise_gyroY_1:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     ??Revise_gyroZ_1:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     ??dotx_gyro_1:
   \   00000000                      DS8 12

   \                                 In section .bss, align 4
   \                     ??doty_gyro_1:
   \   00000000                      DS8 12

   \                                 In section .bss, align 4
   \                     ??dotz_gyro_1:
   \   00000000                      DS8 12
    536          
    537          
    538          /**********************************************函数定义*****************************************************
    539          * 函数名称: void InitBMA180(void)
    540          * 输入参数: void
    541          * 返回参数: void
    542          * 功    能: 初始化BMA180
    543          * 作    者: by Yuson
    544          * 日    期: 2012-6-2
    545          ************************************************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    546          void InitBMA180(void)
    547          {
   \                     InitBMA180:
   \   00000000   0xB580             PUSH     {R7,LR}
    548              uint8 temp;
    549              Delay_ms(1);
   \   00000002   0xF05F 0x507E      MOVS     R0,#+1065353216
   \   00000006   0x.... 0x....      BL       Delay_ms
    550              while(hw_iic_read1(1, BMA180, ChipID, &temp));
   \                     ??InitBMA180_0:
   \   0000000A   0xAB00             ADD      R3,SP,#+0
   \   0000000C   0x2200             MOVS     R2,#+0
   \   0000000E   0x2180             MOVS     R1,#+128
   \   00000010   0x2001             MOVS     R0,#+1
   \   00000012   0x.... 0x....      BL       hw_iic_read1
   \   00000016   0x2800             CMP      R0,#+0
   \   00000018   0xD1F7             BNE.N    ??InitBMA180_0
    551              while(temp != 0x03);
   \                     ??InitBMA180_1:
   \   0000001A   0xF89D 0x0000      LDRB     R0,[SP, #+0]
   \   0000001E   0x2803             CMP      R0,#+3
   \   00000020   0xD1FB             BNE.N    ??InitBMA180_1
    552              Delay_ms(1);
   \   00000022   0xF05F 0x507E      MOVS     R0,#+1065353216
   \   00000026   0x.... 0x....      BL       Delay_ms
    553              while(hw_iic_write1(1, BMA180, Ctrl_reg0, 0x10));	//ee-w 1
   \                     ??InitBMA180_2:
   \   0000002A   0x2310             MOVS     R3,#+16
   \   0000002C   0x220D             MOVS     R2,#+13
   \   0000002E   0x2180             MOVS     R1,#+128
   \   00000030   0x2001             MOVS     R0,#+1
   \   00000032   0x.... 0x....      BL       hw_iic_write1
   \   00000036   0x2800             CMP      R0,#+0
   \   00000038   0xD1F7             BNE.N    ??InitBMA180_2
    554              Delay_ms(1);
   \   0000003A   0xF05F 0x507E      MOVS     R0,#+1065353216
   \   0000003E   0x.... 0x....      BL       Delay_ms
    555              while(hw_iic_read1(1, BMA180, BW_TCS, &temp));
   \                     ??InitBMA180_3:
   \   00000042   0xAB00             ADD      R3,SP,#+0
   \   00000044   0x2220             MOVS     R2,#+32
   \   00000046   0x2180             MOVS     R1,#+128
   \   00000048   0x2001             MOVS     R0,#+1
   \   0000004A   0x.... 0x....      BL       hw_iic_read1
   \   0000004E   0x2800             CMP      R0,#+0
   \   00000050   0xD1F7             BNE.N    ??InitBMA180_3
    556              temp &= 0x0f;
   \   00000052   0xF89D 0x0000      LDRB     R0,[SP, #+0]
   \   00000056   0xF010 0x000F      ANDS     R0,R0,#0xF
   \   0000005A   0xF88D 0x0000      STRB     R0,[SP, #+0]
    557              temp |= 1 << 4;
   \   0000005E   0xF89D 0x0000      LDRB     R0,[SP, #+0]
   \   00000062   0xF050 0x0010      ORRS     R0,R0,#0x10
   \   00000066   0xF88D 0x0000      STRB     R0,[SP, #+0]
    558              Delay_ms(1);
   \   0000006A   0xF05F 0x507E      MOVS     R0,#+1065353216
   \   0000006E   0x.... 0x....      BL       Delay_ms
    559              while(hw_iic_write1(1, BMA180, BW_TCS, temp));
   \                     ??InitBMA180_4:
   \   00000072   0xF89D 0x3000      LDRB     R3,[SP, #+0]
   \   00000076   0x2220             MOVS     R2,#+32
   \   00000078   0x2180             MOVS     R1,#+128
   \   0000007A   0x2001             MOVS     R0,#+1
   \   0000007C   0x.... 0x....      BL       hw_iic_write1
   \   00000080   0x2800             CMP      R0,#+0
   \   00000082   0xD1F6             BNE.N    ??InitBMA180_4
    560              Delay_ms(1);
   \   00000084   0xF05F 0x507E      MOVS     R0,#+1065353216
   \   00000088   0x.... 0x....      BL       Delay_ms
    561              while(hw_iic_read1(1, BMA180, TCO_Z, &temp));
   \                     ??InitBMA180_5:
   \   0000008C   0xAB00             ADD      R3,SP,#+0
   \   0000008E   0x2230             MOVS     R2,#+48
   \   00000090   0x2180             MOVS     R1,#+128
   \   00000092   0x2001             MOVS     R0,#+1
   \   00000094   0x.... 0x....      BL       hw_iic_read1
   \   00000098   0x2800             CMP      R0,#+0
   \   0000009A   0xD1F7             BNE.N    ??InitBMA180_5
    562              temp &= 0xfc;
   \   0000009C   0xF89D 0x0000      LDRB     R0,[SP, #+0]
   \   000000A0   0xF010 0x00FC      ANDS     R0,R0,#0xFC
   \   000000A4   0xF88D 0x0000      STRB     R0,[SP, #+0]
    563              temp |= 0;
   \   000000A8   0xF89D 0x0000      LDRB     R0,[SP, #+0]
   \   000000AC   0xF88D 0x0000      STRB     R0,[SP, #+0]
    564              Delay_ms(1);
   \   000000B0   0xF05F 0x507E      MOVS     R0,#+1065353216
   \   000000B4   0x.... 0x....      BL       Delay_ms
    565              while(hw_iic_write1(1, BMA180, TCO_Z, temp));
   \                     ??InitBMA180_6:
   \   000000B8   0xF89D 0x3000      LDRB     R3,[SP, #+0]
   \   000000BC   0x2230             MOVS     R2,#+48
   \   000000BE   0x2180             MOVS     R1,#+128
   \   000000C0   0x2001             MOVS     R0,#+1
   \   000000C2   0x.... 0x....      BL       hw_iic_write1
   \   000000C6   0x2800             CMP      R0,#+0
   \   000000C8   0xD1F6             BNE.N    ??InitBMA180_6
    566              Delay_ms(1);
   \   000000CA   0xF05F 0x507E      MOVS     R0,#+1065353216
   \   000000CE   0x.... 0x....      BL       Delay_ms
    567              while(hw_iic_read1(1, BMA180, Offset_lsb1, &temp));
   \                     ??InitBMA180_7:
   \   000000D2   0xAB00             ADD      R3,SP,#+0
   \   000000D4   0x2235             MOVS     R2,#+53
   \   000000D6   0x2180             MOVS     R1,#+128
   \   000000D8   0x2001             MOVS     R0,#+1
   \   000000DA   0x.... 0x....      BL       hw_iic_read1
   \   000000DE   0x2800             CMP      R0,#+0
   \   000000E0   0xD1F7             BNE.N    ??InitBMA180_7
    568              temp &= 0xf1;
   \   000000E2   0xF89D 0x0000      LDRB     R0,[SP, #+0]
   \   000000E6   0xF010 0x00F1      ANDS     R0,R0,#0xF1
   \   000000EA   0xF88D 0x0000      STRB     R0,[SP, #+0]
    569              temp |= 0x02 << 1;//+-2g 0.25mg/lsb
   \   000000EE   0xF89D 0x0000      LDRB     R0,[SP, #+0]
   \   000000F2   0xF050 0x0004      ORRS     R0,R0,#0x4
   \   000000F6   0xF88D 0x0000      STRB     R0,[SP, #+0]
    570              Delay_ms(1);
   \   000000FA   0xF05F 0x507E      MOVS     R0,#+1065353216
   \   000000FE   0x.... 0x....      BL       Delay_ms
    571              while(hw_iic_write1(1, BMA180, Offset_lsb1, temp));
   \                     ??InitBMA180_8:
   \   00000102   0xF89D 0x3000      LDRB     R3,[SP, #+0]
   \   00000106   0x2235             MOVS     R2,#+53
   \   00000108   0x2180             MOVS     R1,#+128
   \   0000010A   0x2001             MOVS     R0,#+1
   \   0000010C   0x.... 0x....      BL       hw_iic_write1
   \   00000110   0x2800             CMP      R0,#+0
   \   00000112   0xD1F6             BNE.N    ??InitBMA180_8
    572              Delay_ms(1);
   \   00000114   0xF05F 0x507E      MOVS     R0,#+1065353216
   \   00000118   0x.... 0x....      BL       Delay_ms
    573          }
   \   0000011C   0xBD01             POP      {R0,PC}          ;; return
    574          
    575          
    576          /**********************************************函数定义*****************************************************
    577          * 函数名称: void ReadBMA180(void)
    578          * 输入参数: void
    579          * 返回参数: void
    580          * 功    能: 读取BMA180的数据
    581          * 作    者: by Yuson
    582          * 日    期: 2012-6-2
    583          ************************************************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    584          void ReadBMA180(void)
    585          {
   \                     ReadBMA180:
   \   00000000   0xB5F8             PUSH     {R3-R7,LR}
    586          #define count  20
    587              static float xacc[count] = {0}, yacc[count] = {0}, zacc[count] = {0};
    588              int16 Xdat, Ydat, Zdat;
    589              static float Revise_accX = 0, Revise_accY = 0, Revise_accZ = 0;
    590              static float sum_accx = 0, sum_accy = 0, sum_accz = 0;
    591          
    592              while(hw_iic_readn(1, BMA180, DATAX0, BUF, 6));
   \                     ??ReadBMA180_0:
   \   00000002   0x2006             MOVS     R0,#+6
   \   00000004   0x9000             STR      R0,[SP, #+0]
   \   00000006   0x....             LDR.N    R3,??DataTable5_3
   \   00000008   0x2202             MOVS     R2,#+2
   \   0000000A   0x2180             MOVS     R1,#+128
   \   0000000C   0x2001             MOVS     R0,#+1
   \   0000000E   0x.... 0x....      BL       hw_iic_readn
   \   00000012   0x2800             CMP      R0,#+0
   \   00000014   0xD1F5             BNE.N    ??ReadBMA180_0
    593              Xdat = BUF[1] << 8 | BUF[0];
   \   00000016   0x....             LDR.N    R0,??DataTable5_3
   \   00000018   0x7840             LDRB     R0,[R0, #+1]
   \   0000001A   0x....             LDR.N    R1,??DataTable5_3
   \   0000001C   0x7809             LDRB     R1,[R1, #+0]
   \   0000001E   0xEA51 0x2400      ORRS     R4,R1,R0, LSL #+8
    594              Ydat = BUF[3] << 8 | BUF[2];
   \   00000022   0x....             LDR.N    R0,??DataTable5_3
   \   00000024   0x78C0             LDRB     R0,[R0, #+3]
   \   00000026   0x....             LDR.N    R1,??DataTable5_3
   \   00000028   0x7889             LDRB     R1,[R1, #+2]
   \   0000002A   0xEA51 0x2500      ORRS     R5,R1,R0, LSL #+8
    595              Zdat = BUF[5] << 8 | BUF[4];
   \   0000002E   0x....             LDR.N    R0,??DataTable5_3
   \   00000030   0x7940             LDRB     R0,[R0, #+5]
   \   00000032   0x....             LDR.N    R1,??DataTable5_3
   \   00000034   0x7909             LDRB     R1,[R1, #+4]
   \   00000036   0xEA51 0x2600      ORRS     R6,R1,R0, LSL #+8
    596          
    597              if(Time_counter <= COUNTER)
   \   0000003A   0x.... 0x....      LDR.W    R0,??DataTable6
   \   0000003E   0x6800             LDR      R0,[R0, #+0]
   \   00000040   0xF5B0 0x7F7A      CMP      R0,#+1000
   \   00000044   0xD823             BHI.N    ??ReadBMA180_1
    598              {
    599                  sum_accx += Xdat;
   \   00000046   0xB224             SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
   \   00000048   0x0020             MOVS     R0,R4
   \   0000004A   0x.... 0x....      BL       __aeabi_i2f
   \   0000004E   0x.... 0x....      LDR.W    R1,??DataTable8_6
   \   00000052   0x6809             LDR      R1,[R1, #+0]
   \   00000054   0x.... 0x....      BL       __aeabi_fadd
   \   00000058   0x.... 0x....      LDR.W    R1,??DataTable8_6
   \   0000005C   0x6008             STR      R0,[R1, #+0]
    600                  sum_accy += Ydat;
   \   0000005E   0xB22D             SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
   \   00000060   0x0028             MOVS     R0,R5
   \   00000062   0x.... 0x....      BL       __aeabi_i2f
   \   00000066   0x.... 0x....      LDR.W    R1,??DataTable8_7
   \   0000006A   0x6809             LDR      R1,[R1, #+0]
   \   0000006C   0x.... 0x....      BL       __aeabi_fadd
   \   00000070   0x.... 0x....      LDR.W    R1,??DataTable8_7
   \   00000074   0x6008             STR      R0,[R1, #+0]
    601                  sum_accz += Zdat;
   \   00000076   0xB236             SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
   \   00000078   0x0030             MOVS     R0,R6
   \   0000007A   0x.... 0x....      BL       __aeabi_i2f
   \   0000007E   0x.... 0x....      LDR.W    R1,??DataTable8_8
   \   00000082   0x6809             LDR      R1,[R1, #+0]
   \   00000084   0x.... 0x....      BL       __aeabi_fadd
   \   00000088   0x.... 0x....      LDR.W    R1,??DataTable8_8
   \   0000008C   0x6008             STR      R0,[R1, #+0]
    602              }
    603              if(Time_counter == COUNTER)
   \                     ??ReadBMA180_1:
   \   0000008E   0x.... 0x....      LDR.W    R0,??DataTable6
   \   00000092   0x6800             LDR      R0,[R0, #+0]
   \   00000094   0xF5B0 0x7F7A      CMP      R0,#+1000
   \   00000098   0xD129             BNE.N    ??ReadBMA180_2
    604              {
    605                  Revise_accX = sum_accx / COUNTER;
   \   0000009A   0x.... 0x....      LDR.W    R0,??DataTable8_6
   \   0000009E   0x6800             LDR      R0,[R0, #+0]
   \   000000A0   0x.... 0x....      LDR.W    R1,??DataTable6_1  ;; 0x447a0000
   \   000000A4   0x.... 0x....      BL       __aeabi_fdiv
   \   000000A8   0x.... 0x....      LDR.W    R1,??DataTable8_9
   \   000000AC   0x6008             STR      R0,[R1, #+0]
    606                  Revise_accY = sum_accy / COUNTER;
   \   000000AE   0x.... 0x....      LDR.W    R0,??DataTable8_7
   \   000000B2   0x6800             LDR      R0,[R0, #+0]
   \   000000B4   0x.... 0x....      LDR.W    R1,??DataTable6_1  ;; 0x447a0000
   \   000000B8   0x.... 0x....      BL       __aeabi_fdiv
   \   000000BC   0x.... 0x....      LDR.W    R1,??DataTable8_10
   \   000000C0   0x6008             STR      R0,[R1, #+0]
    607                  Revise_accZ = sum_accz / COUNTER;
   \   000000C2   0x.... 0x....      LDR.W    R0,??DataTable8_8
   \   000000C6   0x6800             LDR      R0,[R0, #+0]
   \   000000C8   0x.... 0x....      LDR.W    R1,??DataTable6_1  ;; 0x447a0000
   \   000000CC   0x.... 0x....      BL       __aeabi_fdiv
   \   000000D0   0x.... 0x....      LDR.W    R1,??DataTable8_11
   \   000000D4   0x6008             STR      R0,[R1, #+0]
    608                  Angle_accx = 0;
   \   000000D6   0x.... 0x....      LDR.W    R0,??DataTable8_12
   \   000000DA   0x2100             MOVS     R1,#+0
   \   000000DC   0x6001             STR      R1,[R0, #+0]
    609                  Angle_accy = 0;
   \   000000DE   0x.... 0x....      LDR.W    R0,??DataTable8_13
   \   000000E2   0x2100             MOVS     R1,#+0
   \   000000E4   0x6001             STR      R1,[R0, #+0]
    610                  Angle_accz = 0;
   \   000000E6   0x.... 0x....      LDR.W    R0,??DataTable8_14
   \   000000EA   0x2100             MOVS     R1,#+0
   \   000000EC   0x6001             STR      R1,[R0, #+0]
    611              }
    612              if(Time_counter > COUNTER)
   \                     ??ReadBMA180_2:
   \   000000EE   0x.... 0x....      LDR.W    R0,??DataTable6
   \   000000F2   0x6800             LDR      R0,[R0, #+0]
   \   000000F4   0xF5B0 0x7F7A      CMP      R0,#+1000
   \   000000F8   0xF240 0x80BF      BLS.W    ??ReadBMA180_3
    613              {
    614                  for(uint8 i = 1; i < count; i++)
   \   000000FC   0x2001             MOVS     R0,#+1
   \   000000FE   0xE024             B.N      ??ReadBMA180_4
    615                  {
    616                      xacc[i-1] = xacc[i];
   \                     ??ReadBMA180_5:
   \   00000100   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000102   0x.... 0x....      LDR.W    R1,??DataTable8_15
   \   00000106   0xEB11 0x0180      ADDS     R1,R1,R0, LSL #+2
   \   0000010A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000010C   0x.... 0x....      LDR.W    R2,??DataTable8_15
   \   00000110   0xF852 0x2020      LDR      R2,[R2, R0, LSL #+2]
   \   00000114   0xF841 0x2C04      STR      R2,[R1, #-4]
    617                      yacc[i-1] = yacc[i];
   \   00000118   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000011A   0x.... 0x....      LDR.W    R1,??DataTable8_16
   \   0000011E   0xEB11 0x0180      ADDS     R1,R1,R0, LSL #+2
   \   00000122   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000124   0x.... 0x....      LDR.W    R2,??DataTable8_16
   \   00000128   0xF852 0x2020      LDR      R2,[R2, R0, LSL #+2]
   \   0000012C   0xF841 0x2C04      STR      R2,[R1, #-4]
    618                      zacc[i-1] = zacc[i];
   \   00000130   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000132   0x.... 0x....      LDR.W    R1,??DataTable8_17
   \   00000136   0xEB11 0x0180      ADDS     R1,R1,R0, LSL #+2
   \   0000013A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000013C   0x.... 0x....      LDR.W    R2,??DataTable8_17
   \   00000140   0xF852 0x2020      LDR      R2,[R2, R0, LSL #+2]
   \   00000144   0xF841 0x2C04      STR      R2,[R1, #-4]
    619                  }
   \   00000148   0x1C40             ADDS     R0,R0,#+1
   \                     ??ReadBMA180_4:
   \   0000014A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000014C   0x2814             CMP      R0,#+20
   \   0000014E   0xD3D7             BCC.N    ??ReadBMA180_5
    620          
    621                  xacc[count-1] = Xdat;
   \   00000150   0xB224             SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
   \   00000152   0x0020             MOVS     R0,R4
   \   00000154   0x.... 0x....      BL       __aeabi_i2f
   \   00000158   0x.... 0x....      LDR.W    R1,??DataTable8_15
   \   0000015C   0x64C8             STR      R0,[R1, #+76]
    622                  yacc[count-1] = Ydat;
   \   0000015E   0xB22D             SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
   \   00000160   0x0028             MOVS     R0,R5
   \   00000162   0x.... 0x....      BL       __aeabi_i2f
   \   00000166   0x.... 0x....      LDR.W    R1,??DataTable8_16
   \   0000016A   0x64C8             STR      R0,[R1, #+76]
    623                  zacc[count-1] = Zdat;
   \   0000016C   0xB236             SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
   \   0000016E   0x0030             MOVS     R0,R6
   \   00000170   0x.... 0x....      BL       __aeabi_i2f
   \   00000174   0x.... 0x....      LDR.W    R1,??DataTable8_17
   \   00000178   0x64C8             STR      R0,[R1, #+76]
    624          
    625                  float xdata = 0, ydata = 0, zdata = 0;
   \   0000017A   0x2600             MOVS     R6,#+0
   \   0000017C   0x2400             MOVS     R4,#+0
   \   0000017E   0x2500             MOVS     R5,#+0
    626                  for(uint8 i = 0; i < count; i++)
   \   00000180   0x2700             MOVS     R7,#+0
   \   00000182   0xE02A             B.N      ??ReadBMA180_6
    627                  {
    628                      xdata += xacc[i] / (float)count;
   \                     ??ReadBMA180_7:
   \   00000184   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   00000186   0x.... 0x....      LDR.W    R0,??DataTable8_15
   \   0000018A   0xF850 0x0027      LDR      R0,[R0, R7, LSL #+2]
   \   0000018E   0x.... 0x....      LDR.W    R1,??DataTable8_18  ;; 0x41a00000
   \   00000192   0x.... 0x....      BL       __aeabi_fdiv
   \   00000196   0x0001             MOVS     R1,R0
   \   00000198   0x0030             MOVS     R0,R6
   \   0000019A   0x.... 0x....      BL       __aeabi_fadd
   \   0000019E   0x0006             MOVS     R6,R0
    629                      ydata += yacc[i] / (float)count;
   \   000001A0   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   000001A2   0x.... 0x....      LDR.W    R0,??DataTable8_16
   \   000001A6   0xF850 0x0027      LDR      R0,[R0, R7, LSL #+2]
   \   000001AA   0x.... 0x....      LDR.W    R1,??DataTable8_18  ;; 0x41a00000
   \   000001AE   0x.... 0x....      BL       __aeabi_fdiv
   \   000001B2   0x0001             MOVS     R1,R0
   \   000001B4   0x0020             MOVS     R0,R4
   \   000001B6   0x.... 0x....      BL       __aeabi_fadd
   \   000001BA   0x0004             MOVS     R4,R0
    630                      zdata += zacc[i] / (float)count;
   \   000001BC   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   000001BE   0x.... 0x....      LDR.W    R0,??DataTable8_17
   \   000001C2   0xF850 0x0027      LDR      R0,[R0, R7, LSL #+2]
   \   000001C6   0x.... 0x....      LDR.W    R1,??DataTable8_18  ;; 0x41a00000
   \   000001CA   0x.... 0x....      BL       __aeabi_fdiv
   \   000001CE   0x0001             MOVS     R1,R0
   \   000001D0   0x0028             MOVS     R0,R5
   \   000001D2   0x.... 0x....      BL       __aeabi_fadd
   \   000001D6   0x0005             MOVS     R5,R0
    631                  }
   \   000001D8   0x1C7F             ADDS     R7,R7,#+1
   \                     ??ReadBMA180_6:
   \   000001DA   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   000001DC   0x2F14             CMP      R7,#+20
   \   000001DE   0xD3D1             BCC.N    ??ReadBMA180_7
    632          
    633                  Dot_xacc = (xdata - Revise_accX) * 0.244 / 4000.0;
   \   000001E0   0x0030             MOVS     R0,R6
   \   000001E2   0x.... 0x....      LDR.W    R1,??DataTable8_9
   \   000001E6   0x6809             LDR      R1,[R1, #+0]
   \   000001E8   0x.... 0x....      BL       __aeabi_fsub
   \   000001EC   0x.... 0x....      BL       __aeabi_f2d
   \   000001F0   0x.... 0x....      LDR.W    R2,??DataTable8_19  ;; 0x5a1cac08
   \   000001F4   0x.... 0x....      LDR.W    R3,??DataTable8_20  ;; 0x3fcf3b64
   \   000001F8   0x.... 0x....      BL       __aeabi_dmul
   \   000001FC   0x2200             MOVS     R2,#+0
   \   000001FE   0x.... 0x....      LDR.W    R3,??DataTable8_21  ;; 0x40af4000
   \   00000202   0x.... 0x....      BL       __aeabi_ddiv
   \   00000206   0x.... 0x....      BL       __aeabi_d2f
   \   0000020A   0x.... 0x....      LDR.W    R1,??DataTable8_22
   \   0000020E   0x6008             STR      R0,[R1, #+0]
    634                  //if(Dot_xacc > 0 ) Dot_xacc /= 1.025;
    635                  //else Dot_xacc /= 0.945;
    636                  Dot_yacc = (ydata - Revise_accY) * 0.244 / 4000.0;
   \   00000210   0x0020             MOVS     R0,R4
   \   00000212   0x.... 0x....      LDR.W    R1,??DataTable8_10
   \   00000216   0x6809             LDR      R1,[R1, #+0]
   \   00000218   0x.... 0x....      BL       __aeabi_fsub
   \   0000021C   0x.... 0x....      BL       __aeabi_f2d
   \   00000220   0x.... 0x....      LDR.W    R2,??DataTable8_19  ;; 0x5a1cac08
   \   00000224   0x.... 0x....      LDR.W    R3,??DataTable8_20  ;; 0x3fcf3b64
   \   00000228   0x.... 0x....      BL       __aeabi_dmul
   \   0000022C   0x2200             MOVS     R2,#+0
   \   0000022E   0x.... 0x....      LDR.W    R3,??DataTable8_21  ;; 0x40af4000
   \   00000232   0x.... 0x....      BL       __aeabi_ddiv
   \   00000236   0x.... 0x....      BL       __aeabi_d2f
   \   0000023A   0x.... 0x....      LDR.W    R1,??DataTable8_23
   \   0000023E   0x6008             STR      R0,[R1, #+0]
    637                  //if(Dot_yacc > 0)Dot_yacc /= 0.982;
    638                  Dot_zacc = (zdata - (Revise_accZ - 16393)) * 0.244 / 4000.0;
   \   00000240   0x.... 0x....      LDR.W    R0,??DataTable8_11
   \   00000244   0x6800             LDR      R0,[R0, #+0]
   \   00000246   0x.... 0x....      LDR.W    R1,??DataTable8_24  ;; 0xc6801200
   \   0000024A   0x.... 0x....      BL       __aeabi_fadd
   \   0000024E   0x0001             MOVS     R1,R0
   \   00000250   0x0028             MOVS     R0,R5
   \   00000252   0x.... 0x....      BL       __aeabi_fsub
   \   00000256   0x.... 0x....      BL       __aeabi_f2d
   \   0000025A   0x.... 0x....      LDR.W    R2,??DataTable8_19  ;; 0x5a1cac08
   \   0000025E   0x.... 0x....      LDR.W    R3,??DataTable8_20  ;; 0x3fcf3b64
   \   00000262   0x.... 0x....      BL       __aeabi_dmul
   \   00000266   0x2200             MOVS     R2,#+0
   \   00000268   0x.... 0x....      LDR.W    R3,??DataTable8_21  ;; 0x40af4000
   \   0000026C   0x.... 0x....      BL       __aeabi_ddiv
   \   00000270   0x.... 0x....      BL       __aeabi_d2f
   \   00000274   0x.... 0x....      LDR.W    R1,??DataTable8_25
   \   00000278   0x6008             STR      R0,[R1, #+0]
    639              }
    640          }
   \                     ??ReadBMA180_3:
   \   0000027A   0xBDF1             POP      {R0,R4-R7,PC}    ;; return

   \                                 In section .bss, align 4
   \                     ??xacc:
   \   00000000                      DS8 80

   \                                 In section .bss, align 4
   \                     ??yacc:
   \   00000000                      DS8 80

   \                                 In section .bss, align 4
   \                     ??zacc:
   \   00000000                      DS8 80

   \                                 In section .bss, align 4
   \                     ??Revise_accX:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     ??Revise_accY:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     ??Revise_accZ:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     ??sum_accx:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     ??sum_accy:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     ??sum_accz:
   \   00000000                      DS8 4
    641          
    642          /**********************************************函数定义*****************************************************
    643          * 函数名称: void InitBMAsteer(void)
    644          * 输入参数: void
    645          * 返回参数: void
    646          * 功    能: 初始化BMA180
    647          * 作    者: by Hins
    648          * 日    期: 2015-3-5
    649          ************************************************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    650          void InitBMAsteer(void)
    651          {
   \                     InitBMAsteer:
   \   00000000   0xB580             PUSH     {R7,LR}
    652              uint8 temp;
    653              Delay_ms(1);
   \   00000002   0xF05F 0x507E      MOVS     R0,#+1065353216
   \   00000006   0x.... 0x....      BL       Delay_ms
    654              while(hw_iic_read1(0, BMA180, ChipID, &temp));
   \                     ??InitBMAsteer_0:
   \   0000000A   0xAB00             ADD      R3,SP,#+0
   \   0000000C   0x2200             MOVS     R2,#+0
   \   0000000E   0x2180             MOVS     R1,#+128
   \   00000010   0x2000             MOVS     R0,#+0
   \   00000012   0x.... 0x....      BL       hw_iic_read1
   \   00000016   0x2800             CMP      R0,#+0
   \   00000018   0xD1F7             BNE.N    ??InitBMAsteer_0
    655              while(temp != 0x03);
   \                     ??InitBMAsteer_1:
   \   0000001A   0xF89D 0x0000      LDRB     R0,[SP, #+0]
   \   0000001E   0x2803             CMP      R0,#+3
   \   00000020   0xD1FB             BNE.N    ??InitBMAsteer_1
    656              Delay_ms(1);
   \   00000022   0xF05F 0x507E      MOVS     R0,#+1065353216
   \   00000026   0x.... 0x....      BL       Delay_ms
    657              while(hw_iic_write1(0, BMA180, Ctrl_reg0, 0x10));	//ee-w 1
   \                     ??InitBMAsteer_2:
   \   0000002A   0x2310             MOVS     R3,#+16
   \   0000002C   0x220D             MOVS     R2,#+13
   \   0000002E   0x2180             MOVS     R1,#+128
   \   00000030   0x2000             MOVS     R0,#+0
   \   00000032   0x.... 0x....      BL       hw_iic_write1
   \   00000036   0x2800             CMP      R0,#+0
   \   00000038   0xD1F7             BNE.N    ??InitBMAsteer_2
    658              Delay_ms(1);
   \   0000003A   0xF05F 0x507E      MOVS     R0,#+1065353216
   \   0000003E   0x.... 0x....      BL       Delay_ms
    659              while(hw_iic_read1(0, BMA180, BW_TCS, &temp));
   \                     ??InitBMAsteer_3:
   \   00000042   0xAB00             ADD      R3,SP,#+0
   \   00000044   0x2220             MOVS     R2,#+32
   \   00000046   0x2180             MOVS     R1,#+128
   \   00000048   0x2000             MOVS     R0,#+0
   \   0000004A   0x.... 0x....      BL       hw_iic_read1
   \   0000004E   0x2800             CMP      R0,#+0
   \   00000050   0xD1F7             BNE.N    ??InitBMAsteer_3
    660              temp &= 0x0f;
   \   00000052   0xF89D 0x0000      LDRB     R0,[SP, #+0]
   \   00000056   0xF010 0x000F      ANDS     R0,R0,#0xF
   \   0000005A   0xF88D 0x0000      STRB     R0,[SP, #+0]
    661              temp |= 1 << 4;
   \   0000005E   0xF89D 0x0000      LDRB     R0,[SP, #+0]
   \   00000062   0xF050 0x0010      ORRS     R0,R0,#0x10
   \   00000066   0xF88D 0x0000      STRB     R0,[SP, #+0]
    662              Delay_ms(1);
   \   0000006A   0xF05F 0x507E      MOVS     R0,#+1065353216
   \   0000006E   0x.... 0x....      BL       Delay_ms
    663              while(hw_iic_write1(0, BMA180, BW_TCS, temp));
   \                     ??InitBMAsteer_4:
   \   00000072   0xF89D 0x3000      LDRB     R3,[SP, #+0]
   \   00000076   0x2220             MOVS     R2,#+32
   \   00000078   0x2180             MOVS     R1,#+128
   \   0000007A   0x2000             MOVS     R0,#+0
   \   0000007C   0x.... 0x....      BL       hw_iic_write1
   \   00000080   0x2800             CMP      R0,#+0
   \   00000082   0xD1F6             BNE.N    ??InitBMAsteer_4
    664              Delay_ms(1);
   \   00000084   0xF05F 0x507E      MOVS     R0,#+1065353216
   \   00000088   0x.... 0x....      BL       Delay_ms
    665              while(hw_iic_read1(0, BMA180, TCO_Z, &temp));
   \                     ??InitBMAsteer_5:
   \   0000008C   0xAB00             ADD      R3,SP,#+0
   \   0000008E   0x2230             MOVS     R2,#+48
   \   00000090   0x2180             MOVS     R1,#+128
   \   00000092   0x2000             MOVS     R0,#+0
   \   00000094   0x.... 0x....      BL       hw_iic_read1
   \   00000098   0x2800             CMP      R0,#+0
   \   0000009A   0xD1F7             BNE.N    ??InitBMAsteer_5
    666              temp &= 0xfc;
   \   0000009C   0xF89D 0x0000      LDRB     R0,[SP, #+0]
   \   000000A0   0xF010 0x00FC      ANDS     R0,R0,#0xFC
   \   000000A4   0xF88D 0x0000      STRB     R0,[SP, #+0]
    667              temp |= 0;
   \   000000A8   0xF89D 0x0000      LDRB     R0,[SP, #+0]
   \   000000AC   0xF88D 0x0000      STRB     R0,[SP, #+0]
    668              Delay_ms(1);
   \   000000B0   0xF05F 0x507E      MOVS     R0,#+1065353216
   \   000000B4   0x.... 0x....      BL       Delay_ms
    669              while(hw_iic_write1(0, BMA180, TCO_Z, temp));
   \                     ??InitBMAsteer_6:
   \   000000B8   0xF89D 0x3000      LDRB     R3,[SP, #+0]
   \   000000BC   0x2230             MOVS     R2,#+48
   \   000000BE   0x2180             MOVS     R1,#+128
   \   000000C0   0x2000             MOVS     R0,#+0
   \   000000C2   0x.... 0x....      BL       hw_iic_write1
   \   000000C6   0x2800             CMP      R0,#+0
   \   000000C8   0xD1F6             BNE.N    ??InitBMAsteer_6
    670              Delay_ms(1);
   \   000000CA   0xF05F 0x507E      MOVS     R0,#+1065353216
   \   000000CE   0x.... 0x....      BL       Delay_ms
    671              while(hw_iic_read1(0, BMA180, Offset_lsb1, &temp));
   \                     ??InitBMAsteer_7:
   \   000000D2   0xAB00             ADD      R3,SP,#+0
   \   000000D4   0x2235             MOVS     R2,#+53
   \   000000D6   0x2180             MOVS     R1,#+128
   \   000000D8   0x2000             MOVS     R0,#+0
   \   000000DA   0x.... 0x....      BL       hw_iic_read1
   \   000000DE   0x2800             CMP      R0,#+0
   \   000000E0   0xD1F7             BNE.N    ??InitBMAsteer_7
    672              temp &= 0xf1;
   \   000000E2   0xF89D 0x0000      LDRB     R0,[SP, #+0]
   \   000000E6   0xF010 0x00F1      ANDS     R0,R0,#0xF1
   \   000000EA   0xF88D 0x0000      STRB     R0,[SP, #+0]
    673              temp |= 0x02 << 1;//+-2g 0.25mg/lsb
   \   000000EE   0xF89D 0x0000      LDRB     R0,[SP, #+0]
   \   000000F2   0xF050 0x0004      ORRS     R0,R0,#0x4
   \   000000F6   0xF88D 0x0000      STRB     R0,[SP, #+0]
    674              Delay_ms(1);
   \   000000FA   0xF05F 0x507E      MOVS     R0,#+1065353216
   \   000000FE   0x.... 0x....      BL       Delay_ms
    675              while(hw_iic_write1(0, BMA180, Offset_lsb1, temp));
   \                     ??InitBMAsteer_8:
   \   00000102   0xF89D 0x3000      LDRB     R3,[SP, #+0]
   \   00000106   0x2235             MOVS     R2,#+53
   \   00000108   0x2180             MOVS     R1,#+128
   \   0000010A   0x2000             MOVS     R0,#+0
   \   0000010C   0x.... 0x....      BL       hw_iic_write1
   \   00000110   0x2800             CMP      R0,#+0
   \   00000112   0xD1F6             BNE.N    ??InitBMAsteer_8
    676              Delay_ms(1);
   \   00000114   0xF05F 0x507E      MOVS     R0,#+1065353216
   \   00000118   0x.... 0x....      BL       Delay_ms
    677          }
   \   0000011C   0xBD01             POP      {R0,PC}          ;; return
    678          
    679          
    680          /**********************************************函数定义*****************************************************
    681          * 函数名称: void ReadBMAsteer(void)
    682          * 输入参数: void
    683          * 返回参数: void
    684          * 功    能: 读取BMA180的数据
    685          * 作    者: by Hins
    686          * 日    期: 2015-3-5
    687          ************************************************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    688          void ReadBMAsteer(void)
    689          {
   \                     ReadBMAsteer:
   \   00000000   0xB5F8             PUSH     {R3-R7,LR}
    690          #define count  20
    691              static float xacc[count] = {0}, yacc[count] = {0}, zacc[count] = {0};
    692              int16 Xdat, Ydat, Zdat;
    693              static float Revise_accX = 0, Revise_accY = 0, Revise_accZ = 0;
    694              static float sum_accx = 0, sum_accy = 0, sum_accz = 0;
    695          
    696              while(hw_iic_readn(0, BMA180, DATAX0, BUF, 6));
   \                     ??ReadBMAsteer_0:
   \   00000002   0x2006             MOVS     R0,#+6
   \   00000004   0x9000             STR      R0,[SP, #+0]
   \   00000006   0x.... 0x....      LDR.W    R3,??DataTable8_26
   \   0000000A   0x2202             MOVS     R2,#+2
   \   0000000C   0x2180             MOVS     R1,#+128
   \   0000000E   0x2000             MOVS     R0,#+0
   \   00000010   0x.... 0x....      BL       hw_iic_readn
   \   00000014   0x2800             CMP      R0,#+0
   \   00000016   0xD1F4             BNE.N    ??ReadBMAsteer_0
    697              Xdat = BUF[1] << 8 | BUF[0];
   \   00000018   0x.... 0x....      LDR.W    R0,??DataTable8_26
   \   0000001C   0x7840             LDRB     R0,[R0, #+1]
   \   0000001E   0x.... 0x....      LDR.W    R1,??DataTable8_26
   \   00000022   0x7809             LDRB     R1,[R1, #+0]
   \   00000024   0xEA51 0x2400      ORRS     R4,R1,R0, LSL #+8
    698              Ydat = BUF[3] << 8 | BUF[2];
   \   00000028   0x.... 0x....      LDR.W    R0,??DataTable8_26
   \   0000002C   0x78C0             LDRB     R0,[R0, #+3]
   \   0000002E   0x.... 0x....      LDR.W    R1,??DataTable8_26
   \   00000032   0x7889             LDRB     R1,[R1, #+2]
   \   00000034   0xEA51 0x2500      ORRS     R5,R1,R0, LSL #+8
    699              Zdat = BUF[5] << 8 | BUF[4];
   \   00000038   0x.... 0x....      LDR.W    R0,??DataTable8_26
   \   0000003C   0x7940             LDRB     R0,[R0, #+5]
   \   0000003E   0x.... 0x....      LDR.W    R1,??DataTable8_26
   \   00000042   0x7909             LDRB     R1,[R1, #+4]
   \   00000044   0xEA51 0x2600      ORRS     R6,R1,R0, LSL #+8
    700          
    701              if(Time_counter <= COUNTER)
   \   00000048   0x....             LDR.N    R0,??DataTable6
   \   0000004A   0x6800             LDR      R0,[R0, #+0]
   \   0000004C   0xF5B0 0x7F7A      CMP      R0,#+1000
   \   00000050   0xD823             BHI.N    ??ReadBMAsteer_1
    702              {
    703                  sum_accx += Xdat;
   \   00000052   0xB224             SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
   \   00000054   0x0020             MOVS     R0,R4
   \   00000056   0x.... 0x....      BL       __aeabi_i2f
   \   0000005A   0x.... 0x....      LDR.W    R1,??DataTable8_27
   \   0000005E   0x6809             LDR      R1,[R1, #+0]
   \   00000060   0x.... 0x....      BL       __aeabi_fadd
   \   00000064   0x.... 0x....      LDR.W    R1,??DataTable8_27
   \   00000068   0x6008             STR      R0,[R1, #+0]
    704                  sum_accy += Ydat;
   \   0000006A   0xB22D             SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
   \   0000006C   0x0028             MOVS     R0,R5
   \   0000006E   0x.... 0x....      BL       __aeabi_i2f
   \   00000072   0x.... 0x....      LDR.W    R1,??DataTable8_28
   \   00000076   0x6809             LDR      R1,[R1, #+0]
   \   00000078   0x.... 0x....      BL       __aeabi_fadd
   \   0000007C   0x.... 0x....      LDR.W    R1,??DataTable8_28
   \   00000080   0x6008             STR      R0,[R1, #+0]
    705                  sum_accz += Zdat;
   \   00000082   0xB236             SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
   \   00000084   0x0030             MOVS     R0,R6
   \   00000086   0x.... 0x....      BL       __aeabi_i2f
   \   0000008A   0x.... 0x....      LDR.W    R1,??DataTable8_29
   \   0000008E   0x6809             LDR      R1,[R1, #+0]
   \   00000090   0x.... 0x....      BL       __aeabi_fadd
   \   00000094   0x.... 0x....      LDR.W    R1,??DataTable8_29
   \   00000098   0x6008             STR      R0,[R1, #+0]
    706              }
    707              if(Time_counter == COUNTER)
   \                     ??ReadBMAsteer_1:
   \   0000009A   0x....             LDR.N    R0,??DataTable6
   \   0000009C   0x6800             LDR      R0,[R0, #+0]
   \   0000009E   0xF5B0 0x7F7A      CMP      R0,#+1000
   \   000000A2   0xD126             BNE.N    ??ReadBMAsteer_2
    708              {
    709                  Revise_accX = sum_accx / COUNTER;
   \   000000A4   0x.... 0x....      LDR.W    R0,??DataTable8_27
   \   000000A8   0x6800             LDR      R0,[R0, #+0]
   \   000000AA   0x....             LDR.N    R1,??DataTable6_1  ;; 0x447a0000
   \   000000AC   0x.... 0x....      BL       __aeabi_fdiv
   \   000000B0   0x.... 0x....      LDR.W    R1,??DataTable8_30
   \   000000B4   0x6008             STR      R0,[R1, #+0]
    710                  Revise_accY = sum_accy / COUNTER;
   \   000000B6   0x.... 0x....      LDR.W    R0,??DataTable8_28
   \   000000BA   0x6800             LDR      R0,[R0, #+0]
   \   000000BC   0x....             LDR.N    R1,??DataTable6_1  ;; 0x447a0000
   \   000000BE   0x.... 0x....      BL       __aeabi_fdiv
   \   000000C2   0x.... 0x....      LDR.W    R1,??DataTable8_31
   \   000000C6   0x6008             STR      R0,[R1, #+0]
    711                  Revise_accZ = sum_accz / COUNTER;
   \   000000C8   0x.... 0x....      LDR.W    R0,??DataTable8_29
   \   000000CC   0x6800             LDR      R0,[R0, #+0]
   \   000000CE   0x....             LDR.N    R1,??DataTable6_1  ;; 0x447a0000
   \   000000D0   0x.... 0x....      BL       __aeabi_fdiv
   \   000000D4   0x.... 0x....      LDR.W    R1,??DataTable8_32
   \   000000D8   0x6008             STR      R0,[R1, #+0]
    712                  Angle_accx0 = 0;
   \   000000DA   0x.... 0x....      LDR.W    R0,??DataTable8_33
   \   000000DE   0x2100             MOVS     R1,#+0
   \   000000E0   0x6001             STR      R1,[R0, #+0]
    713                  Angle_accy0 = 0;
   \   000000E2   0x.... 0x....      LDR.W    R0,??DataTable8_34
   \   000000E6   0x2100             MOVS     R1,#+0
   \   000000E8   0x6001             STR      R1,[R0, #+0]
    714                  Angle_accz0 = 0;
   \   000000EA   0x.... 0x....      LDR.W    R0,??DataTable8_35
   \   000000EE   0x2100             MOVS     R1,#+0
   \   000000F0   0x6001             STR      R1,[R0, #+0]
    715              }
    716              if(Time_counter > COUNTER)
   \                     ??ReadBMAsteer_2:
   \   000000F2   0x....             LDR.N    R0,??DataTable6
   \   000000F4   0x6800             LDR      R0,[R0, #+0]
   \   000000F6   0xF5B0 0x7F7A      CMP      R0,#+1000
   \   000000FA   0xF240 0x80A9      BLS.W    ??ReadBMAsteer_3
    717              {
    718                  for(uint8 i = 1; i < count; i++)
   \   000000FE   0x2001             MOVS     R0,#+1
   \   00000100   0xE024             B.N      ??ReadBMAsteer_4
    719                  {
    720                      xacc[i-1] = xacc[i];
   \                     ??ReadBMAsteer_5:
   \   00000102   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000104   0x.... 0x....      LDR.W    R1,??DataTable8_36
   \   00000108   0xEB11 0x0180      ADDS     R1,R1,R0, LSL #+2
   \   0000010C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000010E   0x.... 0x....      LDR.W    R2,??DataTable8_36
   \   00000112   0xF852 0x2020      LDR      R2,[R2, R0, LSL #+2]
   \   00000116   0xF841 0x2C04      STR      R2,[R1, #-4]
    721                      yacc[i-1] = yacc[i];
   \   0000011A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000011C   0x.... 0x....      LDR.W    R1,??DataTable8_37
   \   00000120   0xEB11 0x0180      ADDS     R1,R1,R0, LSL #+2
   \   00000124   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000126   0x.... 0x....      LDR.W    R2,??DataTable8_37
   \   0000012A   0xF852 0x2020      LDR      R2,[R2, R0, LSL #+2]
   \   0000012E   0xF841 0x2C04      STR      R2,[R1, #-4]
    722                      zacc[i-1] = zacc[i];
   \   00000132   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000134   0x.... 0x....      LDR.W    R1,??DataTable8_38
   \   00000138   0xEB11 0x0180      ADDS     R1,R1,R0, LSL #+2
   \   0000013C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000013E   0x.... 0x....      LDR.W    R2,??DataTable8_38
   \   00000142   0xF852 0x2020      LDR      R2,[R2, R0, LSL #+2]
   \   00000146   0xF841 0x2C04      STR      R2,[R1, #-4]
    723                  }
   \   0000014A   0x1C40             ADDS     R0,R0,#+1
   \                     ??ReadBMAsteer_4:
   \   0000014C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000014E   0x2814             CMP      R0,#+20
   \   00000150   0xD3D7             BCC.N    ??ReadBMAsteer_5
    724          
    725                  xacc[count-1] = Xdat;
   \   00000152   0xB224             SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
   \   00000154   0x0020             MOVS     R0,R4
   \   00000156   0x.... 0x....      BL       __aeabi_i2f
   \   0000015A   0x.... 0x....      LDR.W    R1,??DataTable8_36
   \   0000015E   0x64C8             STR      R0,[R1, #+76]
    726                  yacc[count-1] = Ydat;
   \   00000160   0xB22D             SXTH     R5,R5            ;; SignExt  R5,R5,#+16,#+16
   \   00000162   0x0028             MOVS     R0,R5
   \   00000164   0x.... 0x....      BL       __aeabi_i2f
   \   00000168   0x.... 0x....      LDR.W    R1,??DataTable8_37
   \   0000016C   0x64C8             STR      R0,[R1, #+76]
    727                  zacc[count-1] = Zdat;
   \   0000016E   0xB236             SXTH     R6,R6            ;; SignExt  R6,R6,#+16,#+16
   \   00000170   0x0030             MOVS     R0,R6
   \   00000172   0x.... 0x....      BL       __aeabi_i2f
   \   00000176   0x.... 0x....      LDR.W    R1,??DataTable8_38
   \   0000017A   0x64C8             STR      R0,[R1, #+76]
    728          
    729                  float xdata = 0, ydata = 0, zdata = 0;
   \   0000017C   0x2600             MOVS     R6,#+0
   \   0000017E   0x2400             MOVS     R4,#+0
   \   00000180   0x2500             MOVS     R5,#+0
    730                  for(uint8 i = 0; i < count; i++)
   \   00000182   0x2700             MOVS     R7,#+0
   \   00000184   0xE024             B.N      ??ReadBMAsteer_6
    731                  {
    732                      xdata += xacc[i] / (float)count;
   \                     ??ReadBMAsteer_7:
   \   00000186   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   00000188   0x....             LDR.N    R0,??DataTable8_36
   \   0000018A   0xF850 0x0027      LDR      R0,[R0, R7, LSL #+2]
   \   0000018E   0x....             LDR.N    R1,??DataTable8_18  ;; 0x41a00000
   \   00000190   0x.... 0x....      BL       __aeabi_fdiv
   \   00000194   0x0001             MOVS     R1,R0
   \   00000196   0x0030             MOVS     R0,R6
   \   00000198   0x.... 0x....      BL       __aeabi_fadd
   \   0000019C   0x0006             MOVS     R6,R0
    733                      ydata += yacc[i] / (float)count;
   \   0000019E   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   000001A0   0x....             LDR.N    R0,??DataTable8_37
   \   000001A2   0xF850 0x0027      LDR      R0,[R0, R7, LSL #+2]
   \   000001A6   0x....             LDR.N    R1,??DataTable8_18  ;; 0x41a00000
   \   000001A8   0x.... 0x....      BL       __aeabi_fdiv
   \   000001AC   0x0001             MOVS     R1,R0
   \   000001AE   0x0020             MOVS     R0,R4
   \   000001B0   0x.... 0x....      BL       __aeabi_fadd
   \   000001B4   0x0004             MOVS     R4,R0
    734                      zdata += zacc[i] / (float)count;
   \   000001B6   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   000001B8   0x....             LDR.N    R0,??DataTable8_38
   \   000001BA   0xF850 0x0027      LDR      R0,[R0, R7, LSL #+2]
   \   000001BE   0x....             LDR.N    R1,??DataTable8_18  ;; 0x41a00000
   \   000001C0   0x.... 0x....      BL       __aeabi_fdiv
   \   000001C4   0x0001             MOVS     R1,R0
   \   000001C6   0x0028             MOVS     R0,R5
   \   000001C8   0x.... 0x....      BL       __aeabi_fadd
   \   000001CC   0x0005             MOVS     R5,R0
    735                  }
   \   000001CE   0x1C7F             ADDS     R7,R7,#+1
   \                     ??ReadBMAsteer_6:
   \   000001D0   0xB2FF             UXTB     R7,R7            ;; ZeroExt  R7,R7,#+24,#+24
   \   000001D2   0x2F14             CMP      R7,#+20
   \   000001D4   0xD3D7             BCC.N    ??ReadBMAsteer_7
    736          
    737                  Dot_xacc0 = (xdata - Revise_accX) * 0.244 / 4000.0;
   \   000001D6   0x0030             MOVS     R0,R6
   \   000001D8   0x....             LDR.N    R1,??DataTable8_30
   \   000001DA   0x6809             LDR      R1,[R1, #+0]
   \   000001DC   0x.... 0x....      BL       __aeabi_fsub
   \   000001E0   0x.... 0x....      BL       __aeabi_f2d
   \   000001E4   0x....             LDR.N    R2,??DataTable8_19  ;; 0x5a1cac08
   \   000001E6   0x....             LDR.N    R3,??DataTable8_20  ;; 0x3fcf3b64
   \   000001E8   0x.... 0x....      BL       __aeabi_dmul
   \   000001EC   0x2200             MOVS     R2,#+0
   \   000001EE   0x....             LDR.N    R3,??DataTable8_21  ;; 0x40af4000
   \   000001F0   0x.... 0x....      BL       __aeabi_ddiv
   \   000001F4   0x.... 0x....      BL       __aeabi_d2f
   \   000001F8   0x....             LDR.N    R1,??DataTable8_39
   \   000001FA   0x6008             STR      R0,[R1, #+0]
    738                  //if(Dot_xacc > 0 ) Dot_xacc /= 1.025;
    739                  //else Dot_xacc /= 0.945;
    740                  Dot_yacc0 = (ydata - Revise_accY) * 0.244 / 4000.0;
   \   000001FC   0x0020             MOVS     R0,R4
   \   000001FE   0x....             LDR.N    R1,??DataTable8_31
   \   00000200   0x6809             LDR      R1,[R1, #+0]
   \   00000202   0x.... 0x....      BL       __aeabi_fsub
   \   00000206   0x.... 0x....      BL       __aeabi_f2d
   \   0000020A   0x....             LDR.N    R2,??DataTable8_19  ;; 0x5a1cac08
   \   0000020C   0x....             LDR.N    R3,??DataTable8_20  ;; 0x3fcf3b64
   \   0000020E   0x.... 0x....      BL       __aeabi_dmul
   \   00000212   0x2200             MOVS     R2,#+0
   \   00000214   0x....             LDR.N    R3,??DataTable8_21  ;; 0x40af4000
   \   00000216   0x.... 0x....      BL       __aeabi_ddiv
   \   0000021A   0x.... 0x....      BL       __aeabi_d2f
   \   0000021E   0x....             LDR.N    R1,??DataTable8_40
   \   00000220   0x6008             STR      R0,[R1, #+0]
    741                  //if(Dot_yacc > 0)Dot_yacc /= 0.982;
    742                  Dot_zacc0 = (zdata - (Revise_accZ - 16393)) * 0.244 / 4000.0;
   \   00000222   0x....             LDR.N    R0,??DataTable8_32
   \   00000224   0x6800             LDR      R0,[R0, #+0]
   \   00000226   0x....             LDR.N    R1,??DataTable8_24  ;; 0xc6801200
   \   00000228   0x.... 0x....      BL       __aeabi_fadd
   \   0000022C   0x0001             MOVS     R1,R0
   \   0000022E   0x0028             MOVS     R0,R5
   \   00000230   0x.... 0x....      BL       __aeabi_fsub
   \   00000234   0x.... 0x....      BL       __aeabi_f2d
   \   00000238   0x....             LDR.N    R2,??DataTable8_19  ;; 0x5a1cac08
   \   0000023A   0x....             LDR.N    R3,??DataTable8_20  ;; 0x3fcf3b64
   \   0000023C   0x.... 0x....      BL       __aeabi_dmul
   \   00000240   0x2200             MOVS     R2,#+0
   \   00000242   0x....             LDR.N    R3,??DataTable8_21  ;; 0x40af4000
   \   00000244   0x.... 0x....      BL       __aeabi_ddiv
   \   00000248   0x.... 0x....      BL       __aeabi_d2f
   \   0000024C   0x....             LDR.N    R1,??DataTable8_41
   \   0000024E   0x6008             STR      R0,[R1, #+0]
    743              }
    744          }
   \                     ??ReadBMAsteer_3:
   \   00000250   0xBDF1             POP      {R0,R4-R7,PC}    ;; return

   \                                 In section .bss, align 4
   \                     ??xacc_1:
   \   00000000                      DS8 80

   \                                 In section .bss, align 4
   \                     ??yacc_1:
   \   00000000                      DS8 80

   \                                 In section .bss, align 4
   \                     ??zacc_1:
   \   00000000                      DS8 80

   \                                 In section .bss, align 4
   \                     ??Revise_accX_1:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     ??Revise_accY_1:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     ??Revise_accZ_1:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     ??sum_accx_1:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     ??sum_accy_1:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     ??sum_accz_1:
   \   00000000                      DS8 4
    745          
    746          
    747          
    748          //************初始化L3G4200D*********************************
    749          //void Init_L3G4200D(void)
    750          //{
    751          //    Delay_ms(1);
    752          //    while(hw_iic_write1(0, L3G4200_Addr, CTRL_REG1, 0x0f));
    753          //    Delay_ms(1);
    754          //    while(hw_iic_write1(0, L3G4200_Addr, CTRL_REG2, 0x00));
    755          //    Delay_ms(1);
    756          //    while(hw_iic_write1(0, L3G4200_Addr, CTRL_REG3, 0x08));
    757          //    Delay_ms(1);
    758          //    while(hw_iic_write1(0, L3G4200_Addr, CTRL_REG4, 0x00));	//+-250dps
    759          //    Delay_ms(1);
    760          //    while(hw_iic_write1(0, L3G4200_Addr, CTRL_REG5, 0x00));
    761          //    Delay_ms(1);
    762          //}
    763          
    764          //******读取陀螺仪L3G4200D数据****************************************
    765          //void read_L3G4200D(void)
    766          //{
    767          //    //char txtbuf[22];
    768          //    float temp_dotgyrox, temp_dotgyroy, temp_dotgyroz;
    769          //    static float Revise_gyroX = 0, Revise_gyroY = 0, Revise_gyroZ = 0;
    770          //    while(hw_iic_readn(0, L3G4200_Addr, OUT_X_L, BUF, 6));
    771          //
    772          //    T_X =	(BUF[1] << 8) | BUF[0];
    773          //    T_Y =	-((BUF[3] << 8) | BUF[2]);
    774          //    T_Z =	(BUF[5] << 8) | BUF[4];
    775          //
    776          //    Dot_gyro_x = (float)T_X * 8.75 / 1000 - Revise_gyroX / T * 1000;
    777          //    Dot_gyro_y = (float)T_Y * 8.75 / 1000 - Revise_gyroY / T * 1000;
    778          //    Dot_gyro_z = (float)T_Z * 8.75 / 1000 - Revise_gyroZ / T * 1000;
    779          //
    780          //    temp_dotgyrox = Dot_gyro_x  / 57.3;
    781          //    temp_dotgyroy = -Dot_gyro_y / 57.3;
    782          //    temp_dotgyroz = Dot_gyro_z /  57.3;
    783          //    Dot_xgyro = (temp_dotgyrox + Dot_xgyro) / 2.0;
    784          //    Dot_ygyro = (temp_dotgyroy + Dot_ygyro) / 2.0;
    785          //    Dot_zgyro = (temp_dotgyroz + Dot_zgyro) / 2.0;
    786          //    // Angle_gyrox = GyroIntegral(Angle_gyrox,Dot_gyro_x );
    787          //    // Angle_gyroy = GyroIntegral(Angle_gyroy,Dot_gyro_y );
    788          //    // Angle_gyroz = GyroIntegral(Angle_gyroz,Dot_gyro_z );
    789          //
    790          //    Angle_gyrox += Dot_gyro_x * T / 1000 ;
    791          //    Angle_gyroy += Dot_gyro_y * T / 1000 ;
    792          //    Angle_gyroz += Dot_gyro_z * T / 1000 ;
    793          //
    794          //    //////////////////////////修正0点，读COUNTER次然后取平均////////////////////////////
    795          //    if(Time_counter == COUNTER)
    796          //    {
    797          //        Revise_gyroX = Angle_gyrox / COUNTER ;
    798          //        Revise_gyroY = Angle_gyroy / COUNTER ;
    799          //        Revise_gyroZ = Angle_gyroz / COUNTER ;
    800          //        Angle_gyrox = 0;
    801          //        Angle_gyroy = 0;
    802          //        Angle_gyroz = 0;
    803          //    }
    804          //}
    805          //***************************
    806          
    807          //void  Init_ADXL345(void)
    808          //{
    809          //    Delay_ms(1);
    810          //    // while(hw_iic_write1(0,ADXL345_Addr,0x31,0x0B));   //测量范围,正负16g，13位模式 1000 2g
    811          //    while(hw_iic_write1(0, ADXL345_Addr, 0x31, 0x08)); //测量范围,正负2g，13位模式 1000 2g
    812          //    Delay_ms(1);
    813          //    while(hw_iic_write1(0, ADXL345_Addr, 0x2C, 0x08)); //速率设定为100hz 参考pdf13页
    814          //    Delay_ms(1);
    815          //    while(hw_iic_write1(0, ADXL345_Addr, 0x2D, 0x08)); //选择电源模式   参考pdf24页
    816          //    Delay_ms(1);
    817          //    while(hw_iic_write1(0, ADXL345_Addr, 0x2E, 0x80)); //使能 DATA_READY 中断
    818          //    Delay_ms(1);
    819          //    while(hw_iic_write1(0, ADXL345_Addr, 0x1E, 0x00)); //X 偏移量 根据测试传感器的状态写入pdf29页
    820          //    Delay_ms(1);
    821          //    while(hw_iic_write1(0, ADXL345_Addr, 0x1F, 0x00)); //Y 偏移量 根据测试传感器的状态写入pdf29页
    822          //    Delay_ms(1);
    823          //    while(hw_iic_write1(0, ADXL345_Addr, 0x20, 0x00)); //Z 偏移量 根据测试传感器的状态写入pdf29页
    824          //    Delay_ms(1);
    825          //}
    826          //
    827          //void read_ADXL345(void)
    828          //{
    829          //    // char txtbuf[22];
    830          //    float X0 = 0, Y0 = 0, Z0 = 0;
    831          //    static float Revise_accX = 0, Revise_accY = 0, Revise_accZ = 0;
    832          //    static float sum_accx = 0, sum_accy = 0, sum_accz = 0;
    833          //    static float sum_dotx = 0, sum_doty = 0, sum_dotz = 0;
    834          //    static float Revise_dotX = 0, Revise_dotY = 0, Revise_dotZ = 0;
    835          //    //int high = 0;
    836          //
    837          //    while(hw_iic_readn(0, ADXL345_Addr, 0x32, BUF, 6));
    838          //    A_X = (BUF[1] << 8) + BUF[0]; //合成数据
    839          //    A_Y = (BUF[3] << 8) + BUF[2]; //合成数据
    840          //    A_Z = (BUF[5] << 8) + BUF[4]; //合成数据
    841          //
    842          //    Dot_xacc = (float)A_X * 3.9 / 1000 - Revise_dotX;//
    843          //    Dot_yacc = (float)A_Y * 3.9 / 1000  - Revise_dotY; //
    844          //    Dot_zacc = (float)A_Z * 3.9 / 1000;
    845          //
    846          //
    847          //    X0 = (float)A_X * 0.49;
    848          //    Y0 = (float)A_Y * 0.49;
    849          //    Z0 = -(float)A_Z * 0.49;
    850          //
    851          //
    852          //    //Roll = (float)((atan2(K,Q)*180)/3.14159265 + 90);   //X轴角度值 滚转角
    853          //    //Pitch = (float)((atan2(K,R)*180)/3.14159265 + 90);  //Y轴角度值 俯仰角
    854          //    //Yaw = (float)((atan2(R,Q)*180)/3.14159265 + 90);  //Z轴角都值 偏航角 顺时针+
    855          //    Angle_accx = atan2(X0, SquareRootFloat(Y0 * Y0 + Z0 * Z0)) * 57.3 - Revise_accX;
    856          //    Angle_accy = atan2(Y0, SquareRootFloat(X0 * X0 + Z0 * Z0)) * 57.3 - Revise_accY;
    857          //    Angle_accz = -(atan2(Z0, SquareRootFloat(X0 * X0 + Y0 * Y0)) * 57.3 + 90 + Revise_accZ);
    858          //    //////////////////////////修正0点，读COUNTER次然后取平均////////////////////////////
    859          //    if(Time_counter <= COUNTER)
    860          //    {
    861          //        sum_accx += Angle_accx;
    862          //        sum_accy += Angle_accy;
    863          //        sum_accz += Angle_accz;
    864          //
    865          //        sum_dotx += Dot_xacc;
    866          //        sum_doty += Dot_yacc;
    867          //        sum_dotz += Dot_zacc;
    868          //    }
    869          //    if(Time_counter == COUNTER)
    870          //    {
    871          //        Revise_accX = sum_accx / COUNTER;
    872          //        Revise_accY = sum_accy / COUNTER;
    873          //        Revise_accZ = sum_accz / COUNTER;
    874          //
    875          //        Revise_dotX = sum_dotx / COUNTER;
    876          //        Revise_dotY = sum_doty / COUNTER;
    877          //        Revise_dotZ = sum_dotz / COUNTER;
    878          //
    879          //        Angle_accx = 0;
    880          //        Angle_accy = 0;
    881          //        Angle_accz = 0;
    882          //    }
    883          //}
    884          
    885          
    886          //void GyroRead(void)
    887          //{
    888          //    static float x[3] = {0};
    889          //    static float y[3] = {0};
    890          //    static float z[3] = {0};
    891          //    x[0] = x[1];
    892          //    x[1] = x[2];
    893          //    x[2] = Dot_gyro_x;
    894          //    y[0] = y[1];
    895          //    y[1] = y[2];
    896          //    y[2] = Dot_gyro_y;
    897          //    z[0] = z[1];
    898          //    z[1] = z[2];
    899          //    z[2] = Dot_gyro_z;
    900          //
    901          //
    902          //    dot_GyroRol = (x[0] + x[1] + x[2]) / 3.0;
    903          //    dot_GyroPit = (y[0] + y[1] + y[2]) / 3.0;
    904          //    dot_GyroYaw = (z[0] + z[1] + z[2]) / 3.0;
    905          //
    906          //    //Middle value filter
    907          //    //中值滤波
    908          //    GyroRolBuf[WARP(GyroRolIdx)] = dot_GyroRol;
    909          //    GyroPitBuf[WARP(GyroPitIdx)] = dot_GyroPit;
    910          //    GyroYawBuf[WARP(GyroYawIdx)] = dot_GyroYaw;
    911          //
    912          //    dot_GyroRol = Filter(GyroRolBuf);
    913          //    dot_GyroPit = Filter(GyroPitBuf);
    914          //    dot_GyroYaw = Filter(GyroYawBuf);
    915          //    //    Dot_xgyro = dot_GyroRol;
    916          //    //    Dot_ygyro = dot_GyroPit;
    917          //    //    Dot_zgyro = dot_GyroYaw;
    918          //    //GyroRol += dot_GyroRol * T / 1000 ;
    919          //    //GyroPit += dot_GyroPit * T / 1000 ;
    920          //    //GyroYaw += dot_GyroYaw * T / 1000 ;
    921          //}
    922          
    923          //###############################################
    924          //
    925          //   Soft filter
    926          //   软件滤波器
    927          //

   \                                 In section .text, align 2, keep-with-next
    928          float Filter(float *value)
    929          {
   \                     Filter:
   \   00000000   0xB530             PUSH     {R4,R5,LR}
   \   00000002   0x0004             MOVS     R4,R0
    930          #if 0		   //中值滤波
    931              bool swap;
    932              uchar i;
    933              do
    934              {
    935                  swap = 0;
    936                  for(i = 1; i < FILTERNUM; i++)
    937                  {
    938                      if(value[i-1] > value[i])
    939                      {
    940                          int t = value[i-1];
    941                          value[i-1] = value[i];
    942                          value[i] = t;
    943                          swap = 1;
    944                      }
    945                  }
    946              }
    947              while(swap);
    948          
    949              return value[FILTERNUM/2];
    950          #else	   //滑动窗口滤波
    951              uint8 i;
    952              int vs = 0;
   \   00000004   0x2000             MOVS     R0,#+0
    953              for(i = 0; i < FILTERNUM; i++)
   \   00000006   0x2500             MOVS     R5,#+0
   \   00000008   0xE009             B.N      ??Filter_0
    954              {
    955                  vs += value[i];
   \                     ??Filter_1:
   \   0000000A   0x.... 0x....      BL       __aeabi_i2f
   \   0000000E   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000010   0xF854 0x1025      LDR      R1,[R4, R5, LSL #+2]
   \   00000014   0x.... 0x....      BL       __aeabi_fadd
   \   00000018   0x.... 0x....      BL       __aeabi_f2iz
    956              }
   \   0000001C   0x1C6D             ADDS     R5,R5,#+1
   \                     ??Filter_0:
   \   0000001E   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   00000020   0x2D04             CMP      R5,#+4
   \   00000022   0xD3F2             BCC.N    ??Filter_1
    957              return vs / FILTERNUM;
   \   00000024   0x2104             MOVS     R1,#+4
   \   00000026   0xFB90 0xF0F1      SDIV     R0,R0,R1
   \   0000002A   0x.... 0x....      BL       __aeabi_i2f
   \   0000002E   0xBD30             POP      {R4,R5,PC}       ;; return
    958          #endif
    959          }
    960          

   \                                 In section .text, align 2, keep-with-next
    961          int get_mid(int a, int b, int c)
    962          {
    963              int x = 0;
   \                     get_mid:
   \   00000000   0x2300             MOVS     R3,#+0
    964              if(a > b)
   \   00000002   0x4281             CMP      R1,R0
   \   00000004   0xDA02             BGE.N    ??get_mid_0
    965              {
    966                  x = b;
   \   00000006   0x000B             MOVS     R3,R1
    967                  b = a;
   \   00000008   0x0001             MOVS     R1,R0
    968                  a = x;
   \   0000000A   0x0018             MOVS     R0,R3
    969              }
    970              if(b > c)
   \                     ??get_mid_0:
   \   0000000C   0x428A             CMP      R2,R1
   \   0000000E   0xDA02             BGE.N    ??get_mid_1
    971              {
    972                  x = c;
   \   00000010   0x0013             MOVS     R3,R2
    973                  c = b;
   \   00000012   0x000A             MOVS     R2,R1
    974                  b = x;
   \   00000014   0x0019             MOVS     R1,R3
    975              }
    976              if(a > b)
   \                     ??get_mid_1:
   \   00000016   0x4281             CMP      R1,R0
   \   00000018   0xDA02             BGE.N    ??get_mid_2
    977              {
    978                  x = b;
   \   0000001A   0x000B             MOVS     R3,R1
    979                  b = a;
   \   0000001C   0x0001             MOVS     R1,R0
    980                  a = x;
   \   0000001E   0x0018             MOVS     R0,R3
    981              }
    982              return b ;
   \                     ??get_mid_2:
   \   00000020   0x0008             MOVS     R0,R1
   \   00000022   0x4770             BX       LR               ;; return
    983          }
    984          

   \                                 In section .text, align 2, keep-with-next
    985          void ReadANDS3080()
    986          {
   \                     ReadANDS3080:
   \   00000000   0xB570             PUSH     {R4-R6,LR}
    987              uint8 temp = 0;
   \   00000002   0x2600             MOVS     R6,#+0
    988              double temp0 = 0;
   \   00000004   0x2400             MOVS     R4,#+0
   \   00000006   0x2500             MOVS     R5,#+0
    989              //static double sumX = 0;
    990              //static double sumY = 0;
    991              DeltX = 0;
   \   00000008   0x....             LDR.N    R0,??DataTable8_42
   \   0000000A   0x2100             MOVS     R1,#+0
   \   0000000C   0x7001             STRB     R1,[R0, #+0]
    992              DeltY = 0;
   \   0000000E   0x....             LDR.N    R0,??DataTable8_43
   \   00000010   0x2100             MOVS     R1,#+0
   \   00000012   0x7001             STRB     R1,[R0, #+0]
    993              if(High <= (BaseHeight + 10))
   \   00000014   0x....             LDR.N    R0,??DataTable8_44
   \   00000016   0x8800             LDRH     R0,[R0, #+0]
   \   00000018   0x300A             ADDS     R0,R0,#+10
   \   0000001A   0x.... 0x....      BL       __aeabi_i2f
   \   0000001E   0x....             LDR.N    R1,??DataTable8_45
   \   00000020   0x6809             LDR      R1,[R1, #+0]
   \   00000022   0x.... 0x....      BL       __aeabi_cfrcmple
   \   00000026   0xD804             BHI.N    ??ReadANDS3080_0
    994              {
    995                  WriteByte(0x12, 0x00); //Motion clear
   \   00000028   0x2100             MOVS     R1,#+0
   \   0000002A   0x2012             MOVS     R0,#+18
   \   0000002C   0x.... 0x....      BL       WriteByte
   \   00000030   0xE057             B.N      ??ReadANDS3080_1
    996              }
    997              else
    998              {
    999                  temp = ReadByte(0x02);
   \                     ??ReadANDS3080_0:
   \   00000032   0x2002             MOVS     R0,#+2
   \   00000034   0x.... 0x....      BL       ReadByte
   \   00000038   0x0006             MOVS     R6,R0
   1000                  if((temp & 0X80) != 0)
   \   0000003A   0x0630             LSLS     R0,R6,#+24
   \   0000003C   0xD551             BPL.N    ??ReadANDS3080_1
   1001                  {
   1002                     
   1003                      DeltY = ReadByte(0x04);
   \   0000003E   0x2004             MOVS     R0,#+4
   \   00000040   0x.... 0x....      BL       ReadByte
   \   00000044   0x....             LDR.N    R1,??DataTable8_43
   \   00000046   0x7008             STRB     R0,[R1, #+0]
   1004                      DeltX = ReadByte(0x03);
   \   00000048   0x2003             MOVS     R0,#+3
   \   0000004A   0x.... 0x....      BL       ReadByte
   \   0000004E   0x....             LDR.N    R1,??DataTable8_42
   \   00000050   0x7008             STRB     R0,[R1, #+0]
   1005                      //s = ReadByte(0x05);
   1006                      temp0 = DeltX;
   \   00000052   0x....             LDR.N    R0,??DataTable8_42
   \   00000054   0xF990 0x0000      LDRSB    R0,[R0, #+0]
   \   00000058   0x.... 0x....      BL       __aeabi_i2d
   \   0000005C   0x0004             MOVS     R4,R0
   \   0000005E   0x000D             MOVS     R5,R1
   1007                      temp0 = temp0 * High * 0.3 / 58.2;
   \   00000060   0x....             LDR.N    R0,??DataTable8_45
   \   00000062   0x6800             LDR      R0,[R0, #+0]
   \   00000064   0x.... 0x....      BL       __aeabi_f2d
   \   00000068   0x0022             MOVS     R2,R4
   \   0000006A   0x002B             MOVS     R3,R5
   \   0000006C   0x.... 0x....      BL       __aeabi_dmul
   \   00000070   0xF05F 0x3233      MOVS     R2,#+858993459
   \   00000074   0x....             LDR.N    R3,??DataTable8_46  ;; 0x3fd33333
   \   00000076   0x.... 0x....      BL       __aeabi_dmul
   \   0000007A   0x....             LDR.N    R2,??DataTable8_47  ;; 0x9999999a
   \   0000007C   0x....             LDR.N    R3,??DataTable8_48  ;; 0x404d1999
   \   0000007E   0x.... 0x....      BL       __aeabi_ddiv
   \   00000082   0x0004             MOVS     R4,R0
   \   00000084   0x000D             MOVS     R5,R1
   1008                     // sumX += temp0;
   1009                     // SumDeltX = sumX -  High * tan(Angle_X / 57.3);
   1010                      SumDeltX += temp0;
   \   00000086   0x....             LDR.N    R2,??DataTable8_49
   \   00000088   0xE9D2 0x0100      LDRD     R0,R1,[R2, #+0]
   \   0000008C   0x0022             MOVS     R2,R4
   \   0000008E   0x002B             MOVS     R3,R5
   \   00000090   0x.... 0x....      BL       __aeabi_dadd
   \   00000094   0x....             LDR.N    R2,??DataTable8_49
   \   00000096   0xE9C2 0x0100      STRD     R0,R1,[R2, #+0]
   1011                      
   1012                      temp0 = DeltY;
   \   0000009A   0x....             LDR.N    R0,??DataTable8_43
   \   0000009C   0xF990 0x0000      LDRSB    R0,[R0, #+0]
   \   000000A0   0x.... 0x....      BL       __aeabi_i2d
   \   000000A4   0x0004             MOVS     R4,R0
   \   000000A6   0x000D             MOVS     R5,R1
   1013                      temp0 = temp0 * High * 0.3 / 58.2;
   \   000000A8   0x....             LDR.N    R0,??DataTable8_45
   \   000000AA   0x6800             LDR      R0,[R0, #+0]
   \   000000AC   0x.... 0x....      BL       __aeabi_f2d
   \   000000B0   0x0022             MOVS     R2,R4
   \   000000B2   0x002B             MOVS     R3,R5
   \   000000B4   0x.... 0x....      BL       __aeabi_dmul
   \   000000B8   0xF05F 0x3233      MOVS     R2,#+858993459
   \   000000BC   0x....             LDR.N    R3,??DataTable8_46  ;; 0x3fd33333
   \   000000BE   0x.... 0x....      BL       __aeabi_dmul
   \   000000C2   0x....             LDR.N    R2,??DataTable8_47  ;; 0x9999999a
   \   000000C4   0x....             LDR.N    R3,??DataTable8_48  ;; 0x404d1999
   \   000000C6   0x.... 0x....      BL       __aeabi_ddiv
   \   000000CA   0x0004             MOVS     R4,R0
   \   000000CC   0x000D             MOVS     R5,R1
   1014                      //sumY += temp0;
   1015                     // SumDeltY = sumY -  High * tan(Angle_Y / 57.3);
   1016                      SumDeltY += temp0;
   \   000000CE   0x....             LDR.N    R2,??DataTable8_50
   \   000000D0   0xE9D2 0x0100      LDRD     R0,R1,[R2, #+0]
   \   000000D4   0x0022             MOVS     R2,R4
   \   000000D6   0x002B             MOVS     R3,R5
   \   000000D8   0x.... 0x....      BL       __aeabi_dadd
   \   000000DC   0x....             LDR.N    R2,??DataTable8_50
   \   000000DE   0xE9C2 0x0100      STRD     R0,R1,[R2, #+0]
   1017                  }
   1018              }
   1019          }
   \                     ??ReadANDS3080_1:
   \   000000E2   0xBD70             POP      {R4-R6,PC}       ;; return

   \                                 In section .text, align 2, keep-with-next
   1020          void writeDataToMemory(float xpos,float ypos ,float high)
   1021          {   
   \                     writeDataToMemory:
   \   00000000   0xB5F0             PUSH     {R4-R7,LR}
   \   00000002   0x0006             MOVS     R6,R0
   \   00000004   0x000C             MOVS     R4,R1
   \   00000006   0x0017             MOVS     R7,R2
   1022              const uint8 interval = 8; //sampling interval
   \   00000008   0x2508             MOVS     R5,#+8
   1023              static float count1 = 0;
   1024             
   1025              if (count1 * T < 4000.0)count1++; // discard the first four seconds datas
   \   0000000A   0x....             LDR.N    R0,??DataTable8_51
   \   0000000C   0x6800             LDR      R0,[R0, #+0]
   \   0000000E   0x.... 0x....      BL       __aeabi_f2d
   \   00000012   0x2200             MOVS     R2,#+0
   \   00000014   0x....             LDR.N    R3,??DataTable8_52  ;; 0x40040000
   \   00000016   0x.... 0x....      BL       __aeabi_dmul
   \   0000001A   0x2200             MOVS     R2,#+0
   \   0000001C   0x....             LDR.N    R3,??DataTable8_21  ;; 0x40af4000
   \   0000001E   0x.... 0x....      BL       __aeabi_cdcmple
   \   00000022   0xD208             BCS.N    ??writeDataToMemory_0
   \   00000024   0x....             LDR.N    R0,??DataTable8_51
   \   00000026   0x6801             LDR      R1,[R0, #+0]
   \   00000028   0xF05F 0x507E      MOVS     R0,#+1065353216
   \   0000002C   0x.... 0x....      BL       __aeabi_fadd
   \   00000030   0x....             LDR.N    R1,??DataTable8_51
   \   00000032   0x6008             STR      R0,[R1, #+0]
   \   00000034   0xE02B             B.N      ??writeDataToMemory_1
   1026              else
   1027              {
   1028                  if(Time_counter % interval == 0 && dataLencounter < DataLength )
   \                     ??writeDataToMemory_0:
   \   00000036   0x....             LDR.N    R0,??DataTable8_53
   \   00000038   0x6800             LDR      R0,[R0, #+0]
   \   0000003A   0xB2ED             UXTB     R5,R5            ;; ZeroExt  R5,R5,#+24,#+24
   \   0000003C   0xFBB0 0xF1F5      UDIV     R1,R0,R5
   \   00000040   0xFB05 0x0011      MLS      R0,R5,R1,R0
   \   00000044   0x2800             CMP      R0,#+0
   \   00000046   0xD122             BNE.N    ??writeDataToMemory_1
   \   00000048   0x....             LDR.N    R0,??DataTable8_54
   \   0000004A   0x6800             LDR      R0,[R0, #+0]
   \   0000004C   0xF241 0x7170      MOVW     R1,#+6000
   \   00000050   0x4288             CMP      R0,R1
   \   00000052   0xDA1C             BGE.N    ??writeDataToMemory_1
   1029                  {
   1030                 
   1031                     dataLencounter++;
   \   00000054   0x....             LDR.N    R0,??DataTable8_54
   \   00000056   0x6800             LDR      R0,[R0, #+0]
   \   00000058   0x1C40             ADDS     R0,R0,#+1
   \   0000005A   0x....             LDR.N    R1,??DataTable8_54
   \   0000005C   0x6008             STR      R0,[R1, #+0]
   1032                      *px = xpos;
   \   0000005E   0x....             LDR.N    R0,??DataTable8_55
   \   00000060   0x6800             LDR      R0,[R0, #+0]
   \   00000062   0x6006             STR      R6,[R0, #+0]
   1033                      px++;
   \   00000064   0x....             LDR.N    R0,??DataTable8_55
   \   00000066   0x6800             LDR      R0,[R0, #+0]
   \   00000068   0x1D00             ADDS     R0,R0,#+4
   \   0000006A   0x....             LDR.N    R1,??DataTable8_55
   \   0000006C   0x6008             STR      R0,[R1, #+0]
   1034                      
   1035                      *py = ypos;
   \   0000006E   0x....             LDR.N    R0,??DataTable8_56
   \   00000070   0x6800             LDR      R0,[R0, #+0]
   \   00000072   0x6004             STR      R4,[R0, #+0]
   1036                      py++;
   \   00000074   0x....             LDR.N    R0,??DataTable8_56
   \   00000076   0x6800             LDR      R0,[R0, #+0]
   \   00000078   0x1D00             ADDS     R0,R0,#+4
   \   0000007A   0x....             LDR.N    R1,??DataTable8_56
   \   0000007C   0x6008             STR      R0,[R1, #+0]
   1037                      
   1038                      *pz = high;
   \   0000007E   0x....             LDR.N    R0,??DataTable8_57
   \   00000080   0x6800             LDR      R0,[R0, #+0]
   \   00000082   0x6007             STR      R7,[R0, #+0]
   1039                      pz++;
   \   00000084   0x....             LDR.N    R0,??DataTable8_57
   \   00000086   0x6800             LDR      R0,[R0, #+0]
   \   00000088   0x1D00             ADDS     R0,R0,#+4
   \   0000008A   0x....             LDR.N    R1,??DataTable8_57
   \   0000008C   0x6008             STR      R0,[R1, #+0]
   1040                  }
   1041          
   1042              }
   1043          }
   \                     ??writeDataToMemory_1:
   \   0000008E   0xBDF0             POP      {R4-R7,PC}       ;; return

   \                                 In section .bss, align 4
   \                     ??count1:
   \   00000000                      DS8 4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable4:
   \   00000000   0x4006B004         DC32     0x4006b004

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5:
   \   00000000   0x5F3759DF         DC32     0x5f3759df

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_1:
   \   00000000   0x4006B007         DC32     0x4006b007

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_2:
   \   00000000   0x40A00000         DC32     0x40a00000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_3:
   \   00000000   0x........         DC32     BUF

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_4:
   \   00000000   0x402CC000         DC32     0x402cc000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_5:
   \   00000000   0x........         DC32     ??Revise_gyroX

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_6:
   \   00000000   0x40040000         DC32     0x40040000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_7:
   \   00000000   0x408F4000         DC32     0x408f4000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_8:
   \   00000000   0x........         DC32     Dot_gyro_x0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_9:
   \   00000000   0x........         DC32     ??Revise_gyroY

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_10:
   \   00000000   0x........         DC32     Dot_gyro_y0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_11:
   \   00000000   0x........         DC32     ??Revise_gyroZ

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_12:
   \   00000000   0x........         DC32     Dot_gyro_z0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_13:
   \   00000000   0x........         DC32     ??dotx_gyro

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_14:
   \   00000000   0x........         DC32     ??doty_gyro

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_15:
   \   00000000   0x........         DC32     ??dotz_gyro

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_16:
   \   00000000   0x3FE00000         DC32     0x3fe00000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_17:
   \   00000000   0x3FD33333         DC32     0x3fd33333

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_18:
   \   00000000   0x9999999A         DC32     0x9999999a

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_19:
   \   00000000   0x3FC99999         DC32     0x3fc99999

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_20:
   \   00000000   0x404CA666         DC32     0x404ca666

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_21:
   \   00000000   0x........         DC32     Dot_xgyro0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_22:
   \   00000000   0x........         DC32     Dot_ygyro0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_23:
   \   00000000   0x........         DC32     Dot_zgyro0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_24:
   \   00000000   0x........         DC32     Angle_gyrox0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_25:
   \   00000000   0x........         DC32     Angle_gyroy0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6:
   \   00000000   0x........         DC32     Time_counter

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_1:
   \   00000000   0x447A0000         DC32     0x447a0000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_2:
   \   00000000   0x........         DC32     ??Revise_gyroX_1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_3:
   \   00000000   0x........         DC32     Dot_gyro_x

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7:
   \   00000000   0x........         DC32     Angle_gyroz0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_1:
   \   00000000   0x........         DC32     ??Revise_gyroY_1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_2:
   \   00000000   0x........         DC32     Dot_gyro_y

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_3:
   \   00000000   0x........         DC32     ??Revise_gyroZ_1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_4:
   \   00000000   0x........         DC32     Dot_gyro_z

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_5:
   \   00000000   0x........         DC32     ??dotx_gyro_1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_6:
   \   00000000   0x........         DC32     ??doty_gyro_1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable7_7:
   \   00000000   0x........         DC32     ??dotz_gyro_1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8:
   \   00000000   0x........         DC32     Dot_xgyro

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_1:
   \   00000000   0x........         DC32     Dot_ygyro

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_2:
   \   00000000   0x........         DC32     Dot_zgyro

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_3:
   \   00000000   0x........         DC32     Angle_gyrox

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_4:
   \   00000000   0x........         DC32     Angle_gyroy

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_5:
   \   00000000   0x........         DC32     Angle_gyroz

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_6:
   \   00000000   0x........         DC32     ??sum_accx

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_7:
   \   00000000   0x........         DC32     ??sum_accy

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_8:
   \   00000000   0x........         DC32     ??sum_accz

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_9:
   \   00000000   0x........         DC32     ??Revise_accX

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_10:
   \   00000000   0x........         DC32     ??Revise_accY

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_11:
   \   00000000   0x........         DC32     ??Revise_accZ

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_12:
   \   00000000   0x........         DC32     Angle_accx

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_13:
   \   00000000   0x........         DC32     Angle_accy

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_14:
   \   00000000   0x........         DC32     Angle_accz

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_15:
   \   00000000   0x........         DC32     ??xacc

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_16:
   \   00000000   0x........         DC32     ??yacc

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_17:
   \   00000000   0x........         DC32     ??zacc

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_18:
   \   00000000   0x41A00000         DC32     0x41a00000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_19:
   \   00000000   0x5A1CAC08         DC32     0x5a1cac08

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_20:
   \   00000000   0x3FCF3B64         DC32     0x3fcf3b64

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_21:
   \   00000000   0x40AF4000         DC32     0x40af4000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_22:
   \   00000000   0x........         DC32     Dot_xacc

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_23:
   \   00000000   0x........         DC32     Dot_yacc

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_24:
   \   00000000   0xC6801200         DC32     0xc6801200

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_25:
   \   00000000   0x........         DC32     Dot_zacc

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_26:
   \   00000000   0x........         DC32     BUF

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_27:
   \   00000000   0x........         DC32     ??sum_accx_1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_28:
   \   00000000   0x........         DC32     ??sum_accy_1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_29:
   \   00000000   0x........         DC32     ??sum_accz_1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_30:
   \   00000000   0x........         DC32     ??Revise_accX_1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_31:
   \   00000000   0x........         DC32     ??Revise_accY_1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_32:
   \   00000000   0x........         DC32     ??Revise_accZ_1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_33:
   \   00000000   0x........         DC32     Angle_accx0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_34:
   \   00000000   0x........         DC32     Angle_accy0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_35:
   \   00000000   0x........         DC32     Angle_accz0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_36:
   \   00000000   0x........         DC32     ??xacc_1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_37:
   \   00000000   0x........         DC32     ??yacc_1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_38:
   \   00000000   0x........         DC32     ??zacc_1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_39:
   \   00000000   0x........         DC32     Dot_xacc0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_40:
   \   00000000   0x........         DC32     Dot_yacc0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_41:
   \   00000000   0x........         DC32     Dot_zacc0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_42:
   \   00000000   0x........         DC32     DeltX

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_43:
   \   00000000   0x........         DC32     DeltY

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_44:
   \   00000000   0x........         DC32     BaseHeight

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_45:
   \   00000000   0x........         DC32     `High`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_46:
   \   00000000   0x3FD33333         DC32     0x3fd33333

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_47:
   \   00000000   0x9999999A         DC32     0x9999999a

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_48:
   \   00000000   0x404D1999         DC32     0x404d1999

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_49:
   \   00000000   0x........         DC32     SumDeltX

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_50:
   \   00000000   0x........         DC32     SumDeltY

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_51:
   \   00000000   0x........         DC32     ??count1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_52:
   \   00000000   0x40040000         DC32     0x40040000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_53:
   \   00000000   0x........         DC32     Time_counter

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_54:
   \   00000000   0x........         DC32     dataLencounter

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_55:
   \   00000000   0x........         DC32     px

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_56:
   \   00000000   0x........         DC32     py

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_57:
   \   00000000   0x........         DC32     pz
   1044          /*************结束***************/

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
        0  Delay_10us
        8  Delay_ms
              8 -> __aeabi_f2iz
              8 -> __aeabi_fmul
              8 -> __aeabi_ui2f
       12  Filter
             12 -> __aeabi_f2iz
             12 -> __aeabi_fadd
             12 -> __aeabi_i2f
        8  InitBMA180
              8 -> Delay_ms
              8 -> hw_iic_read1
              8 -> hw_iic_write1
        8  InitBMAsteer
              8 -> Delay_ms
              8 -> hw_iic_read1
              8 -> hw_iic_write1
        8  InitMPU3205
              8 -> Delay_ms
              8 -> hw_iic_write1
        8  InitMPUsteer
              8 -> Delay_ms
              8 -> hw_iic_write1
       16  ReadANDS3080
             16 -> ReadByte
             16 -> WriteByte
             16 -> __aeabi_cfrcmple
             16 -> __aeabi_dadd
             16 -> __aeabi_ddiv
             16 -> __aeabi_dmul
             16 -> __aeabi_f2d
             16 -> __aeabi_i2d
             16 -> __aeabi_i2f
       24  ReadBMA180
             24 -> __aeabi_d2f
             24 -> __aeabi_ddiv
             24 -> __aeabi_dmul
             24 -> __aeabi_f2d
             24 -> __aeabi_fadd
             24 -> __aeabi_fdiv
             24 -> __aeabi_fsub
             24 -> __aeabi_i2f
             24 -> hw_iic_readn
       24  ReadBMAsteer
             24 -> __aeabi_d2f
             24 -> __aeabi_ddiv
             24 -> __aeabi_dmul
             24 -> __aeabi_f2d
             24 -> __aeabi_fadd
             24 -> __aeabi_fdiv
             24 -> __aeabi_fsub
             24 -> __aeabi_i2f
             24 -> hw_iic_readn
       24  ReadMPU3205
             24 -> __aeabi_d2f
             24 -> __aeabi_dadd
             24 -> __aeabi_ddiv
             24 -> __aeabi_dmul
             24 -> __aeabi_dsub
             24 -> __aeabi_f2d
             24 -> __aeabi_fdiv
             24 -> __aeabi_i2f
             24 -> hw_iic_readn
       24  ReadMPUsteer
             24 -> __aeabi_d2f
             24 -> __aeabi_dadd
             24 -> __aeabi_ddiv
             24 -> __aeabi_dmul
             24 -> __aeabi_dsub
             24 -> __aeabi_f2d
             24 -> __aeabi_fdiv
             24 -> __aeabi_i2f
             24 -> hw_iic_readn
       20  SquareRootFloat
             20 -> __aeabi_fmul
             20 -> __aeabi_fsub
        8  bmp085ReadTemp
              8 -> Delay_ms
              8 -> hw_iic_read1
              8 -> hw_iic_write1
        0  get_mid
       16  putstr
             16 -> uart_putchar
        0  uart_putchar
       20  writeDataToMemory
             20 -> __aeabi_cdcmple
             20 -> __aeabi_dmul
             20 -> __aeabi_f2d
             20 -> __aeabi_fadd


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable4
       4  ??DataTable5
       4  ??DataTable5_1
       4  ??DataTable5_10
       4  ??DataTable5_11
       4  ??DataTable5_12
       4  ??DataTable5_13
       4  ??DataTable5_14
       4  ??DataTable5_15
       4  ??DataTable5_16
       4  ??DataTable5_17
       4  ??DataTable5_18
       4  ??DataTable5_19
       4  ??DataTable5_2
       4  ??DataTable5_20
       4  ??DataTable5_21
       4  ??DataTable5_22
       4  ??DataTable5_23
       4  ??DataTable5_24
       4  ??DataTable5_25
       4  ??DataTable5_3
       4  ??DataTable5_4
       4  ??DataTable5_5
       4  ??DataTable5_6
       4  ??DataTable5_7
       4  ??DataTable5_8
       4  ??DataTable5_9
       4  ??DataTable6
       4  ??DataTable6_1
       4  ??DataTable6_2
       4  ??DataTable6_3
       4  ??DataTable7
       4  ??DataTable7_1
       4  ??DataTable7_2
       4  ??DataTable7_3
       4  ??DataTable7_4
       4  ??DataTable7_5
       4  ??DataTable7_6
       4  ??DataTable7_7
       4  ??DataTable8
       4  ??DataTable8_1
       4  ??DataTable8_10
       4  ??DataTable8_11
       4  ??DataTable8_12
       4  ??DataTable8_13
       4  ??DataTable8_14
       4  ??DataTable8_15
       4  ??DataTable8_16
       4  ??DataTable8_17
       4  ??DataTable8_18
       4  ??DataTable8_19
       4  ??DataTable8_2
       4  ??DataTable8_20
       4  ??DataTable8_21
       4  ??DataTable8_22
       4  ??DataTable8_23
       4  ??DataTable8_24
       4  ??DataTable8_25
       4  ??DataTable8_26
       4  ??DataTable8_27
       4  ??DataTable8_28
       4  ??DataTable8_29
       4  ??DataTable8_3
       4  ??DataTable8_30
       4  ??DataTable8_31
       4  ??DataTable8_32
       4  ??DataTable8_33
       4  ??DataTable8_34
       4  ??DataTable8_35
       4  ??DataTable8_36
       4  ??DataTable8_37
       4  ??DataTable8_38
       4  ??DataTable8_39
       4  ??DataTable8_4
       4  ??DataTable8_40
       4  ??DataTable8_41
       4  ??DataTable8_42
       4  ??DataTable8_43
       4  ??DataTable8_44
       4  ??DataTable8_45
       4  ??DataTable8_46
       4  ??DataTable8_47
       4  ??DataTable8_48
       4  ??DataTable8_49
       4  ??DataTable8_5
       4  ??DataTable8_50
       4  ??DataTable8_51
       4  ??DataTable8_52
       4  ??DataTable8_53
       4  ??DataTable8_54
       4  ??DataTable8_55
       4  ??DataTable8_56
       4  ??DataTable8_57
       4  ??DataTable8_6
       4  ??DataTable8_7
       4  ??DataTable8_8
       4  ??DataTable8_9
      24  AC
       2  A_X
       2  A_Y
       2  A_Z
       4  Angle_accx
       4  Angle_accx0
       4  Angle_accy
       4  Angle_accy0
       4  Angle_accz
       4  Angle_accz0
       4  Angle_gyrox
       4  Angle_gyrox0
       4  Angle_gyroy
       4  Angle_gyroy0
       4  Angle_gyroz
       4  Angle_gyroz0
       8  BUF
      14  Delay_10us
      32  Delay_ms
       1  DeltX
       1  DeltY
       4  Dot_gyro_x
       4  Dot_gyro_x0
       4  Dot_gyro_y
       4  Dot_gyro_y0
       4  Dot_gyro_z
       4  Dot_gyro_z0
       4  Dot_xacc
       4  Dot_xacc0
       4  Dot_xgyro
       4  Dot_xgyro0
       4  Dot_yacc
       4  Dot_yacc0
       4  Dot_ygyro
       4  Dot_ygyro0
       4  Dot_zacc
       4  Dot_zacc0
       4  Dot_zgyro
       4  Dot_zgyro0
      48  Filter
       4  GyroPit
      16  GyroPitBuf
       1  GyroPitIdx
       4  GyroRol
      16  GyroRolBuf
       1  GyroRolIdx
       4  GyroYaw
      16  GyroYawBuf
       1  GyroYawIdx
     286  InitBMA180
     286  InitBMAsteer
     108  InitMPU3205
     108  InitMPUsteer
       4  Q_x
       4  Q_x1
       4  Q_y
       4  Q_y1
       4  Q_z
       4  Q_z1
     228  ReadANDS3080
     636  ReadBMA180
     594  ReadBMAsteer
    1038  ReadMPU3205
    1038  ReadMPUsteer
       4  Revise_accX
       4  Revise_accX
       4  Revise_accY
       4  Revise_accY
       4  Revise_accZ
       4  Revise_accZ
       4  Revise_gyroX
       4  Revise_gyroX
       4  Revise_gyroY
       4  Revise_gyroY
       4  Revise_gyroZ
       4  Revise_gyroZ
     100  SquareRootFloat
       8  SumDeltX
       8  SumDeltY
       2  T_X
       2  T_Y
       2  T_Z
       2  ac1
       2  ac2
       2  ac3
       2  ac4
       2  ac5
       2  ac6
       2  b1
       2  b2
      76  bmp085ReadTemp
       4  count1
       8  data_xyz
       4  dot_GyroPit
       4  dot_GyroRol
       4  dot_GyroYaw
      12  dotx_gyro
      12  dotx_gyro
      12  doty_gyro
      12  doty_gyro
      12  dotz_gyro
      12  dotz_gyro
      36  get_mid
       4  maxDelt
       2  mb
       2  mc
       2  md
       4  mx
       4  my
       4  mz
       4  pressure
      28  putstr
       4  sum_accx
       4  sum_accx
       4  sum_accy
       4  sum_accy
       4  sum_accz
       4  sum_accz
       4  temperature
       1  test
      18  uart_putchar
     144  writeDataToMemory
      80  xacc
      80  xacc
      80  yacc
      80  yacc
      80  zacc
      80  zacc

 
   964 bytes in section .bss
 5 206 bytes in section .text
 
 5 206 bytes of CODE memory
   964 bytes of DATA memory

Errors: none
Warnings: none
