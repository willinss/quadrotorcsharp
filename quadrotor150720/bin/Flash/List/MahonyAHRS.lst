###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.40.1.53790/W32 for ARM     03/Aug/2015  09:48:04 #
# Copyright 1999-2012 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  C:\Users\Thinkpad\Desktop\quadrotor150720飞行器跟随小车( #
#                    改I2C)\src\Sources\C\Component_C\MahonyAHRS.c            #
#    Command line =  "C:\Users\Thinkpad\Desktop\quadrotor150720飞行器跟随小车 #
#                    (改I2C)\src\Sources\C\Component_C\MahonyAHRS.c" -D IAR   #
#                    -D TWR_K60N512 -lCN "C:\Users\Thinkpad\Desktop\quadrotor #
#                    150720飞行器跟随小车(改I2C)\bin\Flash\List\" -lB         #
#                    "C:\Users\Thinkpad\Desktop\quadrotor150720飞行器跟随小车 #
#                    (改I2C)\bin\Flash\List\" -o                              #
#                    "C:\Users\Thinkpad\Desktop\quadrotor150720飞行器跟随小车 #
#                    (改I2C)\bin\Flash\Obj\" --no_cse --no_unroll             #
#                    --no_inline --no_code_motion --no_tbaa --no_clustering   #
#                    --no_scheduling --debug --endian=little --cpu=Cortex-M4  #
#                    -e --fpu=None --dlib_config "E:\Program Files\IAR        #
#                    Systems\Embedded Workbench 6.4\arm\INC\c\DLib_Config_Nor #
#                    mal.h" -I "C:\Users\Thinkpad\Desktop\quadrotor150720飞行 #
#                    器跟随小车(改I2C)\src\Sources\H\" -I                     #
#                    "C:\Users\Thinkpad\Desktop\quadrotor150720飞行器跟随小车 #
#                    (改I2C)\src\Sources\H\Component_H\" -I                   #
#                    "C:\Users\Thinkpad\Desktop\quadrotor150720飞行器跟随小车 #
#                    (改I2C)\src\Sources\H\Frame_H\" -Ol --use_c++_inline     #
#    List file    =  C:\Users\Thinkpad\Desktop\quadrotor150720飞行器跟随小车( #
#                    改I2C)\bin\Flash\List\MahonyAHRS.lst                     #
#    Object file  =  C:\Users\Thinkpad\Desktop\quadrotor150720飞行器跟随小车( #
#                    改I2C)\bin\Flash\Obj\MahonyAHRS.o                        #
#                                                                             #
#                                                                             #
###############################################################################

C:\Users\Thinkpad\Desktop\quadrotor150720飞行器跟随小车(改I2C)\src\Sources\C\Component_C\MahonyAHRS.c
      1          //=====================================================================================================
      2          // MahonyAHRS.c
      3          //=====================================================================================================
      4          //
      5          // Madgwick's implementation of Mayhony's AHRS algorithm.
      6          // See: http://www.x-io.co.uk/node/8#open_source_ahrs_and_imu_algorithms
      7          //
      8          // Date			Author			Notes
      9          // 29/09/2011	SOH Madgwick    Initial release
     10          // 02/10/2011	SOH Madgwick	Optimised for reduced CPU load
     11          //
     12          //=====================================================================================================
     13          
     14          //---------------------------------------------------------------------------------------------------
     15          // Header files
     16          
     17          #include "MahonyAHRS.h"
     18          //#include "MadgwickAHRS.h"
     19          #include <math.h>
     20          #include "get_data.h"
     21          //---------------------------------------------------------------------------------------------------
     22          // Definitions
     23          
     24          #define sampleFreq	 400.0f			// sample frequency in Hz
     25          #define twoKpDef	(2.0f * 0.2f)	// 2 * proportional gain
     26          #define twoKiDef	(1.0f * 0.000f)	// 2 * integral gain
     27          
     28          //---------------------------------------------------------------------------------------------------
     29          // Variable definitions
     30          

   \                                 In section .data, align 4
     31          float twoKp = twoKpDef;											// 2 * proportional gain (Kp)
   \                     twoKp:
   \   00000000   0x3ECCCCCD         DC32 3ECCCCCDH

   \                                 In section .bss, align 4
     32          float twoKi = twoKiDef;
   \                     twoKi:
   \   00000000                      DS8 4
     33          

   \                                 In section .data, align 4
     34          float twoKp1 = twoKpDef;											// 2 * proportional gain (Kp)
   \                     twoKp1:
   \   00000000   0x3ECCCCCD         DC32 3ECCCCCDH

   \                                 In section .bss, align 4
     35          float twoKi1 = twoKiDef;
   \                     twoKi1:
   \   00000000                      DS8 4
     36          

   \                                 In section .data, align 4
     37          float q01 = 1.0f, q11 = 0.0f, q21 = 0.0f, q31 = 0.0f;	
   \                     q01:
   \   00000000   0x3F800000         DC32 3F800000H

   \                                 In section .bss, align 4
   \                     q11:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     q21:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     q31:
   \   00000000                      DS8 4

   \                                 In section .data, align 4
     38          float q0 = 1.0f, q1 = 0.0f, q2 = 0.0f, q3 = 0.0f;					// quaternion of sensor frame relative to auxiliary frame
   \                     q0:
   \   00000000   0x3F800000         DC32 3F800000H

   \                                 In section .bss, align 4
   \                     q1:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     q2:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     q3:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     39          float integralFBx = 0.0f,  integralFBy = 0.0f, integralFBz = 0.0f;	// integral error terms scaled by Ki
   \                     integralFBx:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     integralFBy:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     integralFBz:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     40          float integralFBx1 = 0.0f,  integralFBy1 = 0.0f, integralFBz1 = 0.0f;	
   \                     integralFBx1:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     integralFBy1:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     integralFBz1:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     41          float Angle_X = 0.0f, Angle_Y = 0, Angle_Z = 0;
   \                     Angle_X:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     Angle_Y:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     Angle_Z:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
     42          float Angle_X0 = 0.0f, Angle_Y0 = 0, Angle_Z0 = 0;
   \                     Angle_X0:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     Angle_Y0:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     Angle_Z0:
   \   00000000                      DS8 4
     43          //---------------------------------------------------------------------------------------------------
     44          // Function declarations
     45          
     46          float invSqrt(float x);
     47          
     48          //====================================================================================================
     49          // Functions
     50          
     51          //---------------------------------------------------------------------------------------------------
     52          // AHRS algorithm update
     53          

   \                                 In section .text, align 2, keep-with-next
     54          void MahonyAHRSupdate(float gx, float gy, float gz, float ax, float ay, float az, float mx, float my, float mz)
     55          {
   \                     MahonyAHRSupdate:
   \   00000000   0xE92D 0x4FF8      PUSH     {R3-R11,LR}
   \   00000004   0xB090             SUB      SP,SP,#+64
   \   00000006   0x0004             MOVS     R4,R0
   \   00000008   0x000D             MOVS     R5,R1
   \   0000000A   0x0016             MOVS     R6,R2
   \   0000000C   0x981A             LDR      R0,[SP, #+104]
   \   0000000E   0x901A             STR      R0,[SP, #+104]
   \   00000010   0xF8DD 0xA06C      LDR      R10,[SP, #+108]
   \   00000014   0x9F1C             LDR      R7,[SP, #+112]
   \   00000016   0xF8DD 0x8074      LDR      R8,[SP, #+116]
   \   0000001A   0xF8DD 0x9078      LDR      R9,[SP, #+120]
     56              float recipNorm;
     57              float q0q0, q0q1, q0q2, q0q3, q1q1, q1q2, q1q3, q2q2, q2q3, q3q3;
     58              float hx, hy, bx, bz;
     59              float halfvx, halfvy, halfvz, halfwx, halfwy, halfwz;
     60              float halfex, halfey, halfez;
     61              float qa, qb, qc;
     62          
     63              // Use IMU algorithm if magnetometer measurement invalid (avoids NaN in magnetometer normalisation)
     64              if((mx == 0.0f) && (my == 0.0f) && (mz == 0.0f))
   \   0000001E   0x0038             MOVS     R0,R7
   \   00000020   0x2100             MOVS     R1,#+0
   \   00000022   0x.... 0x....      BL       __aeabi_cfcmpeq
   \   00000026   0xD114             BNE.N    ??MahonyAHRSupdate_0
   \   00000028   0x4640             MOV      R0,R8
   \   0000002A   0x2100             MOVS     R1,#+0
   \   0000002C   0x.... 0x....      BL       __aeabi_cfcmpeq
   \   00000030   0xD10F             BNE.N    ??MahonyAHRSupdate_0
   \   00000032   0x4648             MOV      R0,R9
   \   00000034   0x2100             MOVS     R1,#+0
   \   00000036   0x.... 0x....      BL       __aeabi_cfcmpeq
   \   0000003A   0xD10A             BNE.N    ??MahonyAHRSupdate_0
     65              {
     66                  MahonyAHRSupdateIMU(gx, gy, gz, ax, ay, az);
   \   0000003C   0xF8CD 0xA004      STR      R10,[SP, #+4]
   \   00000040   0x981A             LDR      R0,[SP, #+104]
   \   00000042   0x9000             STR      R0,[SP, #+0]
   \   00000044   0x9B10             LDR      R3,[SP, #+64]
   \   00000046   0x0032             MOVS     R2,R6
   \   00000048   0x0029             MOVS     R1,R5
   \   0000004A   0x0020             MOVS     R0,R4
   \   0000004C   0x.... 0x....      BL       MahonyAHRSupdateIMU
     67                  return;
   \   00000050   0xE355             B.N      ??MahonyAHRSupdate_1
     68              }
     69          
     70              // Compute feedback only if accelerometer measurement valid (avoids NaN in accelerometer normalisation)
     71              if(!((ax == 0.0f) && (ay == 0.0f) && (az == 0.0f)))
   \                     ??MahonyAHRSupdate_0:
   \   00000052   0x9810             LDR      R0,[SP, #+64]
   \   00000054   0x2100             MOVS     R1,#+0
   \   00000056   0x.... 0x....      BL       __aeabi_cfcmpeq
   \   0000005A   0xD10A             BNE.N    ??MahonyAHRSupdate_2
   \   0000005C   0x981A             LDR      R0,[SP, #+104]
   \   0000005E   0x2100             MOVS     R1,#+0
   \   00000060   0x.... 0x....      BL       __aeabi_cfcmpeq
   \   00000064   0xD105             BNE.N    ??MahonyAHRSupdate_2
   \   00000066   0x4650             MOV      R0,R10
   \   00000068   0x2100             MOVS     R1,#+0
   \   0000006A   0x.... 0x....      BL       __aeabi_cfcmpeq
   \   0000006E   0xF000 0x8259      BEQ.W    ??MahonyAHRSupdate_3
     72              {
     73          
     74                  // Normalise accelerometer measurement
     75                  recipNorm = invSqrt(ax * ax + ay * ay + az * az);
   \                     ??MahonyAHRSupdate_2:
   \   00000072   0x9910             LDR      R1,[SP, #+64]
   \   00000074   0x9810             LDR      R0,[SP, #+64]
   \   00000076   0x.... 0x....      BL       __aeabi_fmul
   \   0000007A   0x4683             MOV      R11,R0
   \   0000007C   0x991A             LDR      R1,[SP, #+104]
   \   0000007E   0x981A             LDR      R0,[SP, #+104]
   \   00000080   0x.... 0x....      BL       __aeabi_fmul
   \   00000084   0x4659             MOV      R1,R11
   \   00000086   0x.... 0x....      BL       __aeabi_fadd
   \   0000008A   0x4683             MOV      R11,R0
   \   0000008C   0x4650             MOV      R0,R10
   \   0000008E   0x4651             MOV      R1,R10
   \   00000090   0x.... 0x....      BL       __aeabi_fmul
   \   00000094   0x4659             MOV      R1,R11
   \   00000096   0x.... 0x....      BL       __aeabi_fadd
   \   0000009A   0x.... 0x....      BL       invSqrt
   \   0000009E   0x4683             MOV      R11,R0
     76                  ax *= recipNorm;
   \   000000A0   0x9810             LDR      R0,[SP, #+64]
   \   000000A2   0x4659             MOV      R1,R11
   \   000000A4   0x.... 0x....      BL       __aeabi_fmul
   \   000000A8   0x9010             STR      R0,[SP, #+64]
     77                  ay *= recipNorm;
   \   000000AA   0x981A             LDR      R0,[SP, #+104]
   \   000000AC   0x4659             MOV      R1,R11
   \   000000AE   0x.... 0x....      BL       __aeabi_fmul
   \   000000B2   0x901A             STR      R0,[SP, #+104]
     78                  az *= recipNorm;
   \   000000B4   0x4650             MOV      R0,R10
   \   000000B6   0x4659             MOV      R1,R11
   \   000000B8   0x.... 0x....      BL       __aeabi_fmul
   \   000000BC   0x4682             MOV      R10,R0
     79          
     80                  // Normalise magnetometer measurement
     81                  recipNorm = invSqrt(mx * mx + my * my + mz * mz);
   \   000000BE   0x0038             MOVS     R0,R7
   \   000000C0   0x0039             MOVS     R1,R7
   \   000000C2   0x.... 0x....      BL       __aeabi_fmul
   \   000000C6   0x4683             MOV      R11,R0
   \   000000C8   0x4640             MOV      R0,R8
   \   000000CA   0x4641             MOV      R1,R8
   \   000000CC   0x.... 0x....      BL       __aeabi_fmul
   \   000000D0   0x4659             MOV      R1,R11
   \   000000D2   0x.... 0x....      BL       __aeabi_fadd
   \   000000D6   0x4683             MOV      R11,R0
   \   000000D8   0x4648             MOV      R0,R9
   \   000000DA   0x4649             MOV      R1,R9
   \   000000DC   0x.... 0x....      BL       __aeabi_fmul
   \   000000E0   0x4659             MOV      R1,R11
   \   000000E2   0x.... 0x....      BL       __aeabi_fadd
   \   000000E6   0x.... 0x....      BL       invSqrt
   \   000000EA   0x4683             MOV      R11,R0
     82                  mx *= recipNorm;
   \   000000EC   0x0038             MOVS     R0,R7
   \   000000EE   0x4659             MOV      R1,R11
   \   000000F0   0x.... 0x....      BL       __aeabi_fmul
   \   000000F4   0x0007             MOVS     R7,R0
     83                  my *= recipNorm;
   \   000000F6   0x4640             MOV      R0,R8
   \   000000F8   0x4659             MOV      R1,R11
   \   000000FA   0x.... 0x....      BL       __aeabi_fmul
   \   000000FE   0x4680             MOV      R8,R0
     84                  mz *= recipNorm;
   \   00000100   0x4648             MOV      R0,R9
   \   00000102   0x4659             MOV      R1,R11
   \   00000104   0x.... 0x....      BL       __aeabi_fmul
   \   00000108   0x4681             MOV      R9,R0
     85          
     86                  // Auxiliary variables to avoid repeated arithmetic
     87                  q0q0 = q0 * q0;
   \   0000010A   0x.... 0x....      LDR.W    R0,??DataTable1
   \   0000010E   0x6801             LDR      R1,[R0, #+0]
   \   00000110   0x.... 0x....      LDR.W    R0,??DataTable1
   \   00000114   0x6800             LDR      R0,[R0, #+0]
   \   00000116   0x.... 0x....      BL       __aeabi_fmul
   \   0000011A   0x900F             STR      R0,[SP, #+60]
     88                  q0q1 = q0 * q1;
   \   0000011C   0x.... 0x....      LDR.W    R0,??DataTable1
   \   00000120   0x6801             LDR      R1,[R0, #+0]
   \   00000122   0x.... 0x....      LDR.W    R0,??DataTable1_1
   \   00000126   0x6800             LDR      R0,[R0, #+0]
   \   00000128   0x.... 0x....      BL       __aeabi_fmul
   \   0000012C   0x9005             STR      R0,[SP, #+20]
     89                  q0q2 = q0 * q2;
   \   0000012E   0x.... 0x....      LDR.W    R0,??DataTable1
   \   00000132   0x6801             LDR      R1,[R0, #+0]
   \   00000134   0x.... 0x....      LDR.W    R0,??DataTable1_2
   \   00000138   0x6800             LDR      R0,[R0, #+0]
   \   0000013A   0x.... 0x....      BL       __aeabi_fmul
   \   0000013E   0x9002             STR      R0,[SP, #+8]
     90                  q0q3 = q0 * q3;
   \   00000140   0x.... 0x....      LDR.W    R0,??DataTable1
   \   00000144   0x6801             LDR      R1,[R0, #+0]
   \   00000146   0x.... 0x....      LDR.W    R0,??DataTable1_3
   \   0000014A   0x6800             LDR      R0,[R0, #+0]
   \   0000014C   0x.... 0x....      BL       __aeabi_fmul
   \   00000150   0x9009             STR      R0,[SP, #+36]
     91                  q1q1 = q1 * q1;
   \   00000152   0x.... 0x....      LDR.W    R0,??DataTable1_1
   \   00000156   0x6801             LDR      R1,[R0, #+0]
   \   00000158   0x.... 0x....      LDR.W    R0,??DataTable1_1
   \   0000015C   0x6800             LDR      R0,[R0, #+0]
   \   0000015E   0x.... 0x....      BL       __aeabi_fmul
   \   00000162   0x9008             STR      R0,[SP, #+32]
     92                  q1q2 = q1 * q2;
   \   00000164   0x.... 0x....      LDR.W    R0,??DataTable1_1
   \   00000168   0x6801             LDR      R1,[R0, #+0]
   \   0000016A   0x.... 0x....      LDR.W    R0,??DataTable1_2
   \   0000016E   0x6800             LDR      R0,[R0, #+0]
   \   00000170   0x.... 0x....      BL       __aeabi_fmul
   \   00000174   0x9007             STR      R0,[SP, #+28]
     93                  q1q3 = q1 * q3;
   \   00000176   0x.... 0x....      LDR.W    R0,??DataTable1_1
   \   0000017A   0x6801             LDR      R1,[R0, #+0]
   \   0000017C   0x.... 0x....      LDR.W    R0,??DataTable1_3
   \   00000180   0x6800             LDR      R0,[R0, #+0]
   \   00000182   0x.... 0x....      BL       __aeabi_fmul
   \   00000186   0x9001             STR      R0,[SP, #+4]
     94                  q2q2 = q2 * q2;
   \   00000188   0x.... 0x....      LDR.W    R0,??DataTable1_2
   \   0000018C   0x6801             LDR      R1,[R0, #+0]
   \   0000018E   0x.... 0x....      LDR.W    R0,??DataTable1_2
   \   00000192   0x6800             LDR      R0,[R0, #+0]
   \   00000194   0x.... 0x....      BL       __aeabi_fmul
   \   00000198   0x9004             STR      R0,[SP, #+16]
     95                  q2q3 = q2 * q3;
   \   0000019A   0x.... 0x....      LDR.W    R0,??DataTable1_2
   \   0000019E   0x6801             LDR      R1,[R0, #+0]
   \   000001A0   0x.... 0x....      LDR.W    R0,??DataTable1_3
   \   000001A4   0x6800             LDR      R0,[R0, #+0]
   \   000001A6   0x.... 0x....      BL       __aeabi_fmul
   \   000001AA   0x9003             STR      R0,[SP, #+12]
     96                  q3q3 = q3 * q3;
   \   000001AC   0x.... 0x....      LDR.W    R0,??DataTable1_3
   \   000001B0   0x6801             LDR      R1,[R0, #+0]
   \   000001B2   0x.... 0x....      LDR.W    R0,??DataTable1_3
   \   000001B6   0x6800             LDR      R0,[R0, #+0]
   \   000001B8   0x.... 0x....      BL       __aeabi_fmul
   \   000001BC   0x4683             MOV      R11,R0
     97          
     98                  // Reference direction of Earth's magnetic field
     99                  hx = 2.0f * (mx * (0.5f - q2q2 - q3q3) + my * (q1q2 - q0q3) + mz * (q1q3 + q0q2));
   \   000001BE   0xF05F 0x507C      MOVS     R0,#+1056964608
   \   000001C2   0x9904             LDR      R1,[SP, #+16]
   \   000001C4   0x.... 0x....      BL       __aeabi_fsub
   \   000001C8   0x4659             MOV      R1,R11
   \   000001CA   0x.... 0x....      BL       __aeabi_fsub
   \   000001CE   0x0039             MOVS     R1,R7
   \   000001D0   0x.... 0x....      BL       __aeabi_fmul
   \   000001D4   0x9000             STR      R0,[SP, #+0]
   \   000001D6   0x9807             LDR      R0,[SP, #+28]
   \   000001D8   0x9909             LDR      R1,[SP, #+36]
   \   000001DA   0x.... 0x....      BL       __aeabi_fsub
   \   000001DE   0x4641             MOV      R1,R8
   \   000001E0   0x.... 0x....      BL       __aeabi_fmul
   \   000001E4   0x9900             LDR      R1,[SP, #+0]
   \   000001E6   0x.... 0x....      BL       __aeabi_fadd
   \   000001EA   0x9000             STR      R0,[SP, #+0]
   \   000001EC   0x9901             LDR      R1,[SP, #+4]
   \   000001EE   0x9802             LDR      R0,[SP, #+8]
   \   000001F0   0x.... 0x....      BL       __aeabi_fadd
   \   000001F4   0x4649             MOV      R1,R9
   \   000001F6   0x.... 0x....      BL       __aeabi_fmul
   \   000001FA   0x9900             LDR      R1,[SP, #+0]
   \   000001FC   0x.... 0x....      BL       __aeabi_fadd
   \   00000200   0xF05F 0x4180      MOVS     R1,#+1073741824
   \   00000204   0x.... 0x....      BL       __aeabi_fmul
   \   00000208   0x900B             STR      R0,[SP, #+44]
    100                  hy = 2.0f * (mx * (q1q2 + q0q3) + my * (0.5f - q1q1 - q3q3) + mz * (q2q3 - q0q1));
   \   0000020A   0x9907             LDR      R1,[SP, #+28]
   \   0000020C   0x9809             LDR      R0,[SP, #+36]
   \   0000020E   0x.... 0x....      BL       __aeabi_fadd
   \   00000212   0x0039             MOVS     R1,R7
   \   00000214   0x.... 0x....      BL       __aeabi_fmul
   \   00000218   0x9000             STR      R0,[SP, #+0]
   \   0000021A   0xF05F 0x507C      MOVS     R0,#+1056964608
   \   0000021E   0x9908             LDR      R1,[SP, #+32]
   \   00000220   0x.... 0x....      BL       __aeabi_fsub
   \   00000224   0x4659             MOV      R1,R11
   \   00000226   0x.... 0x....      BL       __aeabi_fsub
   \   0000022A   0x4641             MOV      R1,R8
   \   0000022C   0x.... 0x....      BL       __aeabi_fmul
   \   00000230   0x9900             LDR      R1,[SP, #+0]
   \   00000232   0x.... 0x....      BL       __aeabi_fadd
   \   00000236   0x9000             STR      R0,[SP, #+0]
   \   00000238   0x9803             LDR      R0,[SP, #+12]
   \   0000023A   0x9905             LDR      R1,[SP, #+20]
   \   0000023C   0x.... 0x....      BL       __aeabi_fsub
   \   00000240   0x4649             MOV      R1,R9
   \   00000242   0x.... 0x....      BL       __aeabi_fmul
   \   00000246   0x9900             LDR      R1,[SP, #+0]
   \   00000248   0x.... 0x....      BL       __aeabi_fadd
   \   0000024C   0xF05F 0x4180      MOVS     R1,#+1073741824
   \   00000250   0x.... 0x....      BL       __aeabi_fmul
   \   00000254   0x900A             STR      R0,[SP, #+40]
    101                  bx = sqrt(hx * hx + hy * hy);
   \   00000256   0x990B             LDR      R1,[SP, #+44]
   \   00000258   0x980B             LDR      R0,[SP, #+44]
   \   0000025A   0x.... 0x....      BL       __aeabi_fmul
   \   0000025E   0x9000             STR      R0,[SP, #+0]
   \   00000260   0x990A             LDR      R1,[SP, #+40]
   \   00000262   0x980A             LDR      R0,[SP, #+40]
   \   00000264   0x.... 0x....      BL       __aeabi_fmul
   \   00000268   0x9900             LDR      R1,[SP, #+0]
   \   0000026A   0x.... 0x....      BL       __aeabi_fadd
   \   0000026E   0x.... 0x....      BL       __aeabi_f2d
   \   00000272   0x.... 0x....      BL       sqrt
   \   00000276   0x.... 0x....      BL       __aeabi_d2f
   \   0000027A   0x9006             STR      R0,[SP, #+24]
    102                  bz = 2.0f * (mx * (q1q3 - q0q2) + my * (q2q3 + q0q1) + mz * (0.5f - q1q1 - q2q2));
   \   0000027C   0x9801             LDR      R0,[SP, #+4]
   \   0000027E   0x9902             LDR      R1,[SP, #+8]
   \   00000280   0x.... 0x....      BL       __aeabi_fsub
   \   00000284   0x0039             MOVS     R1,R7
   \   00000286   0x.... 0x....      BL       __aeabi_fmul
   \   0000028A   0x9000             STR      R0,[SP, #+0]
   \   0000028C   0x9903             LDR      R1,[SP, #+12]
   \   0000028E   0x9805             LDR      R0,[SP, #+20]
   \   00000290   0x.... 0x....      BL       __aeabi_fadd
   \   00000294   0x4641             MOV      R1,R8
   \   00000296   0x.... 0x....      BL       __aeabi_fmul
   \   0000029A   0x9900             LDR      R1,[SP, #+0]
   \   0000029C   0x.... 0x....      BL       __aeabi_fadd
   \   000002A0   0x9000             STR      R0,[SP, #+0]
   \   000002A2   0xF05F 0x507C      MOVS     R0,#+1056964608
   \   000002A6   0x9908             LDR      R1,[SP, #+32]
   \   000002A8   0x.... 0x....      BL       __aeabi_fsub
   \   000002AC   0x9904             LDR      R1,[SP, #+16]
   \   000002AE   0x.... 0x....      BL       __aeabi_fsub
   \   000002B2   0x4649             MOV      R1,R9
   \   000002B4   0x.... 0x....      BL       __aeabi_fmul
   \   000002B8   0x9900             LDR      R1,[SP, #+0]
   \   000002BA   0x.... 0x....      BL       __aeabi_fadd
   \   000002BE   0xF05F 0x4180      MOVS     R1,#+1073741824
   \   000002C2   0x.... 0x....      BL       __aeabi_fmul
   \   000002C6   0x9000             STR      R0,[SP, #+0]
    103          
    104                  // Estimated direction of gravity and magnetic field
    105                  halfvx = q1q3 - q0q2;
   \   000002C8   0x9801             LDR      R0,[SP, #+4]
   \   000002CA   0x9902             LDR      R1,[SP, #+8]
   \   000002CC   0x.... 0x....      BL       __aeabi_fsub
   \   000002D0   0x900E             STR      R0,[SP, #+56]
    106                  halfvy = q0q1 + q2q3;
   \   000002D2   0x9905             LDR      R1,[SP, #+20]
   \   000002D4   0x9803             LDR      R0,[SP, #+12]
   \   000002D6   0x.... 0x....      BL       __aeabi_fadd
   \   000002DA   0x900D             STR      R0,[SP, #+52]
    107                  halfvz = q0q0 - 0.5f + q3q3;
   \   000002DC   0x990F             LDR      R1,[SP, #+60]
   \   000002DE   0xF05F 0x403F      MOVS     R0,#-1090519040
   \   000002E2   0x.... 0x....      BL       __aeabi_fadd
   \   000002E6   0x4659             MOV      R1,R11
   \   000002E8   0x.... 0x....      BL       __aeabi_fadd
   \   000002EC   0x900C             STR      R0,[SP, #+48]
    108                  halfwx = bx * (0.5f - q2q2 - q3q3) + bz * (q1q3 - q0q2);
   \   000002EE   0xF05F 0x507C      MOVS     R0,#+1056964608
   \   000002F2   0x9904             LDR      R1,[SP, #+16]
   \   000002F4   0x.... 0x....      BL       __aeabi_fsub
   \   000002F8   0x4659             MOV      R1,R11
   \   000002FA   0x.... 0x....      BL       __aeabi_fsub
   \   000002FE   0x9906             LDR      R1,[SP, #+24]
   \   00000300   0x.... 0x....      BL       __aeabi_fmul
   \   00000304   0x4683             MOV      R11,R0
   \   00000306   0x9801             LDR      R0,[SP, #+4]
   \   00000308   0x9902             LDR      R1,[SP, #+8]
   \   0000030A   0x.... 0x....      BL       __aeabi_fsub
   \   0000030E   0x9900             LDR      R1,[SP, #+0]
   \   00000310   0x.... 0x....      BL       __aeabi_fmul
   \   00000314   0x4659             MOV      R1,R11
   \   00000316   0x.... 0x....      BL       __aeabi_fadd
   \   0000031A   0x900B             STR      R0,[SP, #+44]
    109                  halfwy = bx * (q1q2 - q0q3) + bz * (q0q1 + q2q3);
   \   0000031C   0x9807             LDR      R0,[SP, #+28]
   \   0000031E   0x9909             LDR      R1,[SP, #+36]
   \   00000320   0x.... 0x....      BL       __aeabi_fsub
   \   00000324   0x9906             LDR      R1,[SP, #+24]
   \   00000326   0x.... 0x....      BL       __aeabi_fmul
   \   0000032A   0x4683             MOV      R11,R0
   \   0000032C   0x9905             LDR      R1,[SP, #+20]
   \   0000032E   0x9803             LDR      R0,[SP, #+12]
   \   00000330   0x.... 0x....      BL       __aeabi_fadd
   \   00000334   0x9900             LDR      R1,[SP, #+0]
   \   00000336   0x.... 0x....      BL       __aeabi_fmul
   \   0000033A   0x4659             MOV      R1,R11
   \   0000033C   0x.... 0x....      BL       __aeabi_fadd
   \   00000340   0x900A             STR      R0,[SP, #+40]
    110                  halfwz = bx * (q0q2 + q1q3) + bz * (0.5f - q1q1 - q2q2);
   \   00000342   0x9902             LDR      R1,[SP, #+8]
   \   00000344   0x9801             LDR      R0,[SP, #+4]
   \   00000346   0x.... 0x....      BL       __aeabi_fadd
   \   0000034A   0x9906             LDR      R1,[SP, #+24]
   \   0000034C   0x.... 0x....      BL       __aeabi_fmul
   \   00000350   0x4683             MOV      R11,R0
   \   00000352   0xF05F 0x507C      MOVS     R0,#+1056964608
   \   00000356   0x9908             LDR      R1,[SP, #+32]
   \   00000358   0x.... 0x....      BL       __aeabi_fsub
   \   0000035C   0x9904             LDR      R1,[SP, #+16]
   \   0000035E   0x.... 0x....      BL       __aeabi_fsub
   \   00000362   0x9900             LDR      R1,[SP, #+0]
   \   00000364   0x.... 0x....      BL       __aeabi_fmul
   \   00000368   0x4659             MOV      R1,R11
   \   0000036A   0x.... 0x....      BL       __aeabi_fadd
   \   0000036E   0x4683             MOV      R11,R0
    111          
    112                  // Error is sum of cross product between estimated direction and measured direction of field vectors
    113                  halfex = (ay * halfvz - az * halfvy) + (my * halfwz - mz * halfwy);
   \   00000370   0x991A             LDR      R1,[SP, #+104]
   \   00000372   0x980C             LDR      R0,[SP, #+48]
   \   00000374   0x.... 0x....      BL       __aeabi_fmul
   \   00000378   0x9000             STR      R0,[SP, #+0]
   \   0000037A   0x980D             LDR      R0,[SP, #+52]
   \   0000037C   0x4651             MOV      R1,R10
   \   0000037E   0x.... 0x....      BL       __aeabi_fmul
   \   00000382   0x0001             MOVS     R1,R0
   \   00000384   0x9800             LDR      R0,[SP, #+0]
   \   00000386   0x.... 0x....      BL       __aeabi_fsub
   \   0000038A   0x9001             STR      R0,[SP, #+4]
   \   0000038C   0x4640             MOV      R0,R8
   \   0000038E   0x4659             MOV      R1,R11
   \   00000390   0x.... 0x....      BL       __aeabi_fmul
   \   00000394   0x9000             STR      R0,[SP, #+0]
   \   00000396   0x980A             LDR      R0,[SP, #+40]
   \   00000398   0x4649             MOV      R1,R9
   \   0000039A   0x.... 0x....      BL       __aeabi_fmul
   \   0000039E   0x0001             MOVS     R1,R0
   \   000003A0   0x9800             LDR      R0,[SP, #+0]
   \   000003A2   0x.... 0x....      BL       __aeabi_fsub
   \   000003A6   0x9901             LDR      R1,[SP, #+4]
   \   000003A8   0x.... 0x....      BL       __aeabi_fadd
   \   000003AC   0x9000             STR      R0,[SP, #+0]
    114                  halfey = (az * halfvx - ax * halfvz) + (mz * halfwx - mx * halfwz);
   \   000003AE   0x980E             LDR      R0,[SP, #+56]
   \   000003B0   0x4651             MOV      R1,R10
   \   000003B2   0x.... 0x....      BL       __aeabi_fmul
   \   000003B6   0x4682             MOV      R10,R0
   \   000003B8   0x9910             LDR      R1,[SP, #+64]
   \   000003BA   0x980C             LDR      R0,[SP, #+48]
   \   000003BC   0x.... 0x....      BL       __aeabi_fmul
   \   000003C0   0x0001             MOVS     R1,R0
   \   000003C2   0x4650             MOV      R0,R10
   \   000003C4   0x.... 0x....      BL       __aeabi_fsub
   \   000003C8   0x4682             MOV      R10,R0
   \   000003CA   0x980B             LDR      R0,[SP, #+44]
   \   000003CC   0x4649             MOV      R1,R9
   \   000003CE   0x.... 0x....      BL       __aeabi_fmul
   \   000003D2   0x4681             MOV      R9,R0
   \   000003D4   0x0038             MOVS     R0,R7
   \   000003D6   0x4659             MOV      R1,R11
   \   000003D8   0x.... 0x....      BL       __aeabi_fmul
   \   000003DC   0x0001             MOVS     R1,R0
   \   000003DE   0x4648             MOV      R0,R9
   \   000003E0   0x.... 0x....      BL       __aeabi_fsub
   \   000003E4   0x4651             MOV      R1,R10
   \   000003E6   0x.... 0x....      BL       __aeabi_fadd
   \   000003EA   0x4681             MOV      R9,R0
    115                  halfez = (ax * halfvy - ay * halfvx) + (mx * halfwy - my * halfwx);
   \   000003EC   0x9910             LDR      R1,[SP, #+64]
   \   000003EE   0x980D             LDR      R0,[SP, #+52]
   \   000003F0   0x.... 0x....      BL       __aeabi_fmul
   \   000003F4   0x4682             MOV      R10,R0
   \   000003F6   0x991A             LDR      R1,[SP, #+104]
   \   000003F8   0x980E             LDR      R0,[SP, #+56]
   \   000003FA   0x.... 0x....      BL       __aeabi_fmul
   \   000003FE   0x0001             MOVS     R1,R0
   \   00000400   0x4650             MOV      R0,R10
   \   00000402   0x.... 0x....      BL       __aeabi_fsub
   \   00000406   0x4682             MOV      R10,R0
   \   00000408   0x980A             LDR      R0,[SP, #+40]
   \   0000040A   0x0039             MOVS     R1,R7
   \   0000040C   0x.... 0x....      BL       __aeabi_fmul
   \   00000410   0x0007             MOVS     R7,R0
   \   00000412   0x980B             LDR      R0,[SP, #+44]
   \   00000414   0x4641             MOV      R1,R8
   \   00000416   0x.... 0x....      BL       __aeabi_fmul
   \   0000041A   0x0001             MOVS     R1,R0
   \   0000041C   0x0038             MOVS     R0,R7
   \   0000041E   0x.... 0x....      BL       __aeabi_fsub
   \   00000422   0x4651             MOV      R1,R10
   \   00000424   0x.... 0x....      BL       __aeabi_fadd
   \   00000428   0x0007             MOVS     R7,R0
    116          
    117                  // Compute and apply integral feedback if enabled
    118                  if(twoKi > 0.0f)
   \   0000042A   0x.... 0x....      LDR.W    R0,??DataTable1_4
   \   0000042E   0x6800             LDR      R0,[R0, #+0]
   \   00000430   0x2100             MOVS     R1,#+0
   \   00000432   0x.... 0x....      BL       __aeabi_cfrcmple
   \   00000436   0xD24B             BCS.N    ??MahonyAHRSupdate_4
    119                  {
    120                      integralFBx += twoKi * halfex * (1.0f / sampleFreq);	// integral error scaled by Ki
   \   00000438   0x.... 0x....      LDR.W    R0,??DataTable1_4
   \   0000043C   0x6801             LDR      R1,[R0, #+0]
   \   0000043E   0x9800             LDR      R0,[SP, #+0]
   \   00000440   0x.... 0x....      BL       __aeabi_fmul
   \   00000444   0x.... 0x....      LDR.W    R1,??DataTable1_5  ;; 0x3b23d70a
   \   00000448   0x.... 0x....      BL       __aeabi_fmul
   \   0000044C   0x.... 0x....      LDR.W    R1,??DataTable1_6
   \   00000450   0x6809             LDR      R1,[R1, #+0]
   \   00000452   0x.... 0x....      BL       __aeabi_fadd
   \   00000456   0x.... 0x....      LDR.W    R1,??DataTable1_6
   \   0000045A   0x6008             STR      R0,[R1, #+0]
    121                      integralFBy += twoKi * halfey * (1.0f / sampleFreq);
   \   0000045C   0x.... 0x....      LDR.W    R0,??DataTable1_4
   \   00000460   0x6800             LDR      R0,[R0, #+0]
   \   00000462   0x4649             MOV      R1,R9
   \   00000464   0x.... 0x....      BL       __aeabi_fmul
   \   00000468   0x.... 0x....      LDR.W    R1,??DataTable1_5  ;; 0x3b23d70a
   \   0000046C   0x.... 0x....      BL       __aeabi_fmul
   \   00000470   0x.... 0x....      LDR.W    R1,??DataTable1_7
   \   00000474   0x6809             LDR      R1,[R1, #+0]
   \   00000476   0x.... 0x....      BL       __aeabi_fadd
   \   0000047A   0x.... 0x....      LDR.W    R1,??DataTable1_7
   \   0000047E   0x6008             STR      R0,[R1, #+0]
    122                      integralFBz += twoKi * halfez * (1.0f / sampleFreq);
   \   00000480   0x.... 0x....      LDR.W    R0,??DataTable1_4
   \   00000484   0x6800             LDR      R0,[R0, #+0]
   \   00000486   0x0039             MOVS     R1,R7
   \   00000488   0x.... 0x....      BL       __aeabi_fmul
   \   0000048C   0x.... 0x....      LDR.W    R1,??DataTable1_5  ;; 0x3b23d70a
   \   00000490   0x.... 0x....      BL       __aeabi_fmul
   \   00000494   0x.... 0x....      LDR.W    R1,??DataTable1_8
   \   00000498   0x6809             LDR      R1,[R1, #+0]
   \   0000049A   0x.... 0x....      BL       __aeabi_fadd
   \   0000049E   0x.... 0x....      LDR.W    R1,??DataTable1_8
   \   000004A2   0x6008             STR      R0,[R1, #+0]
    123                      gx += integralFBx;	// apply integral feedback
   \   000004A4   0x.... 0x....      LDR.W    R0,??DataTable1_6
   \   000004A8   0x6800             LDR      R0,[R0, #+0]
   \   000004AA   0x0021             MOVS     R1,R4
   \   000004AC   0x.... 0x....      BL       __aeabi_fadd
   \   000004B0   0x0004             MOVS     R4,R0
    124                      gy += integralFBy;
   \   000004B2   0x.... 0x....      LDR.W    R0,??DataTable1_7
   \   000004B6   0x6800             LDR      R0,[R0, #+0]
   \   000004B8   0x0029             MOVS     R1,R5
   \   000004BA   0x.... 0x....      BL       __aeabi_fadd
   \   000004BE   0x0005             MOVS     R5,R0
    125                      gz += integralFBz;
   \   000004C0   0x.... 0x....      LDR.W    R0,??DataTable1_8
   \   000004C4   0x6800             LDR      R0,[R0, #+0]
   \   000004C6   0x0031             MOVS     R1,R6
   \   000004C8   0x.... 0x....      BL       __aeabi_fadd
   \   000004CC   0x0006             MOVS     R6,R0
   \   000004CE   0xE00B             B.N      ??MahonyAHRSupdate_5
    126                  }
    127                  else
    128                  {
    129                      integralFBx = 0.0f;	// prevent integral windup
   \                     ??MahonyAHRSupdate_4:
   \   000004D0   0x.... 0x....      LDR.W    R0,??DataTable1_6
   \   000004D4   0x2100             MOVS     R1,#+0
   \   000004D6   0x6001             STR      R1,[R0, #+0]
    130                      integralFBy = 0.0f;
   \   000004D8   0x.... 0x....      LDR.W    R0,??DataTable1_7
   \   000004DC   0x2100             MOVS     R1,#+0
   \   000004DE   0x6001             STR      R1,[R0, #+0]
    131                      integralFBz = 0.0f;
   \   000004E0   0x.... 0x....      LDR.W    R0,??DataTable1_8
   \   000004E4   0x2100             MOVS     R1,#+0
   \   000004E6   0x6001             STR      R1,[R0, #+0]
    132                  }
    133          
    134                  // Apply proportional feedback
    135                  gx += twoKp * halfex;
   \                     ??MahonyAHRSupdate_5:
   \   000004E8   0x.... 0x....      LDR.W    R0,??DataTable2
   \   000004EC   0x6801             LDR      R1,[R0, #+0]
   \   000004EE   0x9800             LDR      R0,[SP, #+0]
   \   000004F0   0x.... 0x....      BL       __aeabi_fmul
   \   000004F4   0x0021             MOVS     R1,R4
   \   000004F6   0x.... 0x....      BL       __aeabi_fadd
   \   000004FA   0x0004             MOVS     R4,R0
    136                  gy += twoKp * halfey;
   \   000004FC   0x.... 0x....      LDR.W    R0,??DataTable2
   \   00000500   0x6800             LDR      R0,[R0, #+0]
   \   00000502   0x4649             MOV      R1,R9
   \   00000504   0x.... 0x....      BL       __aeabi_fmul
   \   00000508   0x0029             MOVS     R1,R5
   \   0000050A   0x.... 0x....      BL       __aeabi_fadd
   \   0000050E   0x0005             MOVS     R5,R0
    137                  gz += twoKp * halfez;
   \   00000510   0x.... 0x....      LDR.W    R0,??DataTable2
   \   00000514   0x6800             LDR      R0,[R0, #+0]
   \   00000516   0x0039             MOVS     R1,R7
   \   00000518   0x.... 0x....      BL       __aeabi_fmul
   \   0000051C   0x0031             MOVS     R1,R6
   \   0000051E   0x.... 0x....      BL       __aeabi_fadd
   \   00000522   0x0006             MOVS     R6,R0
    138              }
    139          
    140              // Integrate rate of change of quaternion
    141              gx *= (0.5f * (1.0f / sampleFreq));		// pre-multiply common factors
   \                     ??MahonyAHRSupdate_3:
   \   00000524   0x.... 0x....      LDR.W    R0,??DataTable3  ;; 0x3aa3d70a
   \   00000528   0x0021             MOVS     R1,R4
   \   0000052A   0x.... 0x....      BL       __aeabi_fmul
   \   0000052E   0x0004             MOVS     R4,R0
    142              gy *= (0.5f * (1.0f / sampleFreq));
   \   00000530   0x.... 0x....      LDR.W    R0,??DataTable3  ;; 0x3aa3d70a
   \   00000534   0x0029             MOVS     R1,R5
   \   00000536   0x.... 0x....      BL       __aeabi_fmul
   \   0000053A   0x0005             MOVS     R5,R0
    143              gz *= (0.5f * (1.0f / sampleFreq));
   \   0000053C   0x.... 0x....      LDR.W    R0,??DataTable3  ;; 0x3aa3d70a
   \   00000540   0x0031             MOVS     R1,R6
   \   00000542   0x.... 0x....      BL       __aeabi_fmul
   \   00000546   0x0006             MOVS     R6,R0
    144              qa = q0;
   \   00000548   0x.... 0x....      LDR.W    R0,??DataTable1
   \   0000054C   0x6807             LDR      R7,[R0, #+0]
    145              qb = q1;
   \   0000054E   0x.... 0x....      LDR.W    R0,??DataTable1_1
   \   00000552   0xF8D0 0x8000      LDR      R8,[R0, #+0]
    146              qc = q2;
   \   00000556   0x.... 0x....      LDR.W    R0,??DataTable1_2
   \   0000055A   0xF8D0 0x9000      LDR      R9,[R0, #+0]
    147              q0 += (-qb * gx - qc * gy - q3 * gz);
   \   0000055E   0x4640             MOV      R0,R8
   \   00000560   0xF090 0x4000      EORS     R0,R0,#0x80000000
   \   00000564   0x0021             MOVS     R1,R4
   \   00000566   0x.... 0x....      BL       __aeabi_fmul
   \   0000056A   0x4682             MOV      R10,R0
   \   0000056C   0x4648             MOV      R0,R9
   \   0000056E   0x0029             MOVS     R1,R5
   \   00000570   0x.... 0x....      BL       __aeabi_fmul
   \   00000574   0x0001             MOVS     R1,R0
   \   00000576   0x4650             MOV      R0,R10
   \   00000578   0x.... 0x....      BL       __aeabi_fsub
   \   0000057C   0x4682             MOV      R10,R0
   \   0000057E   0x.... 0x....      LDR.W    R0,??DataTable1_3
   \   00000582   0x6800             LDR      R0,[R0, #+0]
   \   00000584   0x0031             MOVS     R1,R6
   \   00000586   0x.... 0x....      BL       __aeabi_fmul
   \   0000058A   0x0001             MOVS     R1,R0
   \   0000058C   0x4650             MOV      R0,R10
   \   0000058E   0x.... 0x....      BL       __aeabi_fsub
   \   00000592   0x.... 0x....      LDR.W    R1,??DataTable1
   \   00000596   0x6809             LDR      R1,[R1, #+0]
   \   00000598   0x.... 0x....      BL       __aeabi_fadd
   \   0000059C   0x.... 0x....      LDR.W    R1,??DataTable1
   \   000005A0   0x6008             STR      R0,[R1, #+0]
    148              q1 += (qa * gx + qc * gz - q3 * gy);
   \   000005A2   0x0038             MOVS     R0,R7
   \   000005A4   0x0021             MOVS     R1,R4
   \   000005A6   0x.... 0x....      BL       __aeabi_fmul
   \   000005AA   0x4682             MOV      R10,R0
   \   000005AC   0x4648             MOV      R0,R9
   \   000005AE   0x0031             MOVS     R1,R6
   \   000005B0   0x.... 0x....      BL       __aeabi_fmul
   \   000005B4   0x4651             MOV      R1,R10
   \   000005B6   0x.... 0x....      BL       __aeabi_fadd
   \   000005BA   0x4682             MOV      R10,R0
   \   000005BC   0x.... 0x....      LDR.W    R0,??DataTable1_3
   \   000005C0   0x6800             LDR      R0,[R0, #+0]
   \   000005C2   0x0029             MOVS     R1,R5
   \   000005C4   0x.... 0x....      BL       __aeabi_fmul
   \   000005C8   0x0001             MOVS     R1,R0
   \   000005CA   0x4650             MOV      R0,R10
   \   000005CC   0x.... 0x....      BL       __aeabi_fsub
   \   000005D0   0x.... 0x....      LDR.W    R1,??DataTable1_1
   \   000005D4   0x6809             LDR      R1,[R1, #+0]
   \   000005D6   0x.... 0x....      BL       __aeabi_fadd
   \   000005DA   0x.... 0x....      LDR.W    R1,??DataTable1_1
   \   000005DE   0x6008             STR      R0,[R1, #+0]
    149              q2 += (qa * gy - qb * gz + q3 * gx);
   \   000005E0   0x0038             MOVS     R0,R7
   \   000005E2   0x0029             MOVS     R1,R5
   \   000005E4   0x.... 0x....      BL       __aeabi_fmul
   \   000005E8   0x4682             MOV      R10,R0
   \   000005EA   0x4640             MOV      R0,R8
   \   000005EC   0x0031             MOVS     R1,R6
   \   000005EE   0x.... 0x....      BL       __aeabi_fmul
   \   000005F2   0x0001             MOVS     R1,R0
   \   000005F4   0x4650             MOV      R0,R10
   \   000005F6   0x.... 0x....      BL       __aeabi_fsub
   \   000005FA   0x4682             MOV      R10,R0
   \   000005FC   0x.... 0x....      LDR.W    R0,??DataTable1_3
   \   00000600   0x6800             LDR      R0,[R0, #+0]
   \   00000602   0x0021             MOVS     R1,R4
   \   00000604   0x.... 0x....      BL       __aeabi_fmul
   \   00000608   0x4651             MOV      R1,R10
   \   0000060A   0x.... 0x....      BL       __aeabi_fadd
   \   0000060E   0x.... 0x....      LDR.W    R1,??DataTable1_2
   \   00000612   0x6809             LDR      R1,[R1, #+0]
   \   00000614   0x.... 0x....      BL       __aeabi_fadd
   \   00000618   0x.... 0x....      LDR.W    R1,??DataTable1_2
   \   0000061C   0x6008             STR      R0,[R1, #+0]
    150              q3 += (qa * gz + qb * gy - qc * gx);
   \   0000061E   0x0038             MOVS     R0,R7
   \   00000620   0x0031             MOVS     R1,R6
   \   00000622   0x.... 0x....      BL       __aeabi_fmul
   \   00000626   0x0006             MOVS     R6,R0
   \   00000628   0x4640             MOV      R0,R8
   \   0000062A   0x0029             MOVS     R1,R5
   \   0000062C   0x.... 0x....      BL       __aeabi_fmul
   \   00000630   0x0031             MOVS     R1,R6
   \   00000632   0x.... 0x....      BL       __aeabi_fadd
   \   00000636   0x0005             MOVS     R5,R0
   \   00000638   0x4648             MOV      R0,R9
   \   0000063A   0x0021             MOVS     R1,R4
   \   0000063C   0x.... 0x....      BL       __aeabi_fmul
   \   00000640   0x0001             MOVS     R1,R0
   \   00000642   0x0028             MOVS     R0,R5
   \   00000644   0x.... 0x....      BL       __aeabi_fsub
   \   00000648   0x.... 0x....      LDR.W    R1,??DataTable1_3
   \   0000064C   0x6809             LDR      R1,[R1, #+0]
   \   0000064E   0x.... 0x....      BL       __aeabi_fadd
   \   00000652   0x.... 0x....      LDR.W    R1,??DataTable1_3
   \   00000656   0x6008             STR      R0,[R1, #+0]
    151          
    152              // Normalise quaternion
    153              recipNorm = invSqrt(q0 * q0 + q1 * q1 + q2 * q2 + q3 * q3);
   \   00000658   0x.... 0x....      LDR.W    R0,??DataTable1
   \   0000065C   0x6801             LDR      R1,[R0, #+0]
   \   0000065E   0x.... 0x....      LDR.W    R0,??DataTable1
   \   00000662   0x6800             LDR      R0,[R0, #+0]
   \   00000664   0x.... 0x....      BL       __aeabi_fmul
   \   00000668   0x0004             MOVS     R4,R0
   \   0000066A   0x.... 0x....      LDR.W    R0,??DataTable1_1
   \   0000066E   0x6801             LDR      R1,[R0, #+0]
   \   00000670   0x.... 0x....      LDR.W    R0,??DataTable1_1
   \   00000674   0x6800             LDR      R0,[R0, #+0]
   \   00000676   0x.... 0x....      BL       __aeabi_fmul
   \   0000067A   0x0021             MOVS     R1,R4
   \   0000067C   0x.... 0x....      BL       __aeabi_fadd
   \   00000680   0x0004             MOVS     R4,R0
   \   00000682   0x.... 0x....      LDR.W    R0,??DataTable1_2
   \   00000686   0x6801             LDR      R1,[R0, #+0]
   \   00000688   0x.... 0x....      LDR.W    R0,??DataTable1_2
   \   0000068C   0x6800             LDR      R0,[R0, #+0]
   \   0000068E   0x.... 0x....      BL       __aeabi_fmul
   \   00000692   0x0021             MOVS     R1,R4
   \   00000694   0x.... 0x....      BL       __aeabi_fadd
   \   00000698   0x0004             MOVS     R4,R0
   \   0000069A   0x.... 0x....      LDR.W    R0,??DataTable1_3
   \   0000069E   0x6801             LDR      R1,[R0, #+0]
   \   000006A0   0x.... 0x....      LDR.W    R0,??DataTable1_3
   \   000006A4   0x6800             LDR      R0,[R0, #+0]
   \   000006A6   0x.... 0x....      BL       __aeabi_fmul
   \   000006AA   0x0021             MOVS     R1,R4
   \   000006AC   0x.... 0x....      BL       __aeabi_fadd
   \   000006B0   0x.... 0x....      BL       invSqrt
   \   000006B4   0x4683             MOV      R11,R0
    154              q0 *= recipNorm;
   \   000006B6   0x.... 0x....      LDR.W    R0,??DataTable1
   \   000006BA   0x6800             LDR      R0,[R0, #+0]
   \   000006BC   0x4659             MOV      R1,R11
   \   000006BE   0x.... 0x....      BL       __aeabi_fmul
   \   000006C2   0x.... 0x....      LDR.W    R1,??DataTable1
   \   000006C6   0x6008             STR      R0,[R1, #+0]
    155              q1 *= recipNorm;
   \   000006C8   0x.... 0x....      LDR.W    R0,??DataTable1_1
   \   000006CC   0x6800             LDR      R0,[R0, #+0]
   \   000006CE   0x4659             MOV      R1,R11
   \   000006D0   0x.... 0x....      BL       __aeabi_fmul
   \   000006D4   0x.... 0x....      LDR.W    R1,??DataTable1_1
   \   000006D8   0x6008             STR      R0,[R1, #+0]
    156              q2 *= recipNorm;
   \   000006DA   0x.... 0x....      LDR.W    R0,??DataTable1_2
   \   000006DE   0x6800             LDR      R0,[R0, #+0]
   \   000006E0   0x4659             MOV      R1,R11
   \   000006E2   0x.... 0x....      BL       __aeabi_fmul
   \   000006E6   0x.... 0x....      LDR.W    R1,??DataTable1_2
   \   000006EA   0x6008             STR      R0,[R1, #+0]
    157              q3 *= recipNorm;
   \   000006EC   0x.... 0x....      LDR.W    R0,??DataTable1_3
   \   000006F0   0x6800             LDR      R0,[R0, #+0]
   \   000006F2   0x4659             MOV      R1,R11
   \   000006F4   0x.... 0x....      BL       __aeabi_fmul
   \   000006F8   0x.... 0x....      LDR.W    R1,??DataTable1_3
   \   000006FC   0x6008             STR      R0,[R1, #+0]
    158          }
   \                     ??MahonyAHRSupdate_1:
   \   000006FE   0xB011             ADD      SP,SP,#+68
   \   00000700   0xE8BD 0x8FF0      POP      {R4-R11,PC}      ;; return
    159          
    160          //---------------------------------------------------------------------------------------------------
    161          // IMU algorithm update
    162          

   \                                 In section .text, align 2, keep-with-next
    163          void MahonyAHRSupdateIMU(float gx, float gy, float gz, float ax, float ay, float az)
    164          {
   \                     MahonyAHRSupdateIMU:
   \   00000000   0xE92D 0x4FF0      PUSH     {R4-R11,LR}
   \   00000004   0xB083             SUB      SP,SP,#+12
   \   00000006   0x0004             MOVS     R4,R0
   \   00000008   0x000D             MOVS     R5,R1
   \   0000000A   0x0016             MOVS     R6,R2
   \   0000000C   0x001F             MOVS     R7,R3
   \   0000000E   0xF8DD 0x8030      LDR      R8,[SP, #+48]
   \   00000012   0xF8DD 0x9034      LDR      R9,[SP, #+52]
    165              float recipNorm;
    166              float halfvx, halfvy, halfvz;
    167              float halfex, halfey, halfez;
    168              float qa, qb, qc;
    169              float r1, r2, r3, r4, r5;
    170              // Compute feedback only if accelerometer measurement valid (avoids NaN in accelerometer normalisation)
    171              if(!((ax == 0.0f) && (ay == 0.0f) && (az == 0.0f)))
   \   00000016   0x0038             MOVS     R0,R7
   \   00000018   0x2100             MOVS     R1,#+0
   \   0000001A   0x.... 0x....      BL       __aeabi_cfcmpeq
   \   0000001E   0xD10A             BNE.N    ??MahonyAHRSupdateIMU_0
   \   00000020   0x4640             MOV      R0,R8
   \   00000022   0x2100             MOVS     R1,#+0
   \   00000024   0x.... 0x....      BL       __aeabi_cfcmpeq
   \   00000028   0xD105             BNE.N    ??MahonyAHRSupdateIMU_0
   \   0000002A   0x4648             MOV      R0,R9
   \   0000002C   0x2100             MOVS     R1,#+0
   \   0000002E   0x.... 0x....      BL       __aeabi_cfcmpeq
   \   00000032   0xF000 0x8111      BEQ.W    ??MahonyAHRSupdateIMU_1
    172              {
    173          
    174                  // Normalise accelerometer measurement
    175                  recipNorm = invSqrt(ax * ax + ay * ay + az * az);
   \                     ??MahonyAHRSupdateIMU_0:
   \   00000036   0x0038             MOVS     R0,R7
   \   00000038   0x0039             MOVS     R1,R7
   \   0000003A   0x.... 0x....      BL       __aeabi_fmul
   \   0000003E   0x4682             MOV      R10,R0
   \   00000040   0x4640             MOV      R0,R8
   \   00000042   0x4641             MOV      R1,R8
   \   00000044   0x.... 0x....      BL       __aeabi_fmul
   \   00000048   0x4651             MOV      R1,R10
   \   0000004A   0x.... 0x....      BL       __aeabi_fadd
   \   0000004E   0x4682             MOV      R10,R0
   \   00000050   0x4648             MOV      R0,R9
   \   00000052   0x4649             MOV      R1,R9
   \   00000054   0x.... 0x....      BL       __aeabi_fmul
   \   00000058   0x4651             MOV      R1,R10
   \   0000005A   0x.... 0x....      BL       __aeabi_fadd
   \   0000005E   0x.... 0x....      BL       invSqrt
   \   00000062   0x4682             MOV      R10,R0
    176                  ax *= recipNorm;
   \   00000064   0x0038             MOVS     R0,R7
   \   00000066   0x4651             MOV      R1,R10
   \   00000068   0x.... 0x....      BL       __aeabi_fmul
   \   0000006C   0x0007             MOVS     R7,R0
    177                  ay *= recipNorm;
   \   0000006E   0x4640             MOV      R0,R8
   \   00000070   0x4651             MOV      R1,R10
   \   00000072   0x.... 0x....      BL       __aeabi_fmul
   \   00000076   0x4680             MOV      R8,R0
    178                  az *= recipNorm;
   \   00000078   0x4648             MOV      R0,R9
   \   0000007A   0x4651             MOV      R1,R10
   \   0000007C   0x.... 0x....      BL       __aeabi_fmul
   \   00000080   0x4681             MOV      R9,R0
    179          
    180                  // Estimated direction of gravity and vector perpendicular to magnetic flux
    181                  halfvx = q1 * q3 - q0 * q2;
   \   00000082   0x.... 0x....      LDR.W    R0,??DataTable1_1
   \   00000086   0x6801             LDR      R1,[R0, #+0]
   \   00000088   0x.... 0x....      LDR.W    R0,??DataTable1_3
   \   0000008C   0x6800             LDR      R0,[R0, #+0]
   \   0000008E   0x.... 0x....      BL       __aeabi_fmul
   \   00000092   0x4682             MOV      R10,R0
   \   00000094   0x.... 0x....      LDR.W    R0,??DataTable1
   \   00000098   0x6801             LDR      R1,[R0, #+0]
   \   0000009A   0x.... 0x....      LDR.W    R0,??DataTable1_2
   \   0000009E   0x6800             LDR      R0,[R0, #+0]
   \   000000A0   0x.... 0x....      BL       __aeabi_fmul
   \   000000A4   0x0001             MOVS     R1,R0
   \   000000A6   0x4650             MOV      R0,R10
   \   000000A8   0x.... 0x....      BL       __aeabi_fsub
   \   000000AC   0x9001             STR      R0,[SP, #+4]
    182                  halfvy = q0 * q1 + q2 * q3;
   \   000000AE   0x.... 0x....      LDR.W    R0,??DataTable1
   \   000000B2   0x6801             LDR      R1,[R0, #+0]
   \   000000B4   0x.... 0x....      LDR.W    R0,??DataTable1_1
   \   000000B8   0x6800             LDR      R0,[R0, #+0]
   \   000000BA   0x.... 0x....      BL       __aeabi_fmul
   \   000000BE   0x4682             MOV      R10,R0
   \   000000C0   0x.... 0x....      LDR.W    R0,??DataTable1_2
   \   000000C4   0x6801             LDR      R1,[R0, #+0]
   \   000000C6   0x.... 0x....      LDR.W    R0,??DataTable1_3
   \   000000CA   0x6800             LDR      R0,[R0, #+0]
   \   000000CC   0x.... 0x....      BL       __aeabi_fmul
   \   000000D0   0x4651             MOV      R1,R10
   \   000000D2   0x.... 0x....      BL       __aeabi_fadd
   \   000000D6   0x9000             STR      R0,[SP, #+0]
    183                  halfvz = q0 * q0 - 0.5f + q3 * q3;
   \   000000D8   0x.... 0x....      LDR.W    R0,??DataTable1
   \   000000DC   0x6801             LDR      R1,[R0, #+0]
   \   000000DE   0x.... 0x....      LDR.W    R0,??DataTable1
   \   000000E2   0x6800             LDR      R0,[R0, #+0]
   \   000000E4   0x.... 0x....      BL       __aeabi_fmul
   \   000000E8   0xF05F 0x413F      MOVS     R1,#-1090519040
   \   000000EC   0x.... 0x....      BL       __aeabi_fadd
   \   000000F0   0x4682             MOV      R10,R0
   \   000000F2   0x.... 0x....      LDR.W    R0,??DataTable1_3
   \   000000F6   0x6801             LDR      R1,[R0, #+0]
   \   000000F8   0x.... 0x....      LDR.W    R0,??DataTable1_3
   \   000000FC   0x6800             LDR      R0,[R0, #+0]
   \   000000FE   0x.... 0x....      BL       __aeabi_fmul
   \   00000102   0x4651             MOV      R1,R10
   \   00000104   0x.... 0x....      BL       __aeabi_fadd
   \   00000108   0x4683             MOV      R11,R0
    184          
    185                  // Error is sum of cross product between estimated and measured direction of gravity
    186                  halfex = (ay * halfvz - az * halfvy);
   \   0000010A   0x4640             MOV      R0,R8
   \   0000010C   0x4659             MOV      R1,R11
   \   0000010E   0x.... 0x....      BL       __aeabi_fmul
   \   00000112   0x4682             MOV      R10,R0
   \   00000114   0x9800             LDR      R0,[SP, #+0]
   \   00000116   0x4649             MOV      R1,R9
   \   00000118   0x.... 0x....      BL       __aeabi_fmul
   \   0000011C   0x0001             MOVS     R1,R0
   \   0000011E   0x4650             MOV      R0,R10
   \   00000120   0x.... 0x....      BL       __aeabi_fsub
   \   00000124   0x4682             MOV      R10,R0
    187                  halfey = (az * halfvx - ax * halfvz);
   \   00000126   0x9801             LDR      R0,[SP, #+4]
   \   00000128   0x4649             MOV      R1,R9
   \   0000012A   0x.... 0x....      BL       __aeabi_fmul
   \   0000012E   0x4681             MOV      R9,R0
   \   00000130   0x0038             MOVS     R0,R7
   \   00000132   0x4659             MOV      R1,R11
   \   00000134   0x.... 0x....      BL       __aeabi_fmul
   \   00000138   0x0001             MOVS     R1,R0
   \   0000013A   0x4648             MOV      R0,R9
   \   0000013C   0x.... 0x....      BL       __aeabi_fsub
   \   00000140   0x4681             MOV      R9,R0
    188                  halfez = (ax * halfvy - ay * halfvx);
   \   00000142   0x9800             LDR      R0,[SP, #+0]
   \   00000144   0x0039             MOVS     R1,R7
   \   00000146   0x.... 0x....      BL       __aeabi_fmul
   \   0000014A   0x0007             MOVS     R7,R0
   \   0000014C   0x9801             LDR      R0,[SP, #+4]
   \   0000014E   0x4641             MOV      R1,R8
   \   00000150   0x.... 0x....      BL       __aeabi_fmul
   \   00000154   0x0001             MOVS     R1,R0
   \   00000156   0x0038             MOVS     R0,R7
   \   00000158   0x.... 0x....      BL       __aeabi_fsub
   \   0000015C   0x0007             MOVS     R7,R0
    189          
    190                  // Compute and apply integral feedback if enabled
    191                  if(twoKi > 0.0f)
   \   0000015E   0x.... 0x....      LDR.W    R0,??DataTable1_4
   \   00000162   0x6800             LDR      R0,[R0, #+0]
   \   00000164   0x2100             MOVS     R1,#+0
   \   00000166   0x.... 0x....      BL       __aeabi_cfrcmple
   \   0000016A   0xD24B             BCS.N    ??MahonyAHRSupdateIMU_2
    192                  {
    193                      integralFBx += twoKi * halfex * (1.0f / sampleFreq);	// integral error scaled by Ki
   \   0000016C   0x.... 0x....      LDR.W    R0,??DataTable1_4
   \   00000170   0x6800             LDR      R0,[R0, #+0]
   \   00000172   0x4651             MOV      R1,R10
   \   00000174   0x.... 0x....      BL       __aeabi_fmul
   \   00000178   0x.... 0x....      LDR.W    R1,??DataTable1_5  ;; 0x3b23d70a
   \   0000017C   0x.... 0x....      BL       __aeabi_fmul
   \   00000180   0x.... 0x....      LDR.W    R1,??DataTable1_6
   \   00000184   0x6809             LDR      R1,[R1, #+0]
   \   00000186   0x.... 0x....      BL       __aeabi_fadd
   \   0000018A   0x.... 0x....      LDR.W    R1,??DataTable1_6
   \   0000018E   0x6008             STR      R0,[R1, #+0]
    194                      integralFBy += twoKi * halfey * (1.0f / sampleFreq);
   \   00000190   0x.... 0x....      LDR.W    R0,??DataTable1_4
   \   00000194   0x6800             LDR      R0,[R0, #+0]
   \   00000196   0x4649             MOV      R1,R9
   \   00000198   0x.... 0x....      BL       __aeabi_fmul
   \   0000019C   0x.... 0x....      LDR.W    R1,??DataTable1_5  ;; 0x3b23d70a
   \   000001A0   0x.... 0x....      BL       __aeabi_fmul
   \   000001A4   0x.... 0x....      LDR.W    R1,??DataTable1_7
   \   000001A8   0x6809             LDR      R1,[R1, #+0]
   \   000001AA   0x.... 0x....      BL       __aeabi_fadd
   \   000001AE   0x.... 0x....      LDR.W    R1,??DataTable1_7
   \   000001B2   0x6008             STR      R0,[R1, #+0]
    195                      integralFBz += twoKi * halfez * (1.0f / sampleFreq);
   \   000001B4   0x.... 0x....      LDR.W    R0,??DataTable1_4
   \   000001B8   0x6800             LDR      R0,[R0, #+0]
   \   000001BA   0x0039             MOVS     R1,R7
   \   000001BC   0x.... 0x....      BL       __aeabi_fmul
   \   000001C0   0x.... 0x....      LDR.W    R1,??DataTable1_5  ;; 0x3b23d70a
   \   000001C4   0x.... 0x....      BL       __aeabi_fmul
   \   000001C8   0x.... 0x....      LDR.W    R1,??DataTable1_8
   \   000001CC   0x6809             LDR      R1,[R1, #+0]
   \   000001CE   0x.... 0x....      BL       __aeabi_fadd
   \   000001D2   0x.... 0x....      LDR.W    R1,??DataTable1_8
   \   000001D6   0x6008             STR      R0,[R1, #+0]
    196                      gx += integralFBx;	// apply integral feedback
   \   000001D8   0x.... 0x....      LDR.W    R0,??DataTable1_6
   \   000001DC   0x6800             LDR      R0,[R0, #+0]
   \   000001DE   0x0021             MOVS     R1,R4
   \   000001E0   0x.... 0x....      BL       __aeabi_fadd
   \   000001E4   0x0004             MOVS     R4,R0
    197                      gy += integralFBy;
   \   000001E6   0x.... 0x....      LDR.W    R0,??DataTable1_7
   \   000001EA   0x6800             LDR      R0,[R0, #+0]
   \   000001EC   0x0029             MOVS     R1,R5
   \   000001EE   0x.... 0x....      BL       __aeabi_fadd
   \   000001F2   0x0005             MOVS     R5,R0
    198                      gz += integralFBz;
   \   000001F4   0x.... 0x....      LDR.W    R0,??DataTable1_8
   \   000001F8   0x6800             LDR      R0,[R0, #+0]
   \   000001FA   0x0031             MOVS     R1,R6
   \   000001FC   0x.... 0x....      BL       __aeabi_fadd
   \   00000200   0x0006             MOVS     R6,R0
   \   00000202   0xE00B             B.N      ??MahonyAHRSupdateIMU_3
    199                  }
    200                  else
    201                  {
    202                      integralFBx = 0.0f;	// prevent integral windup
   \                     ??MahonyAHRSupdateIMU_2:
   \   00000204   0x.... 0x....      LDR.W    R0,??DataTable1_6
   \   00000208   0x2100             MOVS     R1,#+0
   \   0000020A   0x6001             STR      R1,[R0, #+0]
    203                      integralFBy = 0.0f;
   \   0000020C   0x.... 0x....      LDR.W    R0,??DataTable1_7
   \   00000210   0x2100             MOVS     R1,#+0
   \   00000212   0x6001             STR      R1,[R0, #+0]
    204                      integralFBz = 0.0f;
   \   00000214   0x.... 0x....      LDR.W    R0,??DataTable1_8
   \   00000218   0x2100             MOVS     R1,#+0
   \   0000021A   0x6001             STR      R1,[R0, #+0]
    205                  }
    206          
    207                  // Apply proportional feedback
    208                  gx += twoKp * halfex;
   \                     ??MahonyAHRSupdateIMU_3:
   \   0000021C   0x.... 0x....      LDR.W    R0,??DataTable2
   \   00000220   0x6800             LDR      R0,[R0, #+0]
   \   00000222   0x4651             MOV      R1,R10
   \   00000224   0x.... 0x....      BL       __aeabi_fmul
   \   00000228   0x0021             MOVS     R1,R4
   \   0000022A   0x.... 0x....      BL       __aeabi_fadd
   \   0000022E   0x0004             MOVS     R4,R0
    209                  gy += twoKp * halfey;
   \   00000230   0x.... 0x....      LDR.W    R0,??DataTable2
   \   00000234   0x6800             LDR      R0,[R0, #+0]
   \   00000236   0x4649             MOV      R1,R9
   \   00000238   0x.... 0x....      BL       __aeabi_fmul
   \   0000023C   0x0029             MOVS     R1,R5
   \   0000023E   0x.... 0x....      BL       __aeabi_fadd
   \   00000242   0x0005             MOVS     R5,R0
    210                  gz += twoKp * halfez;
   \   00000244   0x.... 0x....      LDR.W    R0,??DataTable2
   \   00000248   0x6800             LDR      R0,[R0, #+0]
   \   0000024A   0x0039             MOVS     R1,R7
   \   0000024C   0x.... 0x....      BL       __aeabi_fmul
   \   00000250   0x0031             MOVS     R1,R6
   \   00000252   0x.... 0x....      BL       __aeabi_fadd
   \   00000256   0x0006             MOVS     R6,R0
    211              }
    212          
    213              // Integrate rate of change of quaternion
    214              gx *= (0.5f * (1.0f / sampleFreq));		// pre-multiply common factors
   \                     ??MahonyAHRSupdateIMU_1:
   \   00000258   0x.... 0x....      LDR.W    R0,??DataTable3  ;; 0x3aa3d70a
   \   0000025C   0x0021             MOVS     R1,R4
   \   0000025E   0x.... 0x....      BL       __aeabi_fmul
   \   00000262   0x0004             MOVS     R4,R0
    215              gy *= (0.5f * (1.0f / sampleFreq));
   \   00000264   0x.... 0x....      LDR.W    R0,??DataTable3  ;; 0x3aa3d70a
   \   00000268   0x0029             MOVS     R1,R5
   \   0000026A   0x.... 0x....      BL       __aeabi_fmul
   \   0000026E   0x0005             MOVS     R5,R0
    216              gz *= (0.5f * (1.0f / sampleFreq));
   \   00000270   0x.... 0x....      LDR.W    R0,??DataTable3  ;; 0x3aa3d70a
   \   00000274   0x0031             MOVS     R1,R6
   \   00000276   0x.... 0x....      BL       __aeabi_fmul
   \   0000027A   0x0006             MOVS     R6,R0
    217              qa = q0;
   \   0000027C   0x....             LDR.N    R0,??DataTable1
   \   0000027E   0x6807             LDR      R7,[R0, #+0]
    218              qb = q1;
   \   00000280   0x....             LDR.N    R0,??DataTable1_1
   \   00000282   0xF8D0 0x8000      LDR      R8,[R0, #+0]
    219              qc = q2;
   \   00000286   0x....             LDR.N    R0,??DataTable1_2
   \   00000288   0xF8D0 0x9000      LDR      R9,[R0, #+0]
    220              q0 += (-qb * gx - qc * gy - q3 * gz);
   \   0000028C   0x4640             MOV      R0,R8
   \   0000028E   0xF090 0x4000      EORS     R0,R0,#0x80000000
   \   00000292   0x0021             MOVS     R1,R4
   \   00000294   0x.... 0x....      BL       __aeabi_fmul
   \   00000298   0x4682             MOV      R10,R0
   \   0000029A   0x4648             MOV      R0,R9
   \   0000029C   0x0029             MOVS     R1,R5
   \   0000029E   0x.... 0x....      BL       __aeabi_fmul
   \   000002A2   0x0001             MOVS     R1,R0
   \   000002A4   0x4650             MOV      R0,R10
   \   000002A6   0x.... 0x....      BL       __aeabi_fsub
   \   000002AA   0x4682             MOV      R10,R0
   \   000002AC   0x....             LDR.N    R0,??DataTable1_3
   \   000002AE   0x6800             LDR      R0,[R0, #+0]
   \   000002B0   0x0031             MOVS     R1,R6
   \   000002B2   0x.... 0x....      BL       __aeabi_fmul
   \   000002B6   0x0001             MOVS     R1,R0
   \   000002B8   0x4650             MOV      R0,R10
   \   000002BA   0x.... 0x....      BL       __aeabi_fsub
   \   000002BE   0x....             LDR.N    R1,??DataTable1
   \   000002C0   0x6809             LDR      R1,[R1, #+0]
   \   000002C2   0x.... 0x....      BL       __aeabi_fadd
   \   000002C6   0x....             LDR.N    R1,??DataTable1
   \   000002C8   0x6008             STR      R0,[R1, #+0]
    221              q1 += (qa * gx + qc * gz - q3 * gy);
   \   000002CA   0x0038             MOVS     R0,R7
   \   000002CC   0x0021             MOVS     R1,R4
   \   000002CE   0x.... 0x....      BL       __aeabi_fmul
   \   000002D2   0x4682             MOV      R10,R0
   \   000002D4   0x4648             MOV      R0,R9
   \   000002D6   0x0031             MOVS     R1,R6
   \   000002D8   0x.... 0x....      BL       __aeabi_fmul
   \   000002DC   0x4651             MOV      R1,R10
   \   000002DE   0x.... 0x....      BL       __aeabi_fadd
   \   000002E2   0x4682             MOV      R10,R0
   \   000002E4   0x....             LDR.N    R0,??DataTable1_3
   \   000002E6   0x6800             LDR      R0,[R0, #+0]
   \   000002E8   0x0029             MOVS     R1,R5
   \   000002EA   0x.... 0x....      BL       __aeabi_fmul
   \   000002EE   0x0001             MOVS     R1,R0
   \   000002F0   0x4650             MOV      R0,R10
   \   000002F2   0x.... 0x....      BL       __aeabi_fsub
   \   000002F6   0x....             LDR.N    R1,??DataTable1_1
   \   000002F8   0x6809             LDR      R1,[R1, #+0]
   \   000002FA   0x.... 0x....      BL       __aeabi_fadd
   \   000002FE   0x....             LDR.N    R1,??DataTable1_1
   \   00000300   0x6008             STR      R0,[R1, #+0]
    222              q2 += (qa * gy - qb * gz + q3 * gx);
   \   00000302   0x0038             MOVS     R0,R7
   \   00000304   0x0029             MOVS     R1,R5
   \   00000306   0x.... 0x....      BL       __aeabi_fmul
   \   0000030A   0x4682             MOV      R10,R0
   \   0000030C   0x4640             MOV      R0,R8
   \   0000030E   0x0031             MOVS     R1,R6
   \   00000310   0x.... 0x....      BL       __aeabi_fmul
   \   00000314   0x0001             MOVS     R1,R0
   \   00000316   0x4650             MOV      R0,R10
   \   00000318   0x.... 0x....      BL       __aeabi_fsub
   \   0000031C   0x4682             MOV      R10,R0
   \   0000031E   0x....             LDR.N    R0,??DataTable1_3
   \   00000320   0x6800             LDR      R0,[R0, #+0]
   \   00000322   0x0021             MOVS     R1,R4
   \   00000324   0x.... 0x....      BL       __aeabi_fmul
   \   00000328   0x4651             MOV      R1,R10
   \   0000032A   0x.... 0x....      BL       __aeabi_fadd
   \   0000032E   0x....             LDR.N    R1,??DataTable1_2
   \   00000330   0x6809             LDR      R1,[R1, #+0]
   \   00000332   0x.... 0x....      BL       __aeabi_fadd
   \   00000336   0x....             LDR.N    R1,??DataTable1_2
   \   00000338   0x6008             STR      R0,[R1, #+0]
    223              q3 += (qa * gz + qb * gy - qc * gx);
   \   0000033A   0x0038             MOVS     R0,R7
   \   0000033C   0x0031             MOVS     R1,R6
   \   0000033E   0x.... 0x....      BL       __aeabi_fmul
   \   00000342   0x0006             MOVS     R6,R0
   \   00000344   0x4640             MOV      R0,R8
   \   00000346   0x0029             MOVS     R1,R5
   \   00000348   0x.... 0x....      BL       __aeabi_fmul
   \   0000034C   0x0031             MOVS     R1,R6
   \   0000034E   0x.... 0x....      BL       __aeabi_fadd
   \   00000352   0x0005             MOVS     R5,R0
   \   00000354   0x4648             MOV      R0,R9
   \   00000356   0x0021             MOVS     R1,R4
   \   00000358   0x.... 0x....      BL       __aeabi_fmul
   \   0000035C   0x0001             MOVS     R1,R0
   \   0000035E   0x0028             MOVS     R0,R5
   \   00000360   0x.... 0x....      BL       __aeabi_fsub
   \   00000364   0x....             LDR.N    R1,??DataTable1_3
   \   00000366   0x6809             LDR      R1,[R1, #+0]
   \   00000368   0x.... 0x....      BL       __aeabi_fadd
   \   0000036C   0x....             LDR.N    R1,??DataTable1_3
   \   0000036E   0x6008             STR      R0,[R1, #+0]
    224          
    225              // Normalise quaternion
    226              recipNorm = invSqrt(q0 * q0 + q1 * q1 + q2 * q2 + q3 * q3);
   \   00000370   0x....             LDR.N    R0,??DataTable1
   \   00000372   0x6801             LDR      R1,[R0, #+0]
   \   00000374   0x....             LDR.N    R0,??DataTable1
   \   00000376   0x6800             LDR      R0,[R0, #+0]
   \   00000378   0x.... 0x....      BL       __aeabi_fmul
   \   0000037C   0x0004             MOVS     R4,R0
   \   0000037E   0x....             LDR.N    R0,??DataTable1_1
   \   00000380   0x6801             LDR      R1,[R0, #+0]
   \   00000382   0x....             LDR.N    R0,??DataTable1_1
   \   00000384   0x6800             LDR      R0,[R0, #+0]
   \   00000386   0x.... 0x....      BL       __aeabi_fmul
   \   0000038A   0x0021             MOVS     R1,R4
   \   0000038C   0x.... 0x....      BL       __aeabi_fadd
   \   00000390   0x0004             MOVS     R4,R0
   \   00000392   0x....             LDR.N    R0,??DataTable1_2
   \   00000394   0x6801             LDR      R1,[R0, #+0]
   \   00000396   0x....             LDR.N    R0,??DataTable1_2
   \   00000398   0x6800             LDR      R0,[R0, #+0]
   \   0000039A   0x.... 0x....      BL       __aeabi_fmul
   \   0000039E   0x0021             MOVS     R1,R4
   \   000003A0   0x.... 0x....      BL       __aeabi_fadd
   \   000003A4   0x0004             MOVS     R4,R0
   \   000003A6   0x....             LDR.N    R0,??DataTable1_3
   \   000003A8   0x6801             LDR      R1,[R0, #+0]
   \   000003AA   0x....             LDR.N    R0,??DataTable1_3
   \   000003AC   0x6800             LDR      R0,[R0, #+0]
   \   000003AE   0x.... 0x....      BL       __aeabi_fmul
   \   000003B2   0x0021             MOVS     R1,R4
   \   000003B4   0x.... 0x....      BL       __aeabi_fadd
   \   000003B8   0x.... 0x....      BL       invSqrt
   \   000003BC   0x4682             MOV      R10,R0
    227              q0 *= recipNorm;
   \   000003BE   0x....             LDR.N    R0,??DataTable1
   \   000003C0   0x6800             LDR      R0,[R0, #+0]
   \   000003C2   0x4651             MOV      R1,R10
   \   000003C4   0x.... 0x....      BL       __aeabi_fmul
   \   000003C8   0x....             LDR.N    R1,??DataTable1
   \   000003CA   0x6008             STR      R0,[R1, #+0]
    228              q1 *= recipNorm;
   \   000003CC   0x....             LDR.N    R0,??DataTable1_1
   \   000003CE   0x6800             LDR      R0,[R0, #+0]
   \   000003D0   0x4651             MOV      R1,R10
   \   000003D2   0x.... 0x....      BL       __aeabi_fmul
   \   000003D6   0x....             LDR.N    R1,??DataTable1_1
   \   000003D8   0x6008             STR      R0,[R1, #+0]
    229              q2 *= recipNorm;
   \   000003DA   0x....             LDR.N    R0,??DataTable1_2
   \   000003DC   0x6800             LDR      R0,[R0, #+0]
   \   000003DE   0x4651             MOV      R1,R10
   \   000003E0   0x.... 0x....      BL       __aeabi_fmul
   \   000003E4   0x....             LDR.N    R1,??DataTable1_2
   \   000003E6   0x6008             STR      R0,[R1, #+0]
    230              q3 *= recipNorm;
   \   000003E8   0x....             LDR.N    R0,??DataTable1_3
   \   000003EA   0x6800             LDR      R0,[R0, #+0]
   \   000003EC   0x4651             MOV      R1,R10
   \   000003EE   0x.... 0x....      BL       __aeabi_fmul
   \   000003F2   0x....             LDR.N    R1,??DataTable1_3
   \   000003F4   0x6008             STR      R0,[R1, #+0]
    231              
    232                  
    233                  r1 = 2 * q0 * q0 - 1 + 2 * q1 * q1;
   \   000003F6   0x....             LDR.N    R0,??DataTable1
   \   000003F8   0x6801             LDR      R1,[R0, #+0]
   \   000003FA   0xF05F 0x4080      MOVS     R0,#+1073741824
   \   000003FE   0x.... 0x....      BL       __aeabi_fmul
   \   00000402   0x....             LDR.N    R1,??DataTable1
   \   00000404   0x6809             LDR      R1,[R1, #+0]
   \   00000406   0x.... 0x....      BL       __aeabi_fmul
   \   0000040A   0x.... 0x....      LDR.W    R1,??DataTable3_1  ;; 0xbf800000
   \   0000040E   0x.... 0x....      BL       __aeabi_fadd
   \   00000412   0x0004             MOVS     R4,R0
   \   00000414   0x....             LDR.N    R0,??DataTable1_1
   \   00000416   0x6801             LDR      R1,[R0, #+0]
   \   00000418   0xF05F 0x4080      MOVS     R0,#+1073741824
   \   0000041C   0x.... 0x....      BL       __aeabi_fmul
   \   00000420   0x....             LDR.N    R1,??DataTable1_1
   \   00000422   0x6809             LDR      R1,[R1, #+0]
   \   00000424   0x.... 0x....      BL       __aeabi_fmul
   \   00000428   0x0021             MOVS     R1,R4
   \   0000042A   0x.... 0x....      BL       __aeabi_fadd
   \   0000042E   0x0004             MOVS     R4,R0
    234                  r2 = 2 * (q1 * q2 - q0 * q3);
   \   00000430   0x....             LDR.N    R0,??DataTable1_1
   \   00000432   0x6801             LDR      R1,[R0, #+0]
   \   00000434   0x....             LDR.N    R0,??DataTable1_2
   \   00000436   0x6800             LDR      R0,[R0, #+0]
   \   00000438   0x.... 0x....      BL       __aeabi_fmul
   \   0000043C   0x0005             MOVS     R5,R0
   \   0000043E   0x....             LDR.N    R0,??DataTable1
   \   00000440   0x6801             LDR      R1,[R0, #+0]
   \   00000442   0x....             LDR.N    R0,??DataTable1_3
   \   00000444   0x6800             LDR      R0,[R0, #+0]
   \   00000446   0x.... 0x....      BL       __aeabi_fmul
   \   0000044A   0x0001             MOVS     R1,R0
   \   0000044C   0x0028             MOVS     R0,R5
   \   0000044E   0x.... 0x....      BL       __aeabi_fsub
   \   00000452   0xF05F 0x4180      MOVS     R1,#+1073741824
   \   00000456   0x.... 0x....      BL       __aeabi_fmul
   \   0000045A   0x0006             MOVS     R6,R0
    235                  r3 = 2 * (q1 * q3 + q0 * q2);
   \   0000045C   0x....             LDR.N    R0,??DataTable1_1
   \   0000045E   0x6801             LDR      R1,[R0, #+0]
   \   00000460   0x....             LDR.N    R0,??DataTable1_3
   \   00000462   0x6800             LDR      R0,[R0, #+0]
   \   00000464   0x.... 0x....      BL       __aeabi_fmul
   \   00000468   0x0005             MOVS     R5,R0
   \   0000046A   0x....             LDR.N    R0,??DataTable1
   \   0000046C   0x6801             LDR      R1,[R0, #+0]
   \   0000046E   0x....             LDR.N    R0,??DataTable1_2
   \   00000470   0x6800             LDR      R0,[R0, #+0]
   \   00000472   0x.... 0x....      BL       __aeabi_fmul
   \   00000476   0x0029             MOVS     R1,R5
   \   00000478   0x.... 0x....      BL       __aeabi_fadd
   \   0000047C   0xF05F 0x4180      MOVS     R1,#+1073741824
   \   00000480   0x.... 0x....      BL       __aeabi_fmul
   \   00000484   0x0007             MOVS     R7,R0
    236                  r4 = 2 * (q2 * q3 - q0 * q1);
   \   00000486   0x....             LDR.N    R0,??DataTable1_2
   \   00000488   0x6801             LDR      R1,[R0, #+0]
   \   0000048A   0x....             LDR.N    R0,??DataTable1_3
   \   0000048C   0x6800             LDR      R0,[R0, #+0]
   \   0000048E   0x.... 0x....      BL       __aeabi_fmul
   \   00000492   0x0005             MOVS     R5,R0
   \   00000494   0x....             LDR.N    R0,??DataTable1
   \   00000496   0x6801             LDR      R1,[R0, #+0]
   \   00000498   0x....             LDR.N    R0,??DataTable1_1
   \   0000049A   0x6800             LDR      R0,[R0, #+0]
   \   0000049C   0x.... 0x....      BL       __aeabi_fmul
   \   000004A0   0x0001             MOVS     R1,R0
   \   000004A2   0x0028             MOVS     R0,R5
   \   000004A4   0x.... 0x....      BL       __aeabi_fsub
   \   000004A8   0xF05F 0x4180      MOVS     R1,#+1073741824
   \   000004AC   0x.... 0x....      BL       __aeabi_fmul
   \   000004B0   0x0005             MOVS     R5,R0
    237                  r5 = 2 * q0 * q0 - 1 + 2 * q3 * q3;
   \   000004B2   0x....             LDR.N    R0,??DataTable1
   \   000004B4   0x6801             LDR      R1,[R0, #+0]
   \   000004B6   0xF05F 0x4080      MOVS     R0,#+1073741824
   \   000004BA   0x.... 0x....      BL       __aeabi_fmul
   \   000004BE   0x....             LDR.N    R1,??DataTable1
   \   000004C0   0x6809             LDR      R1,[R1, #+0]
   \   000004C2   0x.... 0x....      BL       __aeabi_fmul
   \   000004C6   0x.... 0x....      LDR.W    R1,??DataTable3_1  ;; 0xbf800000
   \   000004CA   0x.... 0x....      BL       __aeabi_fadd
   \   000004CE   0x4680             MOV      R8,R0
   \   000004D0   0x....             LDR.N    R0,??DataTable1_3
   \   000004D2   0x6801             LDR      R1,[R0, #+0]
   \   000004D4   0xF05F 0x4080      MOVS     R0,#+1073741824
   \   000004D8   0x.... 0x....      BL       __aeabi_fmul
   \   000004DC   0x....             LDR.N    R1,??DataTable1_3
   \   000004DE   0x6809             LDR      R1,[R1, #+0]
   \   000004E0   0x.... 0x....      BL       __aeabi_fmul
   \   000004E4   0x4641             MOV      R1,R8
   \   000004E6   0x.... 0x....      BL       __aeabi_fadd
    238                  Q_x =   -atan2(r4, r5) * 57.3;
   \   000004EA   0x.... 0x....      BL       __aeabi_f2d
   \   000004EE   0x0002             MOVS     R2,R0
   \   000004F0   0x000B             MOVS     R3,R1
   \   000004F2   0x4690             MOV      R8,R2
   \   000004F4   0x4699             MOV      R9,R3
   \   000004F6   0x0028             MOVS     R0,R5
   \   000004F8   0x.... 0x....      BL       __aeabi_f2d
   \   000004FC   0x4642             MOV      R2,R8
   \   000004FE   0x464B             MOV      R3,R9
   \   00000500   0x.... 0x....      BL       atan2
   \   00000504   0xF091 0x4100      EORS     R1,R1,#0x80000000
   \   00000508   0xF05F 0x3266      MOVS     R2,#+1717986918
   \   0000050C   0x.... 0x....      LDR.W    R3,??DataTable3_2  ;; 0x404ca666
   \   00000510   0x.... 0x....      BL       __aeabi_dmul
   \   00000514   0x.... 0x....      BL       __aeabi_d2f
   \   00000518   0x.... 0x....      LDR.W    R1,??DataTable3_3
   \   0000051C   0x6008             STR      R0,[R1, #+0]
    239                  Q_z  =  -atan2(r2, r1) * 57.3;
   \   0000051E   0x0020             MOVS     R0,R4
   \   00000520   0x.... 0x....      BL       __aeabi_f2d
   \   00000524   0x0002             MOVS     R2,R0
   \   00000526   0x000B             MOVS     R3,R1
   \   00000528   0x0014             MOVS     R4,R2
   \   0000052A   0x001D             MOVS     R5,R3
   \   0000052C   0x0030             MOVS     R0,R6
   \   0000052E   0x.... 0x....      BL       __aeabi_f2d
   \   00000532   0x0022             MOVS     R2,R4
   \   00000534   0x002B             MOVS     R3,R5
   \   00000536   0x.... 0x....      BL       atan2
   \   0000053A   0xF091 0x4100      EORS     R1,R1,#0x80000000
   \   0000053E   0xF05F 0x3266      MOVS     R2,#+1717986918
   \   00000542   0x.... 0x....      LDR.W    R3,??DataTable3_2  ;; 0x404ca666
   \   00000546   0x.... 0x....      BL       __aeabi_dmul
   \   0000054A   0x.... 0x....      BL       __aeabi_d2f
   \   0000054E   0x.... 0x....      LDR.W    R1,??DataTable3_4
   \   00000552   0x6008             STR      R0,[R1, #+0]
    240                  Q_y = -asin(-2 * q1 * q3 + 2 * q0 * q2) * 57.3;
   \   00000554   0x....             LDR.N    R0,??DataTable1_1
   \   00000556   0x6801             LDR      R1,[R0, #+0]
   \   00000558   0xF05F 0x4040      MOVS     R0,#-1073741824
   \   0000055C   0x.... 0x....      BL       __aeabi_fmul
   \   00000560   0x....             LDR.N    R1,??DataTable1_3
   \   00000562   0x6809             LDR      R1,[R1, #+0]
   \   00000564   0x.... 0x....      BL       __aeabi_fmul
   \   00000568   0x0004             MOVS     R4,R0
   \   0000056A   0x....             LDR.N    R0,??DataTable1
   \   0000056C   0x6801             LDR      R1,[R0, #+0]
   \   0000056E   0xF05F 0x4080      MOVS     R0,#+1073741824
   \   00000572   0x.... 0x....      BL       __aeabi_fmul
   \   00000576   0x....             LDR.N    R1,??DataTable1_2
   \   00000578   0x6809             LDR      R1,[R1, #+0]
   \   0000057A   0x.... 0x....      BL       __aeabi_fmul
   \   0000057E   0x0021             MOVS     R1,R4
   \   00000580   0x.... 0x....      BL       __aeabi_fadd
   \   00000584   0x.... 0x....      BL       __aeabi_f2d
   \   00000588   0x.... 0x....      BL       asin
   \   0000058C   0xF091 0x4100      EORS     R1,R1,#0x80000000
   \   00000590   0xF05F 0x3266      MOVS     R2,#+1717986918
   \   00000594   0x.... 0x....      LDR.W    R3,??DataTable3_2  ;; 0x404ca666
   \   00000598   0x.... 0x....      BL       __aeabi_dmul
   \   0000059C   0x.... 0x....      BL       __aeabi_d2f
   \   000005A0   0x.... 0x....      LDR.W    R1,??DataTable3_5
   \   000005A4   0x6008             STR      R0,[R1, #+0]
    241          
    242                      
    243          }
   \   000005A6   0xE8BD 0x8FF7      POP      {R0-R2,R4-R11,PC}  ;; return
    244          

   \                                 In section .text, align 2, keep-with-next
    245          void MahonyAHRSupdateIMU1(float gx, float gy, float gz, float ax, float ay, float az)
    246          {
   \                     MahonyAHRSupdateIMU1:
   \   00000000   0xE92D 0x4FF0      PUSH     {R4-R11,LR}
   \   00000004   0xB083             SUB      SP,SP,#+12
   \   00000006   0x0004             MOVS     R4,R0
   \   00000008   0x000D             MOVS     R5,R1
   \   0000000A   0x0016             MOVS     R6,R2
   \   0000000C   0x001F             MOVS     R7,R3
   \   0000000E   0xF8DD 0x8030      LDR      R8,[SP, #+48]
   \   00000012   0xF8DD 0x9034      LDR      R9,[SP, #+52]
    247              float recipNorm;
    248              float halfvx, halfvy, halfvz;
    249              float halfex, halfey, halfez;
    250              float qa, qb, qc;
    251              float r1, r2, r3, r4, r5;
    252              // Compute feedback only if accelerometer measurement valid (avoids NaN in accelerometer normalisation)
    253              if(!((ax == 0.0f) && (ay == 0.0f) && (az == 0.0f)))
   \   00000016   0x0038             MOVS     R0,R7
   \   00000018   0x2100             MOVS     R1,#+0
   \   0000001A   0x.... 0x....      BL       __aeabi_cfcmpeq
   \   0000001E   0xD10A             BNE.N    ??MahonyAHRSupdateIMU1_0
   \   00000020   0x4640             MOV      R0,R8
   \   00000022   0x2100             MOVS     R1,#+0
   \   00000024   0x.... 0x....      BL       __aeabi_cfcmpeq
   \   00000028   0xD105             BNE.N    ??MahonyAHRSupdateIMU1_0
   \   0000002A   0x4648             MOV      R0,R9
   \   0000002C   0x2100             MOVS     R1,#+0
   \   0000002E   0x.... 0x....      BL       __aeabi_cfcmpeq
   \   00000032   0xF000 0x8111      BEQ.W    ??MahonyAHRSupdateIMU1_1
    254              {
    255          
    256                  // Normalise accelerometer measurement
    257                  recipNorm = invSqrt(ax * ax + ay * ay + az * az);
   \                     ??MahonyAHRSupdateIMU1_0:
   \   00000036   0x0038             MOVS     R0,R7
   \   00000038   0x0039             MOVS     R1,R7
   \   0000003A   0x.... 0x....      BL       __aeabi_fmul
   \   0000003E   0x4682             MOV      R10,R0
   \   00000040   0x4640             MOV      R0,R8
   \   00000042   0x4641             MOV      R1,R8
   \   00000044   0x.... 0x....      BL       __aeabi_fmul
   \   00000048   0x4651             MOV      R1,R10
   \   0000004A   0x.... 0x....      BL       __aeabi_fadd
   \   0000004E   0x4682             MOV      R10,R0
   \   00000050   0x4648             MOV      R0,R9
   \   00000052   0x4649             MOV      R1,R9
   \   00000054   0x.... 0x....      BL       __aeabi_fmul
   \   00000058   0x4651             MOV      R1,R10
   \   0000005A   0x.... 0x....      BL       __aeabi_fadd
   \   0000005E   0x.... 0x....      BL       invSqrt
   \   00000062   0x4682             MOV      R10,R0
    258                  ax *= recipNorm;
   \   00000064   0x0038             MOVS     R0,R7
   \   00000066   0x4651             MOV      R1,R10
   \   00000068   0x.... 0x....      BL       __aeabi_fmul
   \   0000006C   0x0007             MOVS     R7,R0
    259                  ay *= recipNorm;
   \   0000006E   0x4640             MOV      R0,R8
   \   00000070   0x4651             MOV      R1,R10
   \   00000072   0x.... 0x....      BL       __aeabi_fmul
   \   00000076   0x4680             MOV      R8,R0
    260                  az *= recipNorm;
   \   00000078   0x4648             MOV      R0,R9
   \   0000007A   0x4651             MOV      R1,R10
   \   0000007C   0x.... 0x....      BL       __aeabi_fmul
   \   00000080   0x4681             MOV      R9,R0
    261          
    262                  // Estimated direction of gravity and vector perpendicular to magnetic flux
    263                  halfvx = q11 * q31 - q01 * q21;
   \   00000082   0x.... 0x....      LDR.W    R0,??DataTable3_6
   \   00000086   0x6801             LDR      R1,[R0, #+0]
   \   00000088   0x.... 0x....      LDR.W    R0,??DataTable3_7
   \   0000008C   0x6800             LDR      R0,[R0, #+0]
   \   0000008E   0x.... 0x....      BL       __aeabi_fmul
   \   00000092   0x4682             MOV      R10,R0
   \   00000094   0x.... 0x....      LDR.W    R0,??DataTable3_8
   \   00000098   0x6801             LDR      R1,[R0, #+0]
   \   0000009A   0x.... 0x....      LDR.W    R0,??DataTable3_9
   \   0000009E   0x6800             LDR      R0,[R0, #+0]
   \   000000A0   0x.... 0x....      BL       __aeabi_fmul
   \   000000A4   0x0001             MOVS     R1,R0
   \   000000A6   0x4650             MOV      R0,R10
   \   000000A8   0x.... 0x....      BL       __aeabi_fsub
   \   000000AC   0x9001             STR      R0,[SP, #+4]
    264                  halfvy = q01 * q11 + q21 * q31;
   \   000000AE   0x.... 0x....      LDR.W    R0,??DataTable3_8
   \   000000B2   0x6801             LDR      R1,[R0, #+0]
   \   000000B4   0x.... 0x....      LDR.W    R0,??DataTable3_6
   \   000000B8   0x6800             LDR      R0,[R0, #+0]
   \   000000BA   0x.... 0x....      BL       __aeabi_fmul
   \   000000BE   0x4682             MOV      R10,R0
   \   000000C0   0x.... 0x....      LDR.W    R0,??DataTable3_9
   \   000000C4   0x6801             LDR      R1,[R0, #+0]
   \   000000C6   0x.... 0x....      LDR.W    R0,??DataTable3_7
   \   000000CA   0x6800             LDR      R0,[R0, #+0]
   \   000000CC   0x.... 0x....      BL       __aeabi_fmul
   \   000000D0   0x4651             MOV      R1,R10
   \   000000D2   0x.... 0x....      BL       __aeabi_fadd
   \   000000D6   0x9000             STR      R0,[SP, #+0]
    265                  halfvz = q01 * q01 - 0.5f + q31 * q31;
   \   000000D8   0x.... 0x....      LDR.W    R0,??DataTable3_8
   \   000000DC   0x6801             LDR      R1,[R0, #+0]
   \   000000DE   0x.... 0x....      LDR.W    R0,??DataTable3_8
   \   000000E2   0x6800             LDR      R0,[R0, #+0]
   \   000000E4   0x.... 0x....      BL       __aeabi_fmul
   \   000000E8   0xF05F 0x413F      MOVS     R1,#-1090519040
   \   000000EC   0x.... 0x....      BL       __aeabi_fadd
   \   000000F0   0x4682             MOV      R10,R0
   \   000000F2   0x.... 0x....      LDR.W    R0,??DataTable3_7
   \   000000F6   0x6801             LDR      R1,[R0, #+0]
   \   000000F8   0x.... 0x....      LDR.W    R0,??DataTable3_7
   \   000000FC   0x6800             LDR      R0,[R0, #+0]
   \   000000FE   0x.... 0x....      BL       __aeabi_fmul
   \   00000102   0x4651             MOV      R1,R10
   \   00000104   0x.... 0x....      BL       __aeabi_fadd
   \   00000108   0x4683             MOV      R11,R0
    266          
    267                  // Error is sum of cross product between estimated and measured direction of gravity
    268                  halfex = (ay * halfvz - az * halfvy);
   \   0000010A   0x4640             MOV      R0,R8
   \   0000010C   0x4659             MOV      R1,R11
   \   0000010E   0x.... 0x....      BL       __aeabi_fmul
   \   00000112   0x4682             MOV      R10,R0
   \   00000114   0x9800             LDR      R0,[SP, #+0]
   \   00000116   0x4649             MOV      R1,R9
   \   00000118   0x.... 0x....      BL       __aeabi_fmul
   \   0000011C   0x0001             MOVS     R1,R0
   \   0000011E   0x4650             MOV      R0,R10
   \   00000120   0x.... 0x....      BL       __aeabi_fsub
   \   00000124   0x4682             MOV      R10,R0
    269                  halfey = (az * halfvx - ax * halfvz);
   \   00000126   0x9801             LDR      R0,[SP, #+4]
   \   00000128   0x4649             MOV      R1,R9
   \   0000012A   0x.... 0x....      BL       __aeabi_fmul
   \   0000012E   0x4681             MOV      R9,R0
   \   00000130   0x0038             MOVS     R0,R7
   \   00000132   0x4659             MOV      R1,R11
   \   00000134   0x.... 0x....      BL       __aeabi_fmul
   \   00000138   0x0001             MOVS     R1,R0
   \   0000013A   0x4648             MOV      R0,R9
   \   0000013C   0x.... 0x....      BL       __aeabi_fsub
   \   00000140   0x4681             MOV      R9,R0
    270                  halfez = (ax * halfvy - ay * halfvx);
   \   00000142   0x9800             LDR      R0,[SP, #+0]
   \   00000144   0x0039             MOVS     R1,R7
   \   00000146   0x.... 0x....      BL       __aeabi_fmul
   \   0000014A   0x0007             MOVS     R7,R0
   \   0000014C   0x9801             LDR      R0,[SP, #+4]
   \   0000014E   0x4641             MOV      R1,R8
   \   00000150   0x.... 0x....      BL       __aeabi_fmul
   \   00000154   0x0001             MOVS     R1,R0
   \   00000156   0x0038             MOVS     R0,R7
   \   00000158   0x.... 0x....      BL       __aeabi_fsub
   \   0000015C   0x0007             MOVS     R7,R0
    271          
    272                  // Compute and apply integral feedback if enabled
    273                  if(twoKi1 > 0.0f)
   \   0000015E   0x.... 0x....      LDR.W    R0,??DataTable3_10
   \   00000162   0x6800             LDR      R0,[R0, #+0]
   \   00000164   0x2100             MOVS     R1,#+0
   \   00000166   0x.... 0x....      BL       __aeabi_cfrcmple
   \   0000016A   0xD24B             BCS.N    ??MahonyAHRSupdateIMU1_2
    274                  {
    275                      integralFBx1 += twoKi1 * halfex * (1.0f / sampleFreq);	// integral error scaled by Ki
   \   0000016C   0x.... 0x....      LDR.W    R0,??DataTable3_10
   \   00000170   0x6800             LDR      R0,[R0, #+0]
   \   00000172   0x4651             MOV      R1,R10
   \   00000174   0x.... 0x....      BL       __aeabi_fmul
   \   00000178   0x.... 0x....      LDR.W    R1,??DataTable3_11  ;; 0x3b23d70a
   \   0000017C   0x.... 0x....      BL       __aeabi_fmul
   \   00000180   0x.... 0x....      LDR.W    R1,??DataTable3_12
   \   00000184   0x6809             LDR      R1,[R1, #+0]
   \   00000186   0x.... 0x....      BL       __aeabi_fadd
   \   0000018A   0x.... 0x....      LDR.W    R1,??DataTable3_12
   \   0000018E   0x6008             STR      R0,[R1, #+0]
    276                      integralFBy1 += twoKi1 * halfey * (1.0f / sampleFreq);
   \   00000190   0x.... 0x....      LDR.W    R0,??DataTable3_10
   \   00000194   0x6800             LDR      R0,[R0, #+0]
   \   00000196   0x4649             MOV      R1,R9
   \   00000198   0x.... 0x....      BL       __aeabi_fmul
   \   0000019C   0x.... 0x....      LDR.W    R1,??DataTable3_11  ;; 0x3b23d70a
   \   000001A0   0x.... 0x....      BL       __aeabi_fmul
   \   000001A4   0x.... 0x....      LDR.W    R1,??DataTable3_13
   \   000001A8   0x6809             LDR      R1,[R1, #+0]
   \   000001AA   0x.... 0x....      BL       __aeabi_fadd
   \   000001AE   0x.... 0x....      LDR.W    R1,??DataTable3_13
   \   000001B2   0x6008             STR      R0,[R1, #+0]
    277                      integralFBz1 += twoKi1 * halfez * (1.0f / sampleFreq);
   \   000001B4   0x.... 0x....      LDR.W    R0,??DataTable3_10
   \   000001B8   0x6800             LDR      R0,[R0, #+0]
   \   000001BA   0x0039             MOVS     R1,R7
   \   000001BC   0x.... 0x....      BL       __aeabi_fmul
   \   000001C0   0x.... 0x....      LDR.W    R1,??DataTable3_11  ;; 0x3b23d70a
   \   000001C4   0x.... 0x....      BL       __aeabi_fmul
   \   000001C8   0x.... 0x....      LDR.W    R1,??DataTable3_14
   \   000001CC   0x6809             LDR      R1,[R1, #+0]
   \   000001CE   0x.... 0x....      BL       __aeabi_fadd
   \   000001D2   0x.... 0x....      LDR.W    R1,??DataTable3_14
   \   000001D6   0x6008             STR      R0,[R1, #+0]
    278                      gx += integralFBx1;	// apply integral feedback
   \   000001D8   0x.... 0x....      LDR.W    R0,??DataTable3_12
   \   000001DC   0x6800             LDR      R0,[R0, #+0]
   \   000001DE   0x0021             MOVS     R1,R4
   \   000001E0   0x.... 0x....      BL       __aeabi_fadd
   \   000001E4   0x0004             MOVS     R4,R0
    279                      gy += integralFBy1;
   \   000001E6   0x.... 0x....      LDR.W    R0,??DataTable3_13
   \   000001EA   0x6800             LDR      R0,[R0, #+0]
   \   000001EC   0x0029             MOVS     R1,R5
   \   000001EE   0x.... 0x....      BL       __aeabi_fadd
   \   000001F2   0x0005             MOVS     R5,R0
    280                      gz += integralFBz1;
   \   000001F4   0x.... 0x....      LDR.W    R0,??DataTable3_14
   \   000001F8   0x6800             LDR      R0,[R0, #+0]
   \   000001FA   0x0031             MOVS     R1,R6
   \   000001FC   0x.... 0x....      BL       __aeabi_fadd
   \   00000200   0x0006             MOVS     R6,R0
   \   00000202   0xE00B             B.N      ??MahonyAHRSupdateIMU1_3
    281                  }
    282                  else
    283                  {
    284                      integralFBx1 = 0.0f;	// prevent integral windup
   \                     ??MahonyAHRSupdateIMU1_2:
   \   00000204   0x.... 0x....      LDR.W    R0,??DataTable3_12
   \   00000208   0x2100             MOVS     R1,#+0
   \   0000020A   0x6001             STR      R1,[R0, #+0]
    285                      integralFBy1 = 0.0f;
   \   0000020C   0x.... 0x....      LDR.W    R0,??DataTable3_13
   \   00000210   0x2100             MOVS     R1,#+0
   \   00000212   0x6001             STR      R1,[R0, #+0]
    286                      integralFBz1 = 0.0f;
   \   00000214   0x.... 0x....      LDR.W    R0,??DataTable3_14
   \   00000218   0x2100             MOVS     R1,#+0
   \   0000021A   0x6001             STR      R1,[R0, #+0]
    287                  }
    288          
    289                  // Apply proportional feedback
    290                  gx += twoKp1 * halfex;
   \                     ??MahonyAHRSupdateIMU1_3:
   \   0000021C   0x.... 0x....      LDR.W    R0,??DataTable3_15
   \   00000220   0x6800             LDR      R0,[R0, #+0]
   \   00000222   0x4651             MOV      R1,R10
   \   00000224   0x.... 0x....      BL       __aeabi_fmul
   \   00000228   0x0021             MOVS     R1,R4
   \   0000022A   0x.... 0x....      BL       __aeabi_fadd
   \   0000022E   0x0004             MOVS     R4,R0
    291                  gy += twoKp1 * halfey;
   \   00000230   0x.... 0x....      LDR.W    R0,??DataTable3_15
   \   00000234   0x6800             LDR      R0,[R0, #+0]
   \   00000236   0x4649             MOV      R1,R9
   \   00000238   0x.... 0x....      BL       __aeabi_fmul
   \   0000023C   0x0029             MOVS     R1,R5
   \   0000023E   0x.... 0x....      BL       __aeabi_fadd
   \   00000242   0x0005             MOVS     R5,R0
    292                  gz += twoKp1 * halfez;
   \   00000244   0x.... 0x....      LDR.W    R0,??DataTable3_15
   \   00000248   0x6800             LDR      R0,[R0, #+0]
   \   0000024A   0x0039             MOVS     R1,R7
   \   0000024C   0x.... 0x....      BL       __aeabi_fmul
   \   00000250   0x0031             MOVS     R1,R6
   \   00000252   0x.... 0x....      BL       __aeabi_fadd
   \   00000256   0x0006             MOVS     R6,R0
    293              }
    294          
    295              // Integrate rate of change of quaternion
    296              gx *= (0.5f * (1.0f / sampleFreq));		// pre-multiply common factors
   \                     ??MahonyAHRSupdateIMU1_1:
   \   00000258   0x....             LDR.N    R0,??DataTable3  ;; 0x3aa3d70a
   \   0000025A   0x0021             MOVS     R1,R4
   \   0000025C   0x.... 0x....      BL       __aeabi_fmul
   \   00000260   0x0004             MOVS     R4,R0
    297              gy *= (0.5f * (1.0f / sampleFreq));
   \   00000262   0x....             LDR.N    R0,??DataTable3  ;; 0x3aa3d70a
   \   00000264   0x0029             MOVS     R1,R5
   \   00000266   0x.... 0x....      BL       __aeabi_fmul
   \   0000026A   0x0005             MOVS     R5,R0
    298              gz *= (0.5f * (1.0f / sampleFreq));
   \   0000026C   0x....             LDR.N    R0,??DataTable3  ;; 0x3aa3d70a
   \   0000026E   0x0031             MOVS     R1,R6
   \   00000270   0x.... 0x....      BL       __aeabi_fmul
   \   00000274   0x0006             MOVS     R6,R0
    299              qa = q01;
   \   00000276   0x....             LDR.N    R0,??DataTable3_8
   \   00000278   0x6807             LDR      R7,[R0, #+0]
    300              qb = q11;
   \   0000027A   0x....             LDR.N    R0,??DataTable3_6
   \   0000027C   0xF8D0 0x8000      LDR      R8,[R0, #+0]
    301              qc = q21;
   \   00000280   0x....             LDR.N    R0,??DataTable3_9
   \   00000282   0xF8D0 0x9000      LDR      R9,[R0, #+0]
    302              q01 += (-qb * gx - qc * gy - q31 * gz);
   \   00000286   0x4640             MOV      R0,R8
   \   00000288   0xF090 0x4000      EORS     R0,R0,#0x80000000
   \   0000028C   0x0021             MOVS     R1,R4
   \   0000028E   0x.... 0x....      BL       __aeabi_fmul
   \   00000292   0x4682             MOV      R10,R0
   \   00000294   0x4648             MOV      R0,R9
   \   00000296   0x0029             MOVS     R1,R5
   \   00000298   0x.... 0x....      BL       __aeabi_fmul
   \   0000029C   0x0001             MOVS     R1,R0
   \   0000029E   0x4650             MOV      R0,R10
   \   000002A0   0x.... 0x....      BL       __aeabi_fsub
   \   000002A4   0x4682             MOV      R10,R0
   \   000002A6   0x....             LDR.N    R0,??DataTable3_7
   \   000002A8   0x6800             LDR      R0,[R0, #+0]
   \   000002AA   0x0031             MOVS     R1,R6
   \   000002AC   0x.... 0x....      BL       __aeabi_fmul
   \   000002B0   0x0001             MOVS     R1,R0
   \   000002B2   0x4650             MOV      R0,R10
   \   000002B4   0x.... 0x....      BL       __aeabi_fsub
   \   000002B8   0x....             LDR.N    R1,??DataTable3_8
   \   000002BA   0x6809             LDR      R1,[R1, #+0]
   \   000002BC   0x.... 0x....      BL       __aeabi_fadd
   \   000002C0   0x....             LDR.N    R1,??DataTable3_8
   \   000002C2   0x6008             STR      R0,[R1, #+0]
    303              q11 += (qa * gx + qc * gz - q31 * gy);
   \   000002C4   0x0038             MOVS     R0,R7
   \   000002C6   0x0021             MOVS     R1,R4
   \   000002C8   0x.... 0x....      BL       __aeabi_fmul
   \   000002CC   0x4682             MOV      R10,R0
   \   000002CE   0x4648             MOV      R0,R9
   \   000002D0   0x0031             MOVS     R1,R6
   \   000002D2   0x.... 0x....      BL       __aeabi_fmul
   \   000002D6   0x4651             MOV      R1,R10
   \   000002D8   0x.... 0x....      BL       __aeabi_fadd
   \   000002DC   0x4682             MOV      R10,R0
   \   000002DE   0x....             LDR.N    R0,??DataTable3_7
   \   000002E0   0x6800             LDR      R0,[R0, #+0]
   \   000002E2   0x0029             MOVS     R1,R5
   \   000002E4   0x.... 0x....      BL       __aeabi_fmul
   \   000002E8   0x0001             MOVS     R1,R0
   \   000002EA   0x4650             MOV      R0,R10
   \   000002EC   0x.... 0x....      BL       __aeabi_fsub
   \   000002F0   0x....             LDR.N    R1,??DataTable3_6
   \   000002F2   0x6809             LDR      R1,[R1, #+0]
   \   000002F4   0x.... 0x....      BL       __aeabi_fadd
   \   000002F8   0x....             LDR.N    R1,??DataTable3_6
   \   000002FA   0x6008             STR      R0,[R1, #+0]
    304              q21 += (qa * gy - qb * gz + q31 * gx);
   \   000002FC   0x0038             MOVS     R0,R7
   \   000002FE   0x0029             MOVS     R1,R5
   \   00000300   0x.... 0x....      BL       __aeabi_fmul
   \   00000304   0x4682             MOV      R10,R0
   \   00000306   0x4640             MOV      R0,R8
   \   00000308   0x0031             MOVS     R1,R6
   \   0000030A   0x.... 0x....      BL       __aeabi_fmul
   \   0000030E   0x0001             MOVS     R1,R0
   \   00000310   0x4650             MOV      R0,R10
   \   00000312   0x.... 0x....      BL       __aeabi_fsub
   \   00000316   0x4682             MOV      R10,R0
   \   00000318   0x....             LDR.N    R0,??DataTable3_7
   \   0000031A   0x6800             LDR      R0,[R0, #+0]
   \   0000031C   0x0021             MOVS     R1,R4
   \   0000031E   0x.... 0x....      BL       __aeabi_fmul
   \   00000322   0x4651             MOV      R1,R10
   \   00000324   0x.... 0x....      BL       __aeabi_fadd
   \   00000328   0x....             LDR.N    R1,??DataTable3_9
   \   0000032A   0x6809             LDR      R1,[R1, #+0]
   \   0000032C   0x.... 0x....      BL       __aeabi_fadd
   \   00000330   0x....             LDR.N    R1,??DataTable3_9
   \   00000332   0x6008             STR      R0,[R1, #+0]
    305              q31 += (qa * gz + qb * gy - qc * gx);
   \   00000334   0x0038             MOVS     R0,R7
   \   00000336   0x0031             MOVS     R1,R6
   \   00000338   0x.... 0x....      BL       __aeabi_fmul
   \   0000033C   0x0006             MOVS     R6,R0
   \   0000033E   0x4640             MOV      R0,R8
   \   00000340   0x0029             MOVS     R1,R5
   \   00000342   0x.... 0x....      BL       __aeabi_fmul
   \   00000346   0x0031             MOVS     R1,R6
   \   00000348   0x.... 0x....      BL       __aeabi_fadd
   \   0000034C   0x0005             MOVS     R5,R0
   \   0000034E   0x4648             MOV      R0,R9
   \   00000350   0x0021             MOVS     R1,R4
   \   00000352   0x.... 0x....      BL       __aeabi_fmul
   \   00000356   0x0001             MOVS     R1,R0
   \   00000358   0x0028             MOVS     R0,R5
   \   0000035A   0x.... 0x....      BL       __aeabi_fsub
   \   0000035E   0x....             LDR.N    R1,??DataTable3_7
   \   00000360   0x6809             LDR      R1,[R1, #+0]
   \   00000362   0x.... 0x....      BL       __aeabi_fadd
   \   00000366   0x....             LDR.N    R1,??DataTable3_7
   \   00000368   0x6008             STR      R0,[R1, #+0]
    306          
    307              // Normalise quaternion
    308              recipNorm = invSqrt(q01 * q01 + q11 * q11 + q21 * q21 + q31 * q31);
   \   0000036A   0x....             LDR.N    R0,??DataTable3_8
   \   0000036C   0x6801             LDR      R1,[R0, #+0]
   \   0000036E   0x....             LDR.N    R0,??DataTable3_8
   \   00000370   0x6800             LDR      R0,[R0, #+0]
   \   00000372   0x.... 0x....      BL       __aeabi_fmul
   \   00000376   0x0004             MOVS     R4,R0
   \   00000378   0x....             LDR.N    R0,??DataTable3_6
   \   0000037A   0x6801             LDR      R1,[R0, #+0]
   \   0000037C   0x....             LDR.N    R0,??DataTable3_6
   \   0000037E   0x6800             LDR      R0,[R0, #+0]
   \   00000380   0x.... 0x....      BL       __aeabi_fmul
   \   00000384   0x0021             MOVS     R1,R4
   \   00000386   0x.... 0x....      BL       __aeabi_fadd
   \   0000038A   0x0004             MOVS     R4,R0
   \   0000038C   0x....             LDR.N    R0,??DataTable3_9
   \   0000038E   0x6801             LDR      R1,[R0, #+0]
   \   00000390   0x....             LDR.N    R0,??DataTable3_9
   \   00000392   0x6800             LDR      R0,[R0, #+0]
   \   00000394   0x.... 0x....      BL       __aeabi_fmul
   \   00000398   0x0021             MOVS     R1,R4
   \   0000039A   0x.... 0x....      BL       __aeabi_fadd
   \   0000039E   0x0004             MOVS     R4,R0
   \   000003A0   0x....             LDR.N    R0,??DataTable3_7
   \   000003A2   0x6801             LDR      R1,[R0, #+0]
   \   000003A4   0x....             LDR.N    R0,??DataTable3_7
   \   000003A6   0x6800             LDR      R0,[R0, #+0]
   \   000003A8   0x.... 0x....      BL       __aeabi_fmul
   \   000003AC   0x0021             MOVS     R1,R4
   \   000003AE   0x.... 0x....      BL       __aeabi_fadd
   \   000003B2   0x.... 0x....      BL       invSqrt
   \   000003B6   0x4682             MOV      R10,R0
    309              q01 *= recipNorm;
   \   000003B8   0x....             LDR.N    R0,??DataTable3_8
   \   000003BA   0x6800             LDR      R0,[R0, #+0]
   \   000003BC   0x4651             MOV      R1,R10
   \   000003BE   0x.... 0x....      BL       __aeabi_fmul
   \   000003C2   0x....             LDR.N    R1,??DataTable3_8
   \   000003C4   0x6008             STR      R0,[R1, #+0]
    310              q11 *= recipNorm;
   \   000003C6   0x....             LDR.N    R0,??DataTable3_6
   \   000003C8   0x6800             LDR      R0,[R0, #+0]
   \   000003CA   0x4651             MOV      R1,R10
   \   000003CC   0x.... 0x....      BL       __aeabi_fmul
   \   000003D0   0x....             LDR.N    R1,??DataTable3_6
   \   000003D2   0x6008             STR      R0,[R1, #+0]
    311              q21 *= recipNorm;
   \   000003D4   0x....             LDR.N    R0,??DataTable3_9
   \   000003D6   0x6800             LDR      R0,[R0, #+0]
   \   000003D8   0x4651             MOV      R1,R10
   \   000003DA   0x.... 0x....      BL       __aeabi_fmul
   \   000003DE   0x....             LDR.N    R1,??DataTable3_9
   \   000003E0   0x6008             STR      R0,[R1, #+0]
    312              q31 *= recipNorm;
   \   000003E2   0x....             LDR.N    R0,??DataTable3_7
   \   000003E4   0x6800             LDR      R0,[R0, #+0]
   \   000003E6   0x4651             MOV      R1,R10
   \   000003E8   0x.... 0x....      BL       __aeabi_fmul
   \   000003EC   0x....             LDR.N    R1,??DataTable3_7
   \   000003EE   0x6008             STR      R0,[R1, #+0]
    313              
    314                  
    315                  r1 = 2 * q01 * q01 - 1 + 2 * q11 * q11;
   \   000003F0   0x....             LDR.N    R0,??DataTable3_8
   \   000003F2   0x6801             LDR      R1,[R0, #+0]
   \   000003F4   0xF05F 0x4080      MOVS     R0,#+1073741824
   \   000003F8   0x.... 0x....      BL       __aeabi_fmul
   \   000003FC   0x....             LDR.N    R1,??DataTable3_8
   \   000003FE   0x6809             LDR      R1,[R1, #+0]
   \   00000400   0x.... 0x....      BL       __aeabi_fmul
   \   00000404   0x....             LDR.N    R1,??DataTable3_1  ;; 0xbf800000
   \   00000406   0x.... 0x....      BL       __aeabi_fadd
   \   0000040A   0x0004             MOVS     R4,R0
   \   0000040C   0x....             LDR.N    R0,??DataTable3_6
   \   0000040E   0x6801             LDR      R1,[R0, #+0]
   \   00000410   0xF05F 0x4080      MOVS     R0,#+1073741824
   \   00000414   0x.... 0x....      BL       __aeabi_fmul
   \   00000418   0x....             LDR.N    R1,??DataTable3_6
   \   0000041A   0x6809             LDR      R1,[R1, #+0]
   \   0000041C   0x.... 0x....      BL       __aeabi_fmul
   \   00000420   0x0021             MOVS     R1,R4
   \   00000422   0x.... 0x....      BL       __aeabi_fadd
   \   00000426   0x0004             MOVS     R4,R0
    316                  r2 = 2 * (q11 * q21 - q01 * q31);
   \   00000428   0x....             LDR.N    R0,??DataTable3_6
   \   0000042A   0x6801             LDR      R1,[R0, #+0]
   \   0000042C   0x....             LDR.N    R0,??DataTable3_9
   \   0000042E   0x6800             LDR      R0,[R0, #+0]
   \   00000430   0x.... 0x....      BL       __aeabi_fmul
   \   00000434   0x0005             MOVS     R5,R0
   \   00000436   0x....             LDR.N    R0,??DataTable3_8
   \   00000438   0x6801             LDR      R1,[R0, #+0]
   \   0000043A   0x....             LDR.N    R0,??DataTable3_7
   \   0000043C   0x6800             LDR      R0,[R0, #+0]
   \   0000043E   0x.... 0x....      BL       __aeabi_fmul
   \   00000442   0x0001             MOVS     R1,R0
   \   00000444   0x0028             MOVS     R0,R5
   \   00000446   0x.... 0x....      BL       __aeabi_fsub
   \   0000044A   0xF05F 0x4180      MOVS     R1,#+1073741824
   \   0000044E   0x.... 0x....      BL       __aeabi_fmul
   \   00000452   0x0006             MOVS     R6,R0
    317                  r3 = 2 * (q11 * q31 + q01 * q21);
   \   00000454   0x....             LDR.N    R0,??DataTable3_6
   \   00000456   0x6801             LDR      R1,[R0, #+0]
   \   00000458   0x....             LDR.N    R0,??DataTable3_7
   \   0000045A   0x6800             LDR      R0,[R0, #+0]
   \   0000045C   0x.... 0x....      BL       __aeabi_fmul
   \   00000460   0x0005             MOVS     R5,R0
   \   00000462   0x....             LDR.N    R0,??DataTable3_8
   \   00000464   0x6801             LDR      R1,[R0, #+0]
   \   00000466   0x....             LDR.N    R0,??DataTable3_9
   \   00000468   0x6800             LDR      R0,[R0, #+0]
   \   0000046A   0x.... 0x....      BL       __aeabi_fmul
   \   0000046E   0x0029             MOVS     R1,R5
   \   00000470   0x.... 0x....      BL       __aeabi_fadd
   \   00000474   0xF05F 0x4180      MOVS     R1,#+1073741824
   \   00000478   0x.... 0x....      BL       __aeabi_fmul
   \   0000047C   0x0007             MOVS     R7,R0
    318                  r4 = 2 * (q21 * q31 - q01 * q11);
   \   0000047E   0x....             LDR.N    R0,??DataTable3_9
   \   00000480   0x6801             LDR      R1,[R0, #+0]
   \   00000482   0x....             LDR.N    R0,??DataTable3_7
   \   00000484   0x6800             LDR      R0,[R0, #+0]
   \   00000486   0x.... 0x....      BL       __aeabi_fmul
   \   0000048A   0x0005             MOVS     R5,R0
   \   0000048C   0x....             LDR.N    R0,??DataTable3_8
   \   0000048E   0x6801             LDR      R1,[R0, #+0]
   \   00000490   0x....             LDR.N    R0,??DataTable3_6
   \   00000492   0x6800             LDR      R0,[R0, #+0]
   \   00000494   0x.... 0x....      BL       __aeabi_fmul
   \   00000498   0x0001             MOVS     R1,R0
   \   0000049A   0x0028             MOVS     R0,R5
   \   0000049C   0x.... 0x....      BL       __aeabi_fsub
   \   000004A0   0xF05F 0x4180      MOVS     R1,#+1073741824
   \   000004A4   0x.... 0x....      BL       __aeabi_fmul
   \   000004A8   0x0005             MOVS     R5,R0
    319                  r5 = 2 * q01 * q01 - 1 + 2 * q31 * q31;
   \   000004AA   0x....             LDR.N    R0,??DataTable3_8
   \   000004AC   0x6801             LDR      R1,[R0, #+0]
   \   000004AE   0xF05F 0x4080      MOVS     R0,#+1073741824
   \   000004B2   0x.... 0x....      BL       __aeabi_fmul
   \   000004B6   0x....             LDR.N    R1,??DataTable3_8
   \   000004B8   0x6809             LDR      R1,[R1, #+0]
   \   000004BA   0x.... 0x....      BL       __aeabi_fmul
   \   000004BE   0x....             LDR.N    R1,??DataTable3_1  ;; 0xbf800000
   \   000004C0   0x.... 0x....      BL       __aeabi_fadd
   \   000004C4   0x4680             MOV      R8,R0
   \   000004C6   0x....             LDR.N    R0,??DataTable3_7
   \   000004C8   0x6801             LDR      R1,[R0, #+0]
   \   000004CA   0xF05F 0x4080      MOVS     R0,#+1073741824
   \   000004CE   0x.... 0x....      BL       __aeabi_fmul
   \   000004D2   0x....             LDR.N    R1,??DataTable3_7
   \   000004D4   0x6809             LDR      R1,[R1, #+0]
   \   000004D6   0x.... 0x....      BL       __aeabi_fmul
   \   000004DA   0x4641             MOV      R1,R8
   \   000004DC   0x.... 0x....      BL       __aeabi_fadd
    320                  Q_y1 =   -atan2(r4, r5) ;
   \   000004E0   0x.... 0x....      BL       __aeabi_f2d
   \   000004E4   0x0002             MOVS     R2,R0
   \   000004E6   0x000B             MOVS     R3,R1
   \   000004E8   0x4690             MOV      R8,R2
   \   000004EA   0x4699             MOV      R9,R3
   \   000004EC   0x0028             MOVS     R0,R5
   \   000004EE   0x.... 0x....      BL       __aeabi_f2d
   \   000004F2   0x4642             MOV      R2,R8
   \   000004F4   0x464B             MOV      R3,R9
   \   000004F6   0x.... 0x....      BL       atan2
   \   000004FA   0xF091 0x4100      EORS     R1,R1,#0x80000000
   \   000004FE   0x.... 0x....      BL       __aeabi_d2f
   \   00000502   0x....             LDR.N    R1,??DataTable3_16
   \   00000504   0x6008             STR      R0,[R1, #+0]
    321                  Q_z1 =  atan2(r2, r1) ;
   \   00000506   0x0020             MOVS     R0,R4
   \   00000508   0x.... 0x....      BL       __aeabi_f2d
   \   0000050C   0x0002             MOVS     R2,R0
   \   0000050E   0x000B             MOVS     R3,R1
   \   00000510   0x0014             MOVS     R4,R2
   \   00000512   0x001D             MOVS     R5,R3
   \   00000514   0x0030             MOVS     R0,R6
   \   00000516   0x.... 0x....      BL       __aeabi_f2d
   \   0000051A   0x0022             MOVS     R2,R4
   \   0000051C   0x002B             MOVS     R3,R5
   \   0000051E   0x.... 0x....      BL       atan2
   \   00000522   0x.... 0x....      BL       __aeabi_d2f
   \   00000526   0x....             LDR.N    R1,??DataTable3_17
   \   00000528   0x6008             STR      R0,[R1, #+0]
    322                  Q_x1 = asin(-2 * q11 * q31 + 2 * q01 * q21) ;
   \   0000052A   0x....             LDR.N    R0,??DataTable3_6
   \   0000052C   0x6801             LDR      R1,[R0, #+0]
   \   0000052E   0xF05F 0x4040      MOVS     R0,#-1073741824
   \   00000532   0x.... 0x....      BL       __aeabi_fmul
   \   00000536   0x....             LDR.N    R1,??DataTable3_7
   \   00000538   0x6809             LDR      R1,[R1, #+0]
   \   0000053A   0x.... 0x....      BL       __aeabi_fmul
   \   0000053E   0x0004             MOVS     R4,R0
   \   00000540   0x....             LDR.N    R0,??DataTable3_8
   \   00000542   0x6801             LDR      R1,[R0, #+0]
   \   00000544   0xF05F 0x4080      MOVS     R0,#+1073741824
   \   00000548   0x.... 0x....      BL       __aeabi_fmul
   \   0000054C   0x....             LDR.N    R1,??DataTable3_9
   \   0000054E   0x6809             LDR      R1,[R1, #+0]
   \   00000550   0x.... 0x....      BL       __aeabi_fmul
   \   00000554   0x0021             MOVS     R1,R4
   \   00000556   0x.... 0x....      BL       __aeabi_fadd
   \   0000055A   0x.... 0x....      BL       __aeabi_f2d
   \   0000055E   0x.... 0x....      BL       asin
   \   00000562   0x.... 0x....      BL       __aeabi_d2f
   \   00000566   0x....             LDR.N    R1,??DataTable3_18
   \   00000568   0x6008             STR      R0,[R1, #+0]
    323          
    324                      
    325          }
   \   0000056A   0xE8BD 0x8FF7      POP      {R0-R2,R4-R11,PC}  ;; return
    326          
    327          //---------------------------------------------------------------------------------------------------
    328          // Fast inverse square-root
    329          // See: http://en.wikipedia.org/wiki/Fast_inverse_square_root
    330          

   \                                 In section .text, align 2, keep-with-next
    331          float invSqrt(float x)
    332          {
   \                     invSqrt:
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
    333              float halfx = 0.5f * x;
   \   00000004   0xF05F 0x507C      MOVS     R0,#+1056964608
   \   00000008   0x0021             MOVS     R1,R4
   \   0000000A   0x.... 0x....      BL       __aeabi_fmul
    334              float y = x;
    335              long i = *(long *)&y;
    336              i = 0x5f3759df - (i >> 1);
   \   0000000E   0x....             LDR.N    R1,??DataTable3_19  ;; 0x5f3759df
   \   00000010   0xEBB1 0x0464      SUBS     R4,R1,R4, ASR #+1
    337              y = *(float *)&i;
    338              y = y * (1.5f - (halfx * y * y));
   \   00000014   0x0021             MOVS     R1,R4
   \   00000016   0x.... 0x....      BL       __aeabi_fmul
   \   0000001A   0x0021             MOVS     R1,R4
   \   0000001C   0x.... 0x....      BL       __aeabi_fmul
   \   00000020   0x0001             MOVS     R1,R0
   \   00000022   0xF05F 0x507F      MOVS     R0,#+1069547520
   \   00000026   0x.... 0x....      BL       __aeabi_fsub
   \   0000002A   0x0021             MOVS     R1,R4
   \   0000002C   0x.... 0x....      BL       __aeabi_fmul
   \   00000030   0x0004             MOVS     R4,R0
    339              return y;
   \   00000032   0x0020             MOVS     R0,R4
   \   00000034   0xBD10             POP      {R4,PC}          ;; return
    340          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1:
   \   00000000   0x........         DC32     q0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_1:
   \   00000000   0x........         DC32     q1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_2:
   \   00000000   0x........         DC32     q2

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_3:
   \   00000000   0x........         DC32     q3

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_4:
   \   00000000   0x........         DC32     twoKi

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_5:
   \   00000000   0x3B23D70A         DC32     0x3b23d70a

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_6:
   \   00000000   0x........         DC32     integralFBx

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_7:
   \   00000000   0x........         DC32     integralFBy

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_8:
   \   00000000   0x........         DC32     integralFBz

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2:
   \   00000000   0x........         DC32     twoKp

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3:
   \   00000000   0x3AA3D70A         DC32     0x3aa3d70a

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_1:
   \   00000000   0xBF800000         DC32     0xbf800000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_2:
   \   00000000   0x404CA666         DC32     0x404ca666

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_3:
   \   00000000   0x........         DC32     Q_x

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_4:
   \   00000000   0x........         DC32     Q_z

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_5:
   \   00000000   0x........         DC32     Q_y

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_6:
   \   00000000   0x........         DC32     q11

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_7:
   \   00000000   0x........         DC32     q31

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_8:
   \   00000000   0x........         DC32     q01

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_9:
   \   00000000   0x........         DC32     q21

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_10:
   \   00000000   0x........         DC32     twoKi1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_11:
   \   00000000   0x3B23D70A         DC32     0x3b23d70a

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_12:
   \   00000000   0x........         DC32     integralFBx1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_13:
   \   00000000   0x........         DC32     integralFBy1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_14:
   \   00000000   0x........         DC32     integralFBz1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_15:
   \   00000000   0x........         DC32     twoKp1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_16:
   \   00000000   0x........         DC32     Q_y1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_17:
   \   00000000   0x........         DC32     Q_z1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_18:
   \   00000000   0x........         DC32     Q_x1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_19:
   \   00000000   0x5F3759DF         DC32     0x5f3759df
    341          
    342          //====================================================================================================
    343          // END OF CODE
    344          //====================================================================================================

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      104  MahonyAHRSupdate
             104 -> MahonyAHRSupdateIMU
             104 -> __aeabi_cfcmpeq
             104 -> __aeabi_cfrcmple
             104 -> __aeabi_d2f
             104 -> __aeabi_f2d
             104 -> __aeabi_fadd
             104 -> __aeabi_fmul
             104 -> __aeabi_fsub
             104 -> invSqrt
             104 -> sqrt
       48  MahonyAHRSupdateIMU
              48 -> __aeabi_cfcmpeq
              48 -> __aeabi_cfrcmple
              48 -> __aeabi_d2f
              48 -> __aeabi_dmul
              48 -> __aeabi_f2d
              48 -> __aeabi_fadd
              48 -> __aeabi_fmul
              48 -> __aeabi_fsub
              48 -> asin
              48 -> atan2
              48 -> invSqrt
       48  MahonyAHRSupdateIMU1
              48 -> __aeabi_cfcmpeq
              48 -> __aeabi_cfrcmple
              48 -> __aeabi_d2f
              48 -> __aeabi_f2d
              48 -> __aeabi_fadd
              48 -> __aeabi_fmul
              48 -> __aeabi_fsub
              48 -> asin
              48 -> atan2
              48 -> invSqrt
        8  invSqrt
               8 -> __aeabi_fmul
               8 -> __aeabi_fsub


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable1
       4  ??DataTable1_1
       4  ??DataTable1_2
       4  ??DataTable1_3
       4  ??DataTable1_4
       4  ??DataTable1_5
       4  ??DataTable1_6
       4  ??DataTable1_7
       4  ??DataTable1_8
       4  ??DataTable2
       4  ??DataTable3
       4  ??DataTable3_1
       4  ??DataTable3_10
       4  ??DataTable3_11
       4  ??DataTable3_12
       4  ??DataTable3_13
       4  ??DataTable3_14
       4  ??DataTable3_15
       4  ??DataTable3_16
       4  ??DataTable3_17
       4  ??DataTable3_18
       4  ??DataTable3_19
       4  ??DataTable3_2
       4  ??DataTable3_3
       4  ??DataTable3_4
       4  ??DataTable3_5
       4  ??DataTable3_6
       4  ??DataTable3_7
       4  ??DataTable3_8
       4  ??DataTable3_9
       4  Angle_X
       4  Angle_X0
       4  Angle_Y
       4  Angle_Y0
       4  Angle_Z
       4  Angle_Z0
    1796  MahonyAHRSupdate
    1450  MahonyAHRSupdateIMU
    1390  MahonyAHRSupdateIMU1
       4  integralFBx
       4  integralFBx1
       4  integralFBy
       4  integralFBy1
       4  integralFBz
       4  integralFBz1
      54  invSqrt
       4  q0
       4  q01
       4  q1
       4  q11
       4  q2
       4  q21
       4  q3
       4  q31
       4  twoKi
       4  twoKi1
       4  twoKp
       4  twoKp1

 
    80 bytes in section .bss
    16 bytes in section .data
 4 810 bytes in section .text
 
 4 810 bytes of CODE memory
    96 bytes of DATA memory

Errors: none
Warnings: 2
