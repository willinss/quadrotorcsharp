###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.40.1.53790/W32 for ARM     03/Aug/2015  09:48:02 #
# Copyright 1999-2012 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  C:\Users\Thinkpad\Desktop\quadrotor150720飞行器跟随小车( #
#                    改I2C)\src\Sources\C\Component_C\Balance_Kalman.c        #
#    Command line =  "C:\Users\Thinkpad\Desktop\quadrotor150720飞行器跟随小车 #
#                    (改I2C)\src\Sources\C\Component_C\Balance_Kalman.c" -D   #
#                    IAR -D TWR_K60N512 -lCN "C:\Users\Thinkpad\Desktop\quadr #
#                    otor150720飞行器跟随小车(改I2C)\bin\Flash\List\" -lB     #
#                    "C:\Users\Thinkpad\Desktop\quadrotor150720飞行器跟随小车 #
#                    (改I2C)\bin\Flash\List\" -o                              #
#                    "C:\Users\Thinkpad\Desktop\quadrotor150720飞行器跟随小车 #
#                    (改I2C)\bin\Flash\Obj\" --no_cse --no_unroll             #
#                    --no_inline --no_code_motion --no_tbaa --no_clustering   #
#                    --no_scheduling --debug --endian=little --cpu=Cortex-M4  #
#                    -e --fpu=None --dlib_config "E:\Program Files\IAR        #
#                    Systems\Embedded Workbench 6.4\arm\INC\c\DLib_Config_Nor #
#                    mal.h" -I "C:\Users\Thinkpad\Desktop\quadrotor150720飞行 #
#                    器跟随小车(改I2C)\src\Sources\H\" -I                     #
#                    "C:\Users\Thinkpad\Desktop\quadrotor150720飞行器跟随小车 #
#                    (改I2C)\src\Sources\H\Component_H\" -I                   #
#                    "C:\Users\Thinkpad\Desktop\quadrotor150720飞行器跟随小车 #
#                    (改I2C)\src\Sources\H\Frame_H\" -Ol --use_c++_inline     #
#    List file    =  C:\Users\Thinkpad\Desktop\quadrotor150720飞行器跟随小车( #
#                    改I2C)\bin\Flash\List\Balance_Kalman.lst                 #
#    Object file  =  C:\Users\Thinkpad\Desktop\quadrotor150720飞行器跟随小车( #
#                    改I2C)\bin\Flash\Obj\Balance_Kalman.o                    #
#                                                                             #
#                                                                             #
###############################################################################

C:\Users\Thinkpad\Desktop\quadrotor150720飞行器跟随小车(改I2C)\src\Sources\C\Component_C\Balance_Kalman.c
      1          #include "pit.h"
      2          #include "Balance_Kalman.h"
      3          //*
      4          //-------------------------------------------------------
      5          //Kalman滤波，8MHz的处理时间约1.8ms；
      6          //-------------------------------------------------------

   \                                 In section .bss, align 4
      7          float angle, angle_dot; 		//外部需要引用的变量
   \                     angle:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     angle_dot:
   \   00000000                      DS8 4
      8          //-------------------------------------------------------

   \                                 In section .data, align 4
      9          float Q_angle=0.001, Q_gyro=0.003, R_angle=0.5, dt = 0.01;
   \                     Q_angle:
   \   00000000   0x3A83126F         DC32 3A83126FH

   \                                 In section .data, align 4
   \                     Q_gyro:
   \   00000000   0x3B449BA6         DC32 3B449BA6H

   \                                 In section .data, align 4
   \                     R_angle:
   \   00000000   0x3F000000         DC32 3F000000H

   \                                 In section .data, align 4
   \                     dt:
   \   00000000   0x3C23D70A         DC32 3C23D70AH
     10          /*R_angle =0.025 
     11          Q_angle =0.073
     12          Q_gyro  =0.00008
     13          dt=0.05
     14          */			//注意：dt的取值为kalman滤波器采样时间;

   \                                 In section .data, align 4
     15          float P[2][2] = {
   \                     P:
   \   00000000   0x3F800000         DC32 3F800000H, 0H, 0H, 3F800000H
   \              0x00000000   
   \              0x00000000   
   \              0x3F800000   
     16          							{ 1, 0 },
     17          							{ 0, 1 }
     18          						};
     19          	

   \                                 In section .bss, align 4
     20          float Pdot[4] ={0,0,0,0};
   \                     Pdot:
   \   00000000                      DS8 16
     21          

   \                                 In section .rodata, align 1
     22          const char C_0 = 1;
   \                     C_0:
   \   00000000   0x01               DC8 1
     23          

   \                                 In section .bss, align 4
     24          float q_bias, angle_err, PCt_0, PCt_1, E, K_0, K_1, t_0, t_1;
   \                     q_bias:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     angle_err:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     PCt_0:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     PCt_1:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     E:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     K_0:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     K_1:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     t_0:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     t_1:
   \   00000000                      DS8 4
     25          //-------------------------------------------------------
     26          

   \                                 In section .text, align 2, keep-with-next
     27          float Kalman_Filter(float angle_m,float gyro_m)			//gyro_m:gyro_measure
     28          {
   \                     Kalman_Filter:
   \   00000000   0xB530             PUSH     {R4,R5,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
     29          	angle+=(gyro_m-q_bias) * dt;//先验估计
   \   00000006   0x0028             MOVS     R0,R5
   \   00000008   0x.... 0x....      LDR.W    R1,??DataTable6
   \   0000000C   0x6809             LDR      R1,[R1, #+0]
   \   0000000E   0x.... 0x....      BL       __aeabi_fsub
   \   00000012   0x.... 0x....      LDR.W    R1,??DataTable6_1
   \   00000016   0x6809             LDR      R1,[R1, #+0]
   \   00000018   0x.... 0x....      BL       __aeabi_fmul
   \   0000001C   0x.... 0x....      LDR.W    R1,??DataTable6_2
   \   00000020   0x6809             LDR      R1,[R1, #+0]
   \   00000022   0x.... 0x....      BL       __aeabi_fadd
   \   00000026   0x.... 0x....      LDR.W    R1,??DataTable6_2
   \   0000002A   0x6008             STR      R0,[R1, #+0]
     30          	
     31          	Pdot[0]=Q_angle - P[0][1] - P[1][0];// Pk-' 先验估计误差协方差的微分
   \   0000002C   0x.... 0x....      LDR.W    R0,??DataTable6_3
   \   00000030   0x6800             LDR      R0,[R0, #+0]
   \   00000032   0x.... 0x....      LDR.W    R1,??DataTable6_4
   \   00000036   0x6849             LDR      R1,[R1, #+4]
   \   00000038   0x.... 0x....      BL       __aeabi_fsub
   \   0000003C   0x.... 0x....      LDR.W    R1,??DataTable6_4
   \   00000040   0x6889             LDR      R1,[R1, #+8]
   \   00000042   0x.... 0x....      BL       __aeabi_fsub
   \   00000046   0x.... 0x....      LDR.W    R1,??DataTable6_5
   \   0000004A   0x6008             STR      R0,[R1, #+0]
     32          	Pdot[1]=- P[1][1];
   \   0000004C   0x.... 0x....      LDR.W    R0,??DataTable6_5
   \   00000050   0x.... 0x....      LDR.W    R1,??DataTable6_4
   \   00000054   0x68C9             LDR      R1,[R1, #+12]
   \   00000056   0xF091 0x4100      EORS     R1,R1,#0x80000000
   \   0000005A   0x6041             STR      R1,[R0, #+4]
     33          	Pdot[2]=- P[1][1];
   \   0000005C   0x.... 0x....      LDR.W    R0,??DataTable6_5
   \   00000060   0x.... 0x....      LDR.W    R1,??DataTable6_4
   \   00000064   0x68C9             LDR      R1,[R1, #+12]
   \   00000066   0xF091 0x4100      EORS     R1,R1,#0x80000000
   \   0000006A   0x6081             STR      R1,[R0, #+8]
     34          	Pdot[3]=Q_gyro;
   \   0000006C   0x.... 0x....      LDR.W    R0,??DataTable6_5
   \   00000070   0x.... 0x....      LDR.W    R1,??DataTable6_6
   \   00000074   0x6809             LDR      R1,[R1, #+0]
   \   00000076   0x60C1             STR      R1,[R0, #+12]
     35          	
     36          	P[0][0] += Pdot[0] * dt;// Pk- 先验估计误差协方差微分的积分 = 先验估计误差协方差
   \   00000078   0x.... 0x....      LDR.W    R0,??DataTable6_5
   \   0000007C   0x6801             LDR      R1,[R0, #+0]
   \   0000007E   0x.... 0x....      LDR.W    R0,??DataTable6_1
   \   00000082   0x6800             LDR      R0,[R0, #+0]
   \   00000084   0x.... 0x....      BL       __aeabi_fmul
   \   00000088   0x.... 0x....      LDR.W    R1,??DataTable6_4
   \   0000008C   0x6809             LDR      R1,[R1, #+0]
   \   0000008E   0x.... 0x....      BL       __aeabi_fadd
   \   00000092   0x.... 0x....      LDR.W    R1,??DataTable6_4
   \   00000096   0x6008             STR      R0,[R1, #+0]
     37          	P[0][1] += Pdot[1] * dt;
   \   00000098   0x.... 0x....      LDR.W    R0,??DataTable6_5
   \   0000009C   0x6841             LDR      R1,[R0, #+4]
   \   0000009E   0x.... 0x....      LDR.W    R0,??DataTable6_1
   \   000000A2   0x6800             LDR      R0,[R0, #+0]
   \   000000A4   0x.... 0x....      BL       __aeabi_fmul
   \   000000A8   0x.... 0x....      LDR.W    R1,??DataTable6_4
   \   000000AC   0x6849             LDR      R1,[R1, #+4]
   \   000000AE   0x.... 0x....      BL       __aeabi_fadd
   \   000000B2   0x.... 0x....      LDR.W    R1,??DataTable6_4
   \   000000B6   0x6048             STR      R0,[R1, #+4]
     38          	P[1][0] += Pdot[2] * dt;
   \   000000B8   0x.... 0x....      LDR.W    R0,??DataTable6_5
   \   000000BC   0x6881             LDR      R1,[R0, #+8]
   \   000000BE   0x.... 0x....      LDR.W    R0,??DataTable6_1
   \   000000C2   0x6800             LDR      R0,[R0, #+0]
   \   000000C4   0x.... 0x....      BL       __aeabi_fmul
   \   000000C8   0x.... 0x....      LDR.W    R1,??DataTable6_4
   \   000000CC   0x6889             LDR      R1,[R1, #+8]
   \   000000CE   0x.... 0x....      BL       __aeabi_fadd
   \   000000D2   0x.... 0x....      LDR.W    R1,??DataTable6_4
   \   000000D6   0x6088             STR      R0,[R1, #+8]
     39          	P[1][1] += Pdot[3] * dt;
   \   000000D8   0x.... 0x....      LDR.W    R0,??DataTable6_5
   \   000000DC   0x68C1             LDR      R1,[R0, #+12]
   \   000000DE   0x.... 0x....      LDR.W    R0,??DataTable6_1
   \   000000E2   0x6800             LDR      R0,[R0, #+0]
   \   000000E4   0x.... 0x....      BL       __aeabi_fmul
   \   000000E8   0x.... 0x....      LDR.W    R1,??DataTable6_4
   \   000000EC   0x68C9             LDR      R1,[R1, #+12]
   \   000000EE   0x.... 0x....      BL       __aeabi_fadd
   \   000000F2   0x.... 0x....      LDR.W    R1,??DataTable6_4
   \   000000F6   0x60C8             STR      R0,[R1, #+12]
     40          	
     41          	
     42          	angle_err = angle_m - angle;//zk-先验估计
   \   000000F8   0x0020             MOVS     R0,R4
   \   000000FA   0x.... 0x....      LDR.W    R1,??DataTable6_2
   \   000000FE   0x6809             LDR      R1,[R1, #+0]
   \   00000100   0x.... 0x....      BL       __aeabi_fsub
   \   00000104   0x.... 0x....      LDR.W    R1,??DataTable6_7
   \   00000108   0x6008             STR      R0,[R1, #+0]
     43          	
     44          	
     45          	PCt_0 = C_0 * P[0][0];
   \   0000010A   0x.... 0x....      LDR.W    R0,??DataTable6_8
   \   0000010E   0x7800             LDRB     R0,[R0, #+0]
   \   00000110   0x.... 0x....      BL       __aeabi_ui2f
   \   00000114   0x.... 0x....      LDR.W    R1,??DataTable6_4
   \   00000118   0x6809             LDR      R1,[R1, #+0]
   \   0000011A   0x.... 0x....      BL       __aeabi_fmul
   \   0000011E   0x.... 0x....      LDR.W    R1,??DataTable6_9
   \   00000122   0x6008             STR      R0,[R1, #+0]
     46          	PCt_1 = C_0 * P[1][0];
   \   00000124   0x.... 0x....      LDR.W    R0,??DataTable6_8
   \   00000128   0x7800             LDRB     R0,[R0, #+0]
   \   0000012A   0x.... 0x....      BL       __aeabi_ui2f
   \   0000012E   0x.... 0x....      LDR.W    R1,??DataTable6_4
   \   00000132   0x6889             LDR      R1,[R1, #+8]
   \   00000134   0x.... 0x....      BL       __aeabi_fmul
   \   00000138   0x.... 0x....      LDR.W    R1,??DataTable6_10
   \   0000013C   0x6008             STR      R0,[R1, #+0]
     47          	
     48          	E = R_angle + C_0 * PCt_0;
   \   0000013E   0x.... 0x....      LDR.W    R0,??DataTable6_8
   \   00000142   0x7800             LDRB     R0,[R0, #+0]
   \   00000144   0x.... 0x....      BL       __aeabi_ui2f
   \   00000148   0x.... 0x....      LDR.W    R1,??DataTable6_9
   \   0000014C   0x6809             LDR      R1,[R1, #+0]
   \   0000014E   0x.... 0x....      BL       __aeabi_fmul
   \   00000152   0x.... 0x....      LDR.W    R1,??DataTable6_11
   \   00000156   0x6809             LDR      R1,[R1, #+0]
   \   00000158   0x.... 0x....      BL       __aeabi_fadd
   \   0000015C   0x.... 0x....      LDR.W    R1,??DataTable6_12
   \   00000160   0x6008             STR      R0,[R1, #+0]
     49          	
     50          	K_0 = PCt_0 / E;//Kk
   \   00000162   0x.... 0x....      LDR.W    R0,??DataTable6_9
   \   00000166   0x6800             LDR      R0,[R0, #+0]
   \   00000168   0x.... 0x....      LDR.W    R1,??DataTable6_12
   \   0000016C   0x6809             LDR      R1,[R1, #+0]
   \   0000016E   0x.... 0x....      BL       __aeabi_fdiv
   \   00000172   0x.... 0x....      LDR.W    R1,??DataTable6_13
   \   00000176   0x6008             STR      R0,[R1, #+0]
     51          	K_1 = PCt_1 / E;
   \   00000178   0x.... 0x....      LDR.W    R0,??DataTable6_10
   \   0000017C   0x6800             LDR      R0,[R0, #+0]
   \   0000017E   0x.... 0x....      LDR.W    R1,??DataTable6_12
   \   00000182   0x6809             LDR      R1,[R1, #+0]
   \   00000184   0x.... 0x....      BL       __aeabi_fdiv
   \   00000188   0x.... 0x....      LDR.W    R1,??DataTable6_14
   \   0000018C   0x6008             STR      R0,[R1, #+0]
     52          	
     53          	t_0 = PCt_0;
   \   0000018E   0x.... 0x....      LDR.W    R0,??DataTable6_15
   \   00000192   0x.... 0x....      LDR.W    R1,??DataTable6_9
   \   00000196   0x6809             LDR      R1,[R1, #+0]
   \   00000198   0x6001             STR      R1,[R0, #+0]
     54          	t_1 = C_0 * P[0][1];
   \   0000019A   0x.... 0x....      LDR.W    R0,??DataTable6_8
   \   0000019E   0x7800             LDRB     R0,[R0, #+0]
   \   000001A0   0x.... 0x....      BL       __aeabi_ui2f
   \   000001A4   0x.... 0x....      LDR.W    R1,??DataTable6_4
   \   000001A8   0x6849             LDR      R1,[R1, #+4]
   \   000001AA   0x.... 0x....      BL       __aeabi_fmul
   \   000001AE   0x.... 0x....      LDR.W    R1,??DataTable6_16
   \   000001B2   0x6008             STR      R0,[R1, #+0]
     55          
     56          	P[0][0] -= K_0 * t_0;//后验估计误差协方差
   \   000001B4   0x.... 0x....      LDR.W    R0,??DataTable6_13
   \   000001B8   0x6801             LDR      R1,[R0, #+0]
   \   000001BA   0x.... 0x....      LDR.W    R0,??DataTable6_15
   \   000001BE   0x6800             LDR      R0,[R0, #+0]
   \   000001C0   0x.... 0x....      BL       __aeabi_fmul
   \   000001C4   0x0001             MOVS     R1,R0
   \   000001C6   0x.... 0x....      LDR.W    R0,??DataTable6_4
   \   000001CA   0x6800             LDR      R0,[R0, #+0]
   \   000001CC   0x.... 0x....      BL       __aeabi_fsub
   \   000001D0   0x.... 0x....      LDR.W    R1,??DataTable6_4
   \   000001D4   0x6008             STR      R0,[R1, #+0]
     57          	P[0][1] -= K_0 * t_1;
   \   000001D6   0x.... 0x....      LDR.W    R0,??DataTable6_13
   \   000001DA   0x6801             LDR      R1,[R0, #+0]
   \   000001DC   0x.... 0x....      LDR.W    R0,??DataTable6_16
   \   000001E0   0x6800             LDR      R0,[R0, #+0]
   \   000001E2   0x.... 0x....      BL       __aeabi_fmul
   \   000001E6   0x0001             MOVS     R1,R0
   \   000001E8   0x.... 0x....      LDR.W    R0,??DataTable6_4
   \   000001EC   0x6840             LDR      R0,[R0, #+4]
   \   000001EE   0x.... 0x....      BL       __aeabi_fsub
   \   000001F2   0x.... 0x....      LDR.W    R1,??DataTable6_4
   \   000001F6   0x6048             STR      R0,[R1, #+4]
     58          	P[1][0] -= K_1 * t_0;
   \   000001F8   0x.... 0x....      LDR.W    R0,??DataTable6_14
   \   000001FC   0x6801             LDR      R1,[R0, #+0]
   \   000001FE   0x.... 0x....      LDR.W    R0,??DataTable6_15
   \   00000202   0x6800             LDR      R0,[R0, #+0]
   \   00000204   0x.... 0x....      BL       __aeabi_fmul
   \   00000208   0x0001             MOVS     R1,R0
   \   0000020A   0x.... 0x....      LDR.W    R0,??DataTable6_4
   \   0000020E   0x6880             LDR      R0,[R0, #+8]
   \   00000210   0x.... 0x....      BL       __aeabi_fsub
   \   00000214   0x.... 0x....      LDR.W    R1,??DataTable6_4
   \   00000218   0x6088             STR      R0,[R1, #+8]
     59          	P[1][1] -= K_1 * t_1;
   \   0000021A   0x.... 0x....      LDR.W    R0,??DataTable6_14
   \   0000021E   0x6801             LDR      R1,[R0, #+0]
   \   00000220   0x.... 0x....      LDR.W    R0,??DataTable6_16
   \   00000224   0x6800             LDR      R0,[R0, #+0]
   \   00000226   0x.... 0x....      BL       __aeabi_fmul
   \   0000022A   0x0001             MOVS     R1,R0
   \   0000022C   0x.... 0x....      LDR.W    R0,??DataTable6_4
   \   00000230   0x68C0             LDR      R0,[R0, #+12]
   \   00000232   0x.... 0x....      BL       __aeabi_fsub
   \   00000236   0x.... 0x....      LDR.W    R1,??DataTable6_4
   \   0000023A   0x60C8             STR      R0,[R1, #+12]
     60          	
     61          	
     62          	angle	+= K_0 * angle_err;//后验估计
   \   0000023C   0x.... 0x....      LDR.W    R0,??DataTable6_13
   \   00000240   0x6801             LDR      R1,[R0, #+0]
   \   00000242   0x.... 0x....      LDR.W    R0,??DataTable6_7
   \   00000246   0x6800             LDR      R0,[R0, #+0]
   \   00000248   0x.... 0x....      BL       __aeabi_fmul
   \   0000024C   0x.... 0x....      LDR.W    R1,??DataTable6_2
   \   00000250   0x6809             LDR      R1,[R1, #+0]
   \   00000252   0x.... 0x....      BL       __aeabi_fadd
   \   00000256   0x.... 0x....      LDR.W    R1,??DataTable6_2
   \   0000025A   0x6008             STR      R0,[R1, #+0]
     63          	q_bias	+= K_1 * angle_err;//后验估计
   \   0000025C   0x.... 0x....      LDR.W    R0,??DataTable6_14
   \   00000260   0x6801             LDR      R1,[R0, #+0]
   \   00000262   0x.... 0x....      LDR.W    R0,??DataTable6_7
   \   00000266   0x6800             LDR      R0,[R0, #+0]
   \   00000268   0x.... 0x....      BL       __aeabi_fmul
   \   0000026C   0x.... 0x....      LDR.W    R1,??DataTable6
   \   00000270   0x6809             LDR      R1,[R1, #+0]
   \   00000272   0x.... 0x....      BL       __aeabi_fadd
   \   00000276   0x.... 0x....      LDR.W    R1,??DataTable6
   \   0000027A   0x6008             STR      R0,[R1, #+0]
     64          	angle_dot = gyro_m-q_bias;//输出值（后验估计）的微分 = 角速度
   \   0000027C   0x0028             MOVS     R0,R5
   \   0000027E   0x.... 0x....      LDR.W    R1,??DataTable6
   \   00000282   0x6809             LDR      R1,[R1, #+0]
   \   00000284   0x.... 0x....      BL       __aeabi_fsub
   \   00000288   0x.... 0x....      LDR.W    R1,??DataTable6_17
   \   0000028C   0x6008             STR      R0,[R1, #+0]
     65                  return angle;
   \   0000028E   0x.... 0x....      LDR.W    R0,??DataTable6_2
   \   00000292   0x6800             LDR      R0,[R0, #+0]
   \   00000294   0xBD30             POP      {R4,R5,PC}       ;; return
     66          }
     67          
     68          
     69          
     70          

   \                                 In section .bss, align 4
     71          float angle1, angle_dot1; 		//外部需要引用的变量
   \                     angle1:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     angle_dot1:
   \   00000000                      DS8 4
     72          //-------------------------------------------------------

   \                                 In section .data, align 4
     73          float Q_angle1=0.001, Q_gyro1=0.003, R_angle1=0.5, dt1 = 0.01;
   \                     Q_angle1:
   \   00000000   0x3A83126F         DC32 3A83126FH

   \                                 In section .data, align 4
   \                     Q_gyro1:
   \   00000000   0x3B449BA6         DC32 3B449BA6H

   \                                 In section .data, align 4
   \                     R_angle1:
   \   00000000   0x3F000000         DC32 3F000000H

   \                                 In section .data, align 4
   \                     dt1:
   \   00000000   0x3C23D70A         DC32 3C23D70AH
     74          			//注意：dt的取值为kalman滤波器采样时间;

   \                                 In section .data, align 4
     75          float P1[2][2] = {
   \                     `P1`:
   \   00000000   0x3F800000         DC32 3F800000H, 0H, 0H, 3F800000H
   \              0x00000000   
   \              0x00000000   
   \              0x3F800000   
     76          							{ 1, 0 },
     77          							{ 0, 1 }
     78          						};
     79          	

   \                                 In section .bss, align 4
     80          float Pdot1[4] ={0,0,0,0};
   \                     Pdot1:
   \   00000000                      DS8 16
     81          

   \                                 In section .rodata, align 1
     82          const char C_01 = 1;
   \                     C_01:
   \   00000000   0x01               DC8 1
     83          

   \                                 In section .bss, align 4
     84          float q_bias1, angle_err1, PCt_01, PCt_11, E1, K_01, K_11, t_01, t_11;
   \                     q_bias1:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     angle_err1:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     PCt_01:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     PCt_11:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     E1:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     K_01:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     K_11:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     t_01:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     t_11:
   \   00000000                      DS8 4
     85          //-------------------------------------------------------
     86          

   \                                 In section .text, align 2, keep-with-next
     87          float Kalman_Filter1(float angle_m1,float gyro_m1)			//gyro_m:gyro_measure
     88          {
   \                     Kalman_Filter1:
   \   00000000   0xB530             PUSH     {R4,R5,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x000D             MOVS     R5,R1
     89          	angle1+=(gyro_m1-q_bias1) * dt1;//先验估计
   \   00000006   0x0028             MOVS     R0,R5
   \   00000008   0x.... 0x....      LDR.W    R1,??DataTable6_18
   \   0000000C   0x6809             LDR      R1,[R1, #+0]
   \   0000000E   0x.... 0x....      BL       __aeabi_fsub
   \   00000012   0x.... 0x....      LDR.W    R1,??DataTable6_19
   \   00000016   0x6809             LDR      R1,[R1, #+0]
   \   00000018   0x.... 0x....      BL       __aeabi_fmul
   \   0000001C   0x.... 0x....      LDR.W    R1,??DataTable6_20
   \   00000020   0x6809             LDR      R1,[R1, #+0]
   \   00000022   0x.... 0x....      BL       __aeabi_fadd
   \   00000026   0x.... 0x....      LDR.W    R1,??DataTable6_20
   \   0000002A   0x6008             STR      R0,[R1, #+0]
     90          	
     91          	Pdot1[0]=Q_angle1 - P1[0][1] - P1[1][0];// Pk-' 先验估计误差协方差的微分
   \   0000002C   0x.... 0x....      LDR.W    R0,??DataTable6_21
   \   00000030   0x6800             LDR      R0,[R0, #+0]
   \   00000032   0x.... 0x....      LDR.W    R1,??DataTable6_22
   \   00000036   0x6849             LDR      R1,[R1, #+4]
   \   00000038   0x.... 0x....      BL       __aeabi_fsub
   \   0000003C   0x.... 0x....      LDR.W    R1,??DataTable6_22
   \   00000040   0x6889             LDR      R1,[R1, #+8]
   \   00000042   0x.... 0x....      BL       __aeabi_fsub
   \   00000046   0x.... 0x....      LDR.W    R1,??DataTable6_23
   \   0000004A   0x6008             STR      R0,[R1, #+0]
     92          	Pdot1[1]=- P1[1][1];
   \   0000004C   0x.... 0x....      LDR.W    R0,??DataTable6_23
   \   00000050   0x.... 0x....      LDR.W    R1,??DataTable6_22
   \   00000054   0x68C9             LDR      R1,[R1, #+12]
   \   00000056   0xF091 0x4100      EORS     R1,R1,#0x80000000
   \   0000005A   0x6041             STR      R1,[R0, #+4]
     93          	Pdot1[2]=- P1[1][1];
   \   0000005C   0x.... 0x....      LDR.W    R0,??DataTable6_23
   \   00000060   0x.... 0x....      LDR.W    R1,??DataTable6_22
   \   00000064   0x68C9             LDR      R1,[R1, #+12]
   \   00000066   0xF091 0x4100      EORS     R1,R1,#0x80000000
   \   0000006A   0x6081             STR      R1,[R0, #+8]
     94          	Pdot1[3]=Q_gyro1;
   \   0000006C   0x.... 0x....      LDR.W    R0,??DataTable6_23
   \   00000070   0x.... 0x....      LDR.W    R1,??DataTable6_24
   \   00000074   0x6809             LDR      R1,[R1, #+0]
   \   00000076   0x60C1             STR      R1,[R0, #+12]
     95          	
     96          	P1[0][0] += Pdot1[0] * dt1;// Pk- 先验估计误差协方差微分的积分 = 先验估计误差协方差
   \   00000078   0x.... 0x....      LDR.W    R0,??DataTable6_23
   \   0000007C   0x6801             LDR      R1,[R0, #+0]
   \   0000007E   0x.... 0x....      LDR.W    R0,??DataTable6_19
   \   00000082   0x6800             LDR      R0,[R0, #+0]
   \   00000084   0x.... 0x....      BL       __aeabi_fmul
   \   00000088   0x.... 0x....      LDR.W    R1,??DataTable6_22
   \   0000008C   0x6809             LDR      R1,[R1, #+0]
   \   0000008E   0x.... 0x....      BL       __aeabi_fadd
   \   00000092   0x.... 0x....      LDR.W    R1,??DataTable6_22
   \   00000096   0x6008             STR      R0,[R1, #+0]
     97          	P1[0][1] += Pdot1[1] * dt1;
   \   00000098   0x.... 0x....      LDR.W    R0,??DataTable6_23
   \   0000009C   0x6841             LDR      R1,[R0, #+4]
   \   0000009E   0x.... 0x....      LDR.W    R0,??DataTable6_19
   \   000000A2   0x6800             LDR      R0,[R0, #+0]
   \   000000A4   0x.... 0x....      BL       __aeabi_fmul
   \   000000A8   0x.... 0x....      LDR.W    R1,??DataTable6_22
   \   000000AC   0x6849             LDR      R1,[R1, #+4]
   \   000000AE   0x.... 0x....      BL       __aeabi_fadd
   \   000000B2   0x.... 0x....      LDR.W    R1,??DataTable6_22
   \   000000B6   0x6048             STR      R0,[R1, #+4]
     98          	P1[1][0] += Pdot1[2] * dt1;
   \   000000B8   0x.... 0x....      LDR.W    R0,??DataTable6_23
   \   000000BC   0x6881             LDR      R1,[R0, #+8]
   \   000000BE   0x.... 0x....      LDR.W    R0,??DataTable6_19
   \   000000C2   0x6800             LDR      R0,[R0, #+0]
   \   000000C4   0x.... 0x....      BL       __aeabi_fmul
   \   000000C8   0x.... 0x....      LDR.W    R1,??DataTable6_22
   \   000000CC   0x6889             LDR      R1,[R1, #+8]
   \   000000CE   0x.... 0x....      BL       __aeabi_fadd
   \   000000D2   0x.... 0x....      LDR.W    R1,??DataTable6_22
   \   000000D6   0x6088             STR      R0,[R1, #+8]
     99          	P1[1][1] += Pdot1[3] * dt1;
   \   000000D8   0x.... 0x....      LDR.W    R0,??DataTable6_23
   \   000000DC   0x68C1             LDR      R1,[R0, #+12]
   \   000000DE   0x.... 0x....      LDR.W    R0,??DataTable6_19
   \   000000E2   0x6800             LDR      R0,[R0, #+0]
   \   000000E4   0x.... 0x....      BL       __aeabi_fmul
   \   000000E8   0x.... 0x....      LDR.W    R1,??DataTable6_22
   \   000000EC   0x68C9             LDR      R1,[R1, #+12]
   \   000000EE   0x.... 0x....      BL       __aeabi_fadd
   \   000000F2   0x.... 0x....      LDR.W    R1,??DataTable6_22
   \   000000F6   0x60C8             STR      R0,[R1, #+12]
    100          	
    101          	
    102          	angle_err1 = angle_m1 - angle1;//zk-先验估计
   \   000000F8   0x0020             MOVS     R0,R4
   \   000000FA   0x.... 0x....      LDR.W    R1,??DataTable6_20
   \   000000FE   0x6809             LDR      R1,[R1, #+0]
   \   00000100   0x.... 0x....      BL       __aeabi_fsub
   \   00000104   0x.... 0x....      LDR.W    R1,??DataTable6_25
   \   00000108   0x6008             STR      R0,[R1, #+0]
    103          	
    104          	
    105          	PCt_01 = C_01 * P1[0][0];
   \   0000010A   0x.... 0x....      LDR.W    R0,??DataTable6_26
   \   0000010E   0x7800             LDRB     R0,[R0, #+0]
   \   00000110   0x.... 0x....      BL       __aeabi_ui2f
   \   00000114   0x.... 0x....      LDR.W    R1,??DataTable6_22
   \   00000118   0x6809             LDR      R1,[R1, #+0]
   \   0000011A   0x.... 0x....      BL       __aeabi_fmul
   \   0000011E   0x.... 0x....      LDR.W    R1,??DataTable6_27
   \   00000122   0x6008             STR      R0,[R1, #+0]
    106          	PCt_11 = C_01 * P1[1][0];
   \   00000124   0x.... 0x....      LDR.W    R0,??DataTable6_26
   \   00000128   0x7800             LDRB     R0,[R0, #+0]
   \   0000012A   0x.... 0x....      BL       __aeabi_ui2f
   \   0000012E   0x.... 0x....      LDR.W    R1,??DataTable6_22
   \   00000132   0x6889             LDR      R1,[R1, #+8]
   \   00000134   0x.... 0x....      BL       __aeabi_fmul
   \   00000138   0x.... 0x....      LDR.W    R1,??DataTable6_28
   \   0000013C   0x6008             STR      R0,[R1, #+0]
    107          	
    108          	E1 = R_angle1 + C_01 * PCt_01;
   \   0000013E   0x.... 0x....      LDR.W    R0,??DataTable6_26
   \   00000142   0x7800             LDRB     R0,[R0, #+0]
   \   00000144   0x.... 0x....      BL       __aeabi_ui2f
   \   00000148   0x.... 0x....      LDR.W    R1,??DataTable6_27
   \   0000014C   0x6809             LDR      R1,[R1, #+0]
   \   0000014E   0x.... 0x....      BL       __aeabi_fmul
   \   00000152   0x.... 0x....      LDR.W    R1,??DataTable6_29
   \   00000156   0x6809             LDR      R1,[R1, #+0]
   \   00000158   0x.... 0x....      BL       __aeabi_fadd
   \   0000015C   0x.... 0x....      LDR.W    R1,??DataTable6_30
   \   00000160   0x6008             STR      R0,[R1, #+0]
    109          	
    110          	K_01 = PCt_01 / E1;//Kk
   \   00000162   0x.... 0x....      LDR.W    R0,??DataTable6_27
   \   00000166   0x6800             LDR      R0,[R0, #+0]
   \   00000168   0x.... 0x....      LDR.W    R1,??DataTable6_30
   \   0000016C   0x6809             LDR      R1,[R1, #+0]
   \   0000016E   0x.... 0x....      BL       __aeabi_fdiv
   \   00000172   0x.... 0x....      LDR.W    R1,??DataTable6_31
   \   00000176   0x6008             STR      R0,[R1, #+0]
    111          	K_11 = PCt_11 / E1;
   \   00000178   0x.... 0x....      LDR.W    R0,??DataTable6_28
   \   0000017C   0x6800             LDR      R0,[R0, #+0]
   \   0000017E   0x.... 0x....      LDR.W    R1,??DataTable6_30
   \   00000182   0x6809             LDR      R1,[R1, #+0]
   \   00000184   0x.... 0x....      BL       __aeabi_fdiv
   \   00000188   0x.... 0x....      LDR.W    R1,??DataTable6_32
   \   0000018C   0x6008             STR      R0,[R1, #+0]
    112          	
    113          	t_01 = PCt_01;
   \   0000018E   0x.... 0x....      LDR.W    R0,??DataTable6_33
   \   00000192   0x.... 0x....      LDR.W    R1,??DataTable6_27
   \   00000196   0x6809             LDR      R1,[R1, #+0]
   \   00000198   0x6001             STR      R1,[R0, #+0]
    114          	t_11 = C_01 * P1[0][1];
   \   0000019A   0x.... 0x....      LDR.W    R0,??DataTable6_26
   \   0000019E   0x7800             LDRB     R0,[R0, #+0]
   \   000001A0   0x.... 0x....      BL       __aeabi_ui2f
   \   000001A4   0x.... 0x....      LDR.W    R1,??DataTable6_22
   \   000001A8   0x6849             LDR      R1,[R1, #+4]
   \   000001AA   0x.... 0x....      BL       __aeabi_fmul
   \   000001AE   0x.... 0x....      LDR.W    R1,??DataTable6_34
   \   000001B2   0x6008             STR      R0,[R1, #+0]
    115          
    116          	P1[0][0] -= K_01 * t_01;//后验估计误差协方差
   \   000001B4   0x.... 0x....      LDR.W    R0,??DataTable6_31
   \   000001B8   0x6801             LDR      R1,[R0, #+0]
   \   000001BA   0x.... 0x....      LDR.W    R0,??DataTable6_33
   \   000001BE   0x6800             LDR      R0,[R0, #+0]
   \   000001C0   0x.... 0x....      BL       __aeabi_fmul
   \   000001C4   0x0001             MOVS     R1,R0
   \   000001C6   0x.... 0x....      LDR.W    R0,??DataTable6_22
   \   000001CA   0x6800             LDR      R0,[R0, #+0]
   \   000001CC   0x.... 0x....      BL       __aeabi_fsub
   \   000001D0   0x.... 0x....      LDR.W    R1,??DataTable6_22
   \   000001D4   0x6008             STR      R0,[R1, #+0]
    117          	P1[0][1] -= K_01 * t_11;
   \   000001D6   0x.... 0x....      LDR.W    R0,??DataTable6_31
   \   000001DA   0x6801             LDR      R1,[R0, #+0]
   \   000001DC   0x.... 0x....      LDR.W    R0,??DataTable6_34
   \   000001E0   0x6800             LDR      R0,[R0, #+0]
   \   000001E2   0x.... 0x....      BL       __aeabi_fmul
   \   000001E6   0x0001             MOVS     R1,R0
   \   000001E8   0x.... 0x....      LDR.W    R0,??DataTable6_22
   \   000001EC   0x6840             LDR      R0,[R0, #+4]
   \   000001EE   0x.... 0x....      BL       __aeabi_fsub
   \   000001F2   0x.... 0x....      LDR.W    R1,??DataTable6_22
   \   000001F6   0x6048             STR      R0,[R1, #+4]
    118          	P1[1][0] -= K_11 * t_01;
   \   000001F8   0x.... 0x....      LDR.W    R0,??DataTable6_32
   \   000001FC   0x6801             LDR      R1,[R0, #+0]
   \   000001FE   0x.... 0x....      LDR.W    R0,??DataTable6_33
   \   00000202   0x6800             LDR      R0,[R0, #+0]
   \   00000204   0x.... 0x....      BL       __aeabi_fmul
   \   00000208   0x0001             MOVS     R1,R0
   \   0000020A   0x.... 0x....      LDR.W    R0,??DataTable6_22
   \   0000020E   0x6880             LDR      R0,[R0, #+8]
   \   00000210   0x.... 0x....      BL       __aeabi_fsub
   \   00000214   0x.... 0x....      LDR.W    R1,??DataTable6_22
   \   00000218   0x6088             STR      R0,[R1, #+8]
    119          	P1[1][1] -= K_11 * t_11;
   \   0000021A   0x.... 0x....      LDR.W    R0,??DataTable6_32
   \   0000021E   0x6801             LDR      R1,[R0, #+0]
   \   00000220   0x.... 0x....      LDR.W    R0,??DataTable6_34
   \   00000224   0x6800             LDR      R0,[R0, #+0]
   \   00000226   0x.... 0x....      BL       __aeabi_fmul
   \   0000022A   0x0001             MOVS     R1,R0
   \   0000022C   0x.... 0x....      LDR.W    R0,??DataTable6_22
   \   00000230   0x68C0             LDR      R0,[R0, #+12]
   \   00000232   0x.... 0x....      BL       __aeabi_fsub
   \   00000236   0x.... 0x....      LDR.W    R1,??DataTable6_22
   \   0000023A   0x60C8             STR      R0,[R1, #+12]
    120          	
    121          	
    122          	angle1	+= K_01 * angle_err1;//后验估计
   \   0000023C   0x.... 0x....      LDR.W    R0,??DataTable6_31
   \   00000240   0x6801             LDR      R1,[R0, #+0]
   \   00000242   0x.... 0x....      LDR.W    R0,??DataTable6_25
   \   00000246   0x6800             LDR      R0,[R0, #+0]
   \   00000248   0x.... 0x....      BL       __aeabi_fmul
   \   0000024C   0x.... 0x....      LDR.W    R1,??DataTable6_20
   \   00000250   0x6809             LDR      R1,[R1, #+0]
   \   00000252   0x.... 0x....      BL       __aeabi_fadd
   \   00000256   0x.... 0x....      LDR.W    R1,??DataTable6_20
   \   0000025A   0x6008             STR      R0,[R1, #+0]
    123          	q_bias1	+= K_11 * angle_err1;//后验估计
   \   0000025C   0x.... 0x....      LDR.W    R0,??DataTable6_32
   \   00000260   0x6801             LDR      R1,[R0, #+0]
   \   00000262   0x.... 0x....      LDR.W    R0,??DataTable6_25
   \   00000266   0x6800             LDR      R0,[R0, #+0]
   \   00000268   0x.... 0x....      BL       __aeabi_fmul
   \   0000026C   0x.... 0x....      LDR.W    R1,??DataTable6_18
   \   00000270   0x6809             LDR      R1,[R1, #+0]
   \   00000272   0x.... 0x....      BL       __aeabi_fadd
   \   00000276   0x.... 0x....      LDR.W    R1,??DataTable6_18
   \   0000027A   0x6008             STR      R0,[R1, #+0]
    124          	angle_dot1 = gyro_m1-q_bias1;//输出值（后验估计）的微分 = 角速度
   \   0000027C   0x0028             MOVS     R0,R5
   \   0000027E   0x.... 0x....      LDR.W    R1,??DataTable6_18
   \   00000282   0x6809             LDR      R1,[R1, #+0]
   \   00000284   0x.... 0x....      BL       __aeabi_fsub
   \   00000288   0x.... 0x....      LDR.W    R1,??DataTable6_35
   \   0000028C   0x6008             STR      R0,[R1, #+0]
    125                  return angle1;
   \   0000028E   0x.... 0x....      LDR.W    R0,??DataTable6_20
   \   00000292   0x6800             LDR      R0,[R0, #+0]
   \   00000294   0xBD30             POP      {R4,R5,PC}       ;; return
    126          }
    127          
    128          

   \                                 In section .bss, align 4
    129          float X_b1 = 0 ;   //先验状态估计
   \                     X_b1:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
    130          float X_a1 = 0 ;   //后验状态估计
   \                     X_a1:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
    131          float P_b1 = 0 ;   //先验估计误差的协方差
   \                     P_b1:
   \   00000000                      DS8 4

   \                                 In section .data, align 4
    132          float P_a1 = 1 ;   //后验估计误差的协方差
   \                     P_a1:
   \   00000000   0x3F800000         DC32 3F800000H

   \                                 In section .bss, align 4
    133          float K1   = 0 ;   //残余的增益/混合因数
   \                     K1:
   \   00000000                      DS8 4

   \                                 In section .data, align 4
    134          float Q1   = 0.05; //过程激励噪声协方差  
   \                     Q1:
   \   00000000   0x3D4CCCCD         DC32 3D4CCCCDH

   \                                 In section .data, align 4
    135          float R1   = 1; //观测噪声协方差
   \                     `R1`:
   \   00000000   0x3F800000         DC32 3F800000H
    136          

   \                                 In section .bss, align 4
    137          float X_b2 = 0 ;   //先验状态估计
   \                     X_b2:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
    138          float X_a2 = 0 ;   //后验状态估计
   \                     X_a2:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
    139          float P_b2 = 0 ;   //先验估计误差的协方差
   \                     P_b2:
   \   00000000                      DS8 4

   \                                 In section .data, align 4
    140          float P_a2 = 1 ;   //后验估计误差的协方差
   \                     P_a2:
   \   00000000   0x3F800000         DC32 3F800000H

   \                                 In section .bss, align 4
    141          float K2   = 0 ;   //残余的增益/混合因数
   \                     K2:
   \   00000000                      DS8 4

   \                                 In section .data, align 4
    142          float Q2   = 0.1; //过程激励噪声协方差  
   \                     Q2:
   \   00000000   0x3DCCCCCD         DC32 3DCCCCCDH

   \                                 In section .data, align 4
    143          float R2   = 0.9; //观测噪声协方差
   \                     `R2`:
   \   00000000   0x3F666666         DC32 3F666666H
    144          

   \                                 In section .bss, align 4
    145          float X_b3 = 0 ;   //先验状态估计
   \                     X_b3:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
    146          float X_a3 = 0 ;   //后验状态估计
   \                     X_a3:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
    147          float P_b3 = 0 ;   //先验估计误差的协方差
   \                     P_b3:
   \   00000000                      DS8 4

   \                                 In section .data, align 4
    148          float P_a3 = 1 ;   //后验估计误差的协方差
   \                     P_a3:
   \   00000000   0x3F800000         DC32 3F800000H

   \                                 In section .bss, align 4
    149          float K3   = 0 ;   //残余的增益/混合因数
   \                     K3:
   \   00000000                      DS8 4

   \                                 In section .data, align 4
    150          float Q3   = 0.1; //过程激励噪声协方差  
   \                     Q3:
   \   00000000   0x3DCCCCCD         DC32 3DCCCCCDH

   \                                 In section .data, align 4
    151          float R3   = 0.9; //观测噪声协方差
   \                     `R3`:
   \   00000000   0x3F666666         DC32 3F666666H
    152          

   \                                 In section .bss, align 4
    153          float X_b4 = 0 ;   //先验状态估计
   \                     X_b4:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
    154          float X_a4 = 0 ;   //后验状态估计
   \                     X_a4:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
    155          float P_b4 = 0 ;   //先验估计误差的协方差
   \                     P_b4:
   \   00000000                      DS8 4

   \                                 In section .data, align 4
    156          float P_a4 = 1 ;   //后验估计误差的协方差
   \                     P_a4:
   \   00000000   0x3F800000         DC32 3F800000H

   \                                 In section .bss, align 4
    157          float K4   = 0 ;   //残余的增益/混合因数
   \                     K4:
   \   00000000                      DS8 4

   \                                 In section .data, align 4
    158          float Q4   = 0.1; //过程激励噪声协方差  
   \                     Q4:
   \   00000000   0x3DCCCCCD         DC32 3DCCCCCDH

   \                                 In section .data, align 4
    159          float R4   = 0.9; //观测噪声协方差
   \                     `R4`:
   \   00000000   0x3F666666         DC32 3F666666H
    160          

   \                                 In section .text, align 2, keep-with-next
    161          float kalman_filter1(float Z1)
    162          { X_b1 = X_a1 ;
   \                     kalman_filter1:
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x.... 0x....      LDR.W    R0,??DataTable6_36
   \   00000008   0x.... 0x....      LDR.W    R1,??DataTable6_37
   \   0000000C   0x6809             LDR      R1,[R1, #+0]
   \   0000000E   0x6001             STR      R1,[R0, #+0]
    163            P_b1 = P_a1 + Q1 ;
   \   00000010   0x.... 0x....      LDR.W    R0,??DataTable6_38
   \   00000014   0x6801             LDR      R1,[R0, #+0]
   \   00000016   0x.... 0x....      LDR.W    R0,??DataTable6_39
   \   0000001A   0x6800             LDR      R0,[R0, #+0]
   \   0000001C   0x.... 0x....      BL       __aeabi_fadd
   \   00000020   0x.... 0x....      LDR.W    R1,??DataTable6_40
   \   00000024   0x6008             STR      R0,[R1, #+0]
    164            K1   = P_b1  / (P_b1 + R1) ;
   \   00000026   0x.... 0x....      LDR.W    R0,??DataTable6_40
   \   0000002A   0x6801             LDR      R1,[R0, #+0]
   \   0000002C   0x.... 0x....      LDR.W    R0,??DataTable6_41
   \   00000030   0x6800             LDR      R0,[R0, #+0]
   \   00000032   0x.... 0x....      BL       __aeabi_fadd
   \   00000036   0x0001             MOVS     R1,R0
   \   00000038   0x.... 0x....      LDR.W    R0,??DataTable6_40
   \   0000003C   0x6800             LDR      R0,[R0, #+0]
   \   0000003E   0x.... 0x....      BL       __aeabi_fdiv
   \   00000042   0x.... 0x....      LDR.W    R1,??DataTable6_42
   \   00000046   0x6008             STR      R0,[R1, #+0]
    165            X_a1 = X_b1 + K1 * (Z1 - X_b1) ;
   \   00000048   0x0020             MOVS     R0,R4
   \   0000004A   0x.... 0x....      LDR.W    R1,??DataTable6_36
   \   0000004E   0x6809             LDR      R1,[R1, #+0]
   \   00000050   0x.... 0x....      BL       __aeabi_fsub
   \   00000054   0x.... 0x....      LDR.W    R1,??DataTable6_42
   \   00000058   0x6809             LDR      R1,[R1, #+0]
   \   0000005A   0x.... 0x....      BL       __aeabi_fmul
   \   0000005E   0x.... 0x....      LDR.W    R1,??DataTable6_36
   \   00000062   0x6809             LDR      R1,[R1, #+0]
   \   00000064   0x.... 0x....      BL       __aeabi_fadd
   \   00000068   0x.... 0x....      LDR.W    R1,??DataTable6_37
   \   0000006C   0x6008             STR      R0,[R1, #+0]
    166            P_a1 = (1 - K1) * P_b1 ;
   \   0000006E   0xF05F 0x507E      MOVS     R0,#+1065353216
   \   00000072   0x.... 0x....      LDR.W    R1,??DataTable6_42
   \   00000076   0x6809             LDR      R1,[R1, #+0]
   \   00000078   0x.... 0x....      BL       __aeabi_fsub
   \   0000007C   0x.... 0x....      LDR.W    R1,??DataTable6_40
   \   00000080   0x6809             LDR      R1,[R1, #+0]
   \   00000082   0x.... 0x....      BL       __aeabi_fmul
   \   00000086   0x.... 0x....      LDR.W    R1,??DataTable6_38
   \   0000008A   0x6008             STR      R0,[R1, #+0]
    167            return X_a1 ;
   \   0000008C   0x.... 0x....      LDR.W    R0,??DataTable6_37
   \   00000090   0x6800             LDR      R0,[R0, #+0]
   \   00000092   0xBD10             POP      {R4,PC}          ;; return
    168          }        

   \                                 In section .text, align 2, keep-with-next
    169          float kalman_filter2(float Z2)
    170          { X_b2 = X_a2 ;
   \                     kalman_filter2:
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x.... 0x....      LDR.W    R0,??DataTable6_43
   \   00000008   0x.... 0x....      LDR.W    R1,??DataTable6_44
   \   0000000C   0x6809             LDR      R1,[R1, #+0]
   \   0000000E   0x6001             STR      R1,[R0, #+0]
    171            P_b2 = P_a2 + Q2 ;
   \   00000010   0x.... 0x....      LDR.W    R0,??DataTable6_45
   \   00000014   0x6801             LDR      R1,[R0, #+0]
   \   00000016   0x.... 0x....      LDR.W    R0,??DataTable6_46
   \   0000001A   0x6800             LDR      R0,[R0, #+0]
   \   0000001C   0x.... 0x....      BL       __aeabi_fadd
   \   00000020   0x.... 0x....      LDR.W    R1,??DataTable6_47
   \   00000024   0x6008             STR      R0,[R1, #+0]
    172            K2  =  P_b2  / (P_b2 + R2) ;
   \   00000026   0x.... 0x....      LDR.W    R0,??DataTable6_47
   \   0000002A   0x6801             LDR      R1,[R0, #+0]
   \   0000002C   0x.... 0x....      LDR.W    R0,??DataTable6_48
   \   00000030   0x6800             LDR      R0,[R0, #+0]
   \   00000032   0x.... 0x....      BL       __aeabi_fadd
   \   00000036   0x0001             MOVS     R1,R0
   \   00000038   0x.... 0x....      LDR.W    R0,??DataTable6_47
   \   0000003C   0x6800             LDR      R0,[R0, #+0]
   \   0000003E   0x.... 0x....      BL       __aeabi_fdiv
   \   00000042   0x.... 0x....      LDR.W    R1,??DataTable6_49
   \   00000046   0x6008             STR      R0,[R1, #+0]
    173            X_a2 = X_b2 + K2 * (Z2 - X_b2) ;
   \   00000048   0x0020             MOVS     R0,R4
   \   0000004A   0x.... 0x....      LDR.W    R1,??DataTable6_43
   \   0000004E   0x6809             LDR      R1,[R1, #+0]
   \   00000050   0x.... 0x....      BL       __aeabi_fsub
   \   00000054   0x.... 0x....      LDR.W    R1,??DataTable6_49
   \   00000058   0x6809             LDR      R1,[R1, #+0]
   \   0000005A   0x.... 0x....      BL       __aeabi_fmul
   \   0000005E   0x.... 0x....      LDR.W    R1,??DataTable6_43
   \   00000062   0x6809             LDR      R1,[R1, #+0]
   \   00000064   0x.... 0x....      BL       __aeabi_fadd
   \   00000068   0x.... 0x....      LDR.W    R1,??DataTable6_44
   \   0000006C   0x6008             STR      R0,[R1, #+0]
    174            P_a2 = (1 - K2) * P_b2 ;
   \   0000006E   0xF05F 0x507E      MOVS     R0,#+1065353216
   \   00000072   0x.... 0x....      LDR.W    R1,??DataTable6_49
   \   00000076   0x6809             LDR      R1,[R1, #+0]
   \   00000078   0x.... 0x....      BL       __aeabi_fsub
   \   0000007C   0x.... 0x....      LDR.W    R1,??DataTable6_47
   \   00000080   0x6809             LDR      R1,[R1, #+0]
   \   00000082   0x.... 0x....      BL       __aeabi_fmul
   \   00000086   0x.... 0x....      LDR.W    R1,??DataTable6_45
   \   0000008A   0x6008             STR      R0,[R1, #+0]
    175            return X_a2 ;
   \   0000008C   0x.... 0x....      LDR.W    R0,??DataTable6_44
   \   00000090   0x6800             LDR      R0,[R0, #+0]
   \   00000092   0xBD10             POP      {R4,PC}          ;; return
    176          }        

   \                                 In section .text, align 2, keep-with-next
    177          float kalman_filter3(float Z3)
    178          { X_b3 = X_a3 ;
   \                     kalman_filter3:
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x.... 0x....      LDR.W    R0,??DataTable6_50
   \   00000008   0x.... 0x....      LDR.W    R1,??DataTable6_51
   \   0000000C   0x6809             LDR      R1,[R1, #+0]
   \   0000000E   0x6001             STR      R1,[R0, #+0]
    179            P_b3 = P_a3 + Q3 ;
   \   00000010   0x.... 0x....      LDR.W    R0,??DataTable6_52
   \   00000014   0x6801             LDR      R1,[R0, #+0]
   \   00000016   0x.... 0x....      LDR.W    R0,??DataTable6_53
   \   0000001A   0x6800             LDR      R0,[R0, #+0]
   \   0000001C   0x.... 0x....      BL       __aeabi_fadd
   \   00000020   0x.... 0x....      LDR.W    R1,??DataTable6_54
   \   00000024   0x6008             STR      R0,[R1, #+0]
    180            K3   = P_b3  / (P_b3 + R3) ;
   \   00000026   0x.... 0x....      LDR.W    R0,??DataTable6_54
   \   0000002A   0x6801             LDR      R1,[R0, #+0]
   \   0000002C   0x.... 0x....      LDR.W    R0,??DataTable6_55
   \   00000030   0x6800             LDR      R0,[R0, #+0]
   \   00000032   0x.... 0x....      BL       __aeabi_fadd
   \   00000036   0x0001             MOVS     R1,R0
   \   00000038   0x.... 0x....      LDR.W    R0,??DataTable6_54
   \   0000003C   0x6800             LDR      R0,[R0, #+0]
   \   0000003E   0x.... 0x....      BL       __aeabi_fdiv
   \   00000042   0x.... 0x....      LDR.W    R1,??DataTable6_56
   \   00000046   0x6008             STR      R0,[R1, #+0]
    181            X_a3 = X_b3 + K3 * (Z3 - X_b3) ;
   \   00000048   0x0020             MOVS     R0,R4
   \   0000004A   0x.... 0x....      LDR.W    R1,??DataTable6_50
   \   0000004E   0x6809             LDR      R1,[R1, #+0]
   \   00000050   0x.... 0x....      BL       __aeabi_fsub
   \   00000054   0x.... 0x....      LDR.W    R1,??DataTable6_56
   \   00000058   0x6809             LDR      R1,[R1, #+0]
   \   0000005A   0x.... 0x....      BL       __aeabi_fmul
   \   0000005E   0x.... 0x....      LDR.W    R1,??DataTable6_50
   \   00000062   0x6809             LDR      R1,[R1, #+0]
   \   00000064   0x.... 0x....      BL       __aeabi_fadd
   \   00000068   0x.... 0x....      LDR.W    R1,??DataTable6_51
   \   0000006C   0x6008             STR      R0,[R1, #+0]
    182            P_a3 = (1 - K3) * P_b3 ;
   \   0000006E   0xF05F 0x507E      MOVS     R0,#+1065353216
   \   00000072   0x.... 0x....      LDR.W    R1,??DataTable6_56
   \   00000076   0x6809             LDR      R1,[R1, #+0]
   \   00000078   0x.... 0x....      BL       __aeabi_fsub
   \   0000007C   0x.... 0x....      LDR.W    R1,??DataTable6_54
   \   00000080   0x6809             LDR      R1,[R1, #+0]
   \   00000082   0x.... 0x....      BL       __aeabi_fmul
   \   00000086   0x.... 0x....      LDR.W    R1,??DataTable6_52
   \   0000008A   0x6008             STR      R0,[R1, #+0]
    183            return X_a3 ;
   \   0000008C   0x.... 0x....      LDR.W    R0,??DataTable6_51
   \   00000090   0x6800             LDR      R0,[R0, #+0]
   \   00000092   0xBD10             POP      {R4,PC}          ;; return
    184          }

   \                                 In section .text, align 2, keep-with-next
    185          float kalman_filter4(float Z4)
    186          { X_b4 = X_a4 ;
   \                     kalman_filter4:
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x.... 0x....      LDR.W    R0,??DataTable6_57
   \   00000008   0x.... 0x....      LDR.W    R1,??DataTable6_58
   \   0000000C   0x6809             LDR      R1,[R1, #+0]
   \   0000000E   0x6001             STR      R1,[R0, #+0]
    187            P_b4 = P_a4 + Q4 ;
   \   00000010   0x.... 0x....      LDR.W    R0,??DataTable6_59
   \   00000014   0x6801             LDR      R1,[R0, #+0]
   \   00000016   0x.... 0x....      LDR.W    R0,??DataTable6_60
   \   0000001A   0x6800             LDR      R0,[R0, #+0]
   \   0000001C   0x.... 0x....      BL       __aeabi_fadd
   \   00000020   0x.... 0x....      LDR.W    R1,??DataTable6_61
   \   00000024   0x6008             STR      R0,[R1, #+0]
    188            K4   = P_b4  / (P_b4 + R4) ;
   \   00000026   0x.... 0x....      LDR.W    R0,??DataTable6_61
   \   0000002A   0x6801             LDR      R1,[R0, #+0]
   \   0000002C   0x.... 0x....      LDR.W    R0,??DataTable6_62
   \   00000030   0x6800             LDR      R0,[R0, #+0]
   \   00000032   0x.... 0x....      BL       __aeabi_fadd
   \   00000036   0x0001             MOVS     R1,R0
   \   00000038   0x.... 0x....      LDR.W    R0,??DataTable6_61
   \   0000003C   0x6800             LDR      R0,[R0, #+0]
   \   0000003E   0x.... 0x....      BL       __aeabi_fdiv
   \   00000042   0x.... 0x....      LDR.W    R1,??DataTable6_63
   \   00000046   0x6008             STR      R0,[R1, #+0]
    189            X_a4 = X_b4 + K4 * (Z4 - X_b4) ;
   \   00000048   0x0020             MOVS     R0,R4
   \   0000004A   0x.... 0x....      LDR.W    R1,??DataTable6_57
   \   0000004E   0x6809             LDR      R1,[R1, #+0]
   \   00000050   0x.... 0x....      BL       __aeabi_fsub
   \   00000054   0x.... 0x....      LDR.W    R1,??DataTable6_63
   \   00000058   0x6809             LDR      R1,[R1, #+0]
   \   0000005A   0x.... 0x....      BL       __aeabi_fmul
   \   0000005E   0x.... 0x....      LDR.W    R1,??DataTable6_57
   \   00000062   0x6809             LDR      R1,[R1, #+0]
   \   00000064   0x.... 0x....      BL       __aeabi_fadd
   \   00000068   0x.... 0x....      LDR.W    R1,??DataTable6_58
   \   0000006C   0x6008             STR      R0,[R1, #+0]
    190            P_a4 = (1 - K4) * P_b4 ;
   \   0000006E   0xF05F 0x507E      MOVS     R0,#+1065353216
   \   00000072   0x.... 0x....      LDR.W    R1,??DataTable6_63
   \   00000076   0x6809             LDR      R1,[R1, #+0]
   \   00000078   0x.... 0x....      BL       __aeabi_fsub
   \   0000007C   0x.... 0x....      LDR.W    R1,??DataTable6_61
   \   00000080   0x6809             LDR      R1,[R1, #+0]
   \   00000082   0x.... 0x....      BL       __aeabi_fmul
   \   00000086   0x.... 0x....      LDR.W    R1,??DataTable6_59
   \   0000008A   0x6008             STR      R0,[R1, #+0]
    191            return X_a4 ;
   \   0000008C   0x.... 0x....      LDR.W    R0,??DataTable6_58
   \   00000090   0x6800             LDR      R0,[R0, #+0]
   \   00000092   0xBD10             POP      {R4,PC}          ;; return
    192          }
    193          
    194          //////////////////////////////////////////////////////////////////////////////////////////////////////

   \                                 In section .text, align 2, keep-with-next
    195          void matrix_multiply(float* A, float* B, int m, int p, int n, float* C)
    196          {
   \                     matrix_multiply:
   \   00000000   0xE92D 0x4FF5      PUSH     {R0,R2,R4-R11,LR}
   \   00000004   0x000C             MOVS     R4,R1
   \   00000006   0x001D             MOVS     R5,R3
    197          
    198              int i, j, k; 
    199              for (i=0;i<m;i++) 
   \   00000008   0xF05F 0x0800      MOVS     R8,#+0
   \   0000000C   0x9E0B             LDR      R6,[SP, #+44]
   \   0000000E   0x9F0C             LDR      R7,[SP, #+48]
   \   00000010   0xE001             B.N      ??matrix_multiply_0
   \                     ??matrix_multiply_1:
   \   00000012   0xF118 0x0801      ADDS     R8,R8,#+1
   \                     ??matrix_multiply_0:
   \   00000016   0x9801             LDR      R0,[SP, #+4]
   \   00000018   0x4580             CMP      R8,R0
   \   0000001A   0xDA27             BGE.N    ??matrix_multiply_2
    200                  for(j=0;j<n;j++) 
   \   0000001C   0xF05F 0x0900      MOVS     R9,#+0
   \   00000020   0xE01A             B.N      ??matrix_multiply_3
    201                  { 
    202                    C[n*i+j]=0; 
    203                    for (k=0;k<p;k++) 
    204                      C[n*i+j]= C[n*i+j]+A[p*i+k]*B[n*k+j]; 
   \                     ??matrix_multiply_4:
   \   00000022   0xFB08 0x9B06      MLA      R11,R8,R6,R9
   \   00000026   0xFB08 0xA005      MLA      R0,R8,R5,R10
   \   0000002A   0x9900             LDR      R1,[SP, #+0]
   \   0000002C   0xF851 0x1020      LDR      R1,[R1, R0, LSL #+2]
   \   00000030   0xFB0A 0x9006      MLA      R0,R10,R6,R9
   \   00000034   0xF854 0x0020      LDR      R0,[R4, R0, LSL #+2]
   \   00000038   0x.... 0x....      BL       __aeabi_fmul
   \   0000003C   0xFB08 0x9106      MLA      R1,R8,R6,R9
   \   00000040   0xF857 0x1021      LDR      R1,[R7, R1, LSL #+2]
   \   00000044   0x.... 0x....      BL       __aeabi_fadd
   \   00000048   0xF847 0x002B      STR      R0,[R7, R11, LSL #+2]
   \   0000004C   0xF11A 0x0A01      ADDS     R10,R10,#+1
   \                     ??matrix_multiply_5:
   \   00000050   0x45AA             CMP      R10,R5
   \   00000052   0xDBE6             BLT.N    ??matrix_multiply_4
   \   00000054   0xF119 0x0901      ADDS     R9,R9,#+1
   \                     ??matrix_multiply_3:
   \   00000058   0x45B1             CMP      R9,R6
   \   0000005A   0xDADA             BGE.N    ??matrix_multiply_1
   \   0000005C   0xFB08 0x9006      MLA      R0,R8,R6,R9
   \   00000060   0x2100             MOVS     R1,#+0
   \   00000062   0xF847 0x1020      STR      R1,[R7, R0, LSL #+2]
   \   00000066   0xF05F 0x0A00      MOVS     R10,#+0
   \   0000006A   0xE7F1             B.N      ??matrix_multiply_5
    205                  } 
    206          } 
   \                     ??matrix_multiply_2:
   \   0000006C   0xE8BD 0x8FF3      POP      {R0,R1,R4-R11,PC}  ;; return
    207          
    208          

   \                                 In section .text, align 2, keep-with-next
    209          static void matrix_addition(float* A, float* B, int m, int n, float* C) 
    210          
    211          { 
   \                     matrix_addition:
   \   00000000   0xE92D 0x4FF0      PUSH     {R4-R11,LR}
   \   00000004   0x0004             MOVS     R4,R0
   \   00000006   0x000D             MOVS     R5,R1
   \   00000008   0x0016             MOVS     R6,R2
   \   0000000A   0x001F             MOVS     R7,R3
    212          
    213              int i, j; 
    214              for (i=0;i<m;i++) 
   \   0000000C   0xF05F 0x0800      MOVS     R8,#+0
   \   00000010   0xF8DD 0x9024      LDR      R9,[SP, #+36]
   \   00000014   0xE013             B.N      ??matrix_addition_0
    215                  for(j=0;j<n;j++) 
    216                      C[n*i+j]=A[n*i+j]+B[n*i+j]; 
   \                     ??matrix_addition_1:
   \   00000016   0xFB08 0xAB07      MLA      R11,R8,R7,R10
   \   0000001A   0xFB08 0xA007      MLA      R0,R8,R7,R10
   \   0000001E   0xF854 0x0020      LDR      R0,[R4, R0, LSL #+2]
   \   00000022   0xFB08 0xA107      MLA      R1,R8,R7,R10
   \   00000026   0xF855 0x1021      LDR      R1,[R5, R1, LSL #+2]
   \   0000002A   0x.... 0x....      BL       __aeabi_fadd
   \   0000002E   0xF849 0x002B      STR      R0,[R9, R11, LSL #+2]
   \   00000032   0xF11A 0x0A01      ADDS     R10,R10,#+1
   \                     ??matrix_addition_2:
   \   00000036   0x45BA             CMP      R10,R7
   \   00000038   0xDBED             BLT.N    ??matrix_addition_1
   \   0000003A   0xF118 0x0801      ADDS     R8,R8,#+1
   \                     ??matrix_addition_0:
   \   0000003E   0x45B0             CMP      R8,R6
   \   00000040   0xDA02             BGE.N    ??matrix_addition_3
   \   00000042   0xF05F 0x0A00      MOVS     R10,#+0
   \   00000046   0xE7F6             B.N      ??matrix_addition_2
    217          } 
   \                     ??matrix_addition_3:
   \   00000048   0xE8BD 0x8FF0      POP      {R4-R11,PC}      ;; return
    218          

   \                                 In section .text, align 2, keep-with-next
    219          void matrix_subtraction(float* A, float* B, int m, int n, float* C) 
    220          {
   \                     matrix_subtraction:
   \   00000000   0xE92D 0x4FF0      PUSH     {R4-R11,LR}
   \   00000004   0x0004             MOVS     R4,R0
   \   00000006   0x000D             MOVS     R5,R1
   \   00000008   0x0016             MOVS     R6,R2
   \   0000000A   0x001F             MOVS     R7,R3
    221              int i, j; 
    222              for (i=0;i<m;i++) 
   \   0000000C   0xF05F 0x0800      MOVS     R8,#+0
   \   00000010   0xF8DD 0x9024      LDR      R9,[SP, #+36]
   \   00000014   0xE013             B.N      ??matrix_subtraction_0
    223                  for(j=0;j<n;j++) 
    224                      C[n*i+j]=A[n*i+j]-B[n*i+j]; 
   \                     ??matrix_subtraction_1:
   \   00000016   0xFB08 0xAB07      MLA      R11,R8,R7,R10
   \   0000001A   0xFB08 0xA007      MLA      R0,R8,R7,R10
   \   0000001E   0xF854 0x0020      LDR      R0,[R4, R0, LSL #+2]
   \   00000022   0xFB08 0xA107      MLA      R1,R8,R7,R10
   \   00000026   0xF855 0x1021      LDR      R1,[R5, R1, LSL #+2]
   \   0000002A   0x.... 0x....      BL       __aeabi_fsub
   \   0000002E   0xF849 0x002B      STR      R0,[R9, R11, LSL #+2]
   \   00000032   0xF11A 0x0A01      ADDS     R10,R10,#+1
   \                     ??matrix_subtraction_2:
   \   00000036   0x45BA             CMP      R10,R7
   \   00000038   0xDBED             BLT.N    ??matrix_subtraction_1
   \   0000003A   0xF118 0x0801      ADDS     R8,R8,#+1
   \                     ??matrix_subtraction_0:
   \   0000003E   0x45B0             CMP      R8,R6
   \   00000040   0xDA02             BGE.N    ??matrix_subtraction_3
   \   00000042   0xF05F 0x0A00      MOVS     R10,#+0
   \   00000046   0xE7F6             B.N      ??matrix_subtraction_2
    225          } 
   \                     ??matrix_subtraction_3:
   \   00000048   0xE8BD 0x8FF0      POP      {R4-R11,PC}      ;; return

   \                                 In section .text, align 2, keep-with-next
    226          void matrix_transpose(float* A, int m, int n, float* C) 
    227          {     
   \                     matrix_transpose:
   \   00000000   0xB4F0             PUSH     {R4-R7}
    228               int i, j; 
    229              for (i=0;i<m;i++) 
   \   00000002   0x2400             MOVS     R4,#+0
   \   00000004   0xE00B             B.N      ??matrix_transpose_0
    230                  for(j=0;j<n;j++) 
    231                      C[m*j+i]=A[n*i+j]; 
   \                     ??matrix_transpose_1:
   \   00000006   0xFB05 0x4601      MLA      R6,R5,R1,R4
   \   0000000A   0xFB04 0x5702      MLA      R7,R4,R2,R5
   \   0000000E   0xF850 0x7027      LDR      R7,[R0, R7, LSL #+2]
   \   00000012   0xF843 0x7026      STR      R7,[R3, R6, LSL #+2]
   \   00000016   0x1C6D             ADDS     R5,R5,#+1
   \                     ??matrix_transpose_2:
   \   00000018   0x4295             CMP      R5,R2
   \   0000001A   0xDBF4             BLT.N    ??matrix_transpose_1
   \   0000001C   0x1C64             ADDS     R4,R4,#+1
   \                     ??matrix_transpose_0:
   \   0000001E   0x428C             CMP      R4,R1
   \   00000020   0xDA01             BGE.N    ??matrix_transpose_3
   \   00000022   0x2500             MOVS     R5,#+0
   \   00000024   0xE7F8             B.N      ??matrix_transpose_2
    232          }
   \                     ??matrix_transpose_3:
   \   00000026   0xBCF0             POP      {R4-R7}
   \   00000028   0x4770             BX       LR               ;; return

   \                                 In section .text, align 2, keep-with-next
    233          int matrix_inversion(float* A, int n, float* AInverse) 
    234          { 
   \                     matrix_inversion:
   \   00000000   0xE92D 0x4FF0      PUSH     {R4-R11,LR}
   \   00000004   0xB083             SUB      SP,SP,#+12
   \   00000006   0x0004             MOVS     R4,R0
   \   00000008   0x000D             MOVS     R5,R1
   \   0000000A   0x0016             MOVS     R6,R2
    235              int i, j, iPass, imx, icol, irow; 
    236              float det, temp, pivot, factor; 
    237              float* ac = (float*)calloc(n*n, sizeof(float)); 
   \   0000000C   0x2104             MOVS     R1,#+4
   \   0000000E   0xFB05 0xF005      MUL      R0,R5,R5
   \   00000012   0x.... 0x....      BL       calloc
   \   00000016   0x9001             STR      R0,[SP, #+4]
    238              det = 1; 
   \   00000018   0xF05F 0x5B7E      MOVS     R11,#+1065353216
    239              for (i = 0; i < n; i++) 
   \   0000001C   0x2000             MOVS     R0,#+0
   \   0000001E   0xE017             B.N      ??matrix_inversion_0
    240              { 
    241                  for (j = 0; j < n; j++) 
    242                  { 
    243                      AInverse[n*i+j] = 0; 
   \                     ??matrix_inversion_1:
   \   00000020   0xFB00 0x1205      MLA      R2,R0,R5,R1
   \   00000024   0x2300             MOVS     R3,#+0
   \   00000026   0xF846 0x3022      STR      R3,[R6, R2, LSL #+2]
    244                      ac[n*i+j] = A[n*i+j]; 
   \   0000002A   0xFB00 0x1205      MLA      R2,R0,R5,R1
   \   0000002E   0x9B01             LDR      R3,[SP, #+4]
   \   00000030   0xFB00 0x1C05      MLA      R12,R0,R5,R1
   \   00000034   0xF854 0xC02C      LDR      R12,[R4, R12, LSL #+2]
   \   00000038   0xF843 0xC022      STR      R12,[R3, R2, LSL #+2]
    245                  } 
   \   0000003C   0x1C49             ADDS     R1,R1,#+1
   \                     ??matrix_inversion_2:
   \   0000003E   0x42A9             CMP      R1,R5
   \   00000040   0xDBEE             BLT.N    ??matrix_inversion_1
    246                  AInverse[n*i+i] = 1; 
   \   00000042   0xFB00 0x0105      MLA      R1,R0,R5,R0
   \   00000046   0xF05F 0x527E      MOVS     R2,#+1065353216
   \   0000004A   0xF846 0x2021      STR      R2,[R6, R1, LSL #+2]
   \   0000004E   0x1C40             ADDS     R0,R0,#+1
   \                     ??matrix_inversion_0:
   \   00000050   0x42A8             CMP      R0,R5
   \   00000052   0xDA01             BGE.N    ??matrix_inversion_3
   \   00000054   0x2100             MOVS     R1,#+0
   \   00000056   0xE7F2             B.N      ??matrix_inversion_2
    247              } 
    248          
    249          
    250              for (iPass = 0; iPass < n; iPass++) 
   \                     ??matrix_inversion_3:
   \   00000058   0xF05F 0x0800      MOVS     R8,#+0
   \   0000005C   0xE001             B.N      ??matrix_inversion_4
   \                     ??matrix_inversion_5:
   \   0000005E   0xF118 0x0801      ADDS     R8,R8,#+1
   \                     ??matrix_inversion_4:
   \   00000062   0x45A8             CMP      R8,R5
   \   00000064   0xF280 0x80C3      BGE.W    ??matrix_inversion_6
    251              { 
    252                  imx = iPass; 
   \   00000068   0xF8CD 0x8000      STR      R8,[SP, #+0]
    253                  for (irow = iPass; irow < n; irow++) 
   \   0000006C   0x46C1             MOV      R9,R8
   \   0000006E   0xE017             B.N      ??matrix_inversion_7
    254                  { 
    255                      if (fabs(A[n*irow+iPass]) > fabs(A[n*imx+iPass])) imx = irow; 
   \                     ??matrix_inversion_8:
   \   00000070   0x9800             LDR      R0,[SP, #+0]
   \   00000072   0xFB00 0x8005      MLA      R0,R0,R5,R8
   \   00000076   0xF854 0x0020      LDR      R0,[R4, R0, LSL #+2]
   \   0000007A   0x.... 0x....      BL       __aeabi_f2d
   \   0000007E   0x.... 0x....      BL       fabs
   \   00000082   0x4682             MOV      R10,R0
   \   00000084   0xFB09 0x8005      MLA      R0,R9,R5,R8
   \   00000088   0xF854 0x0020      LDR      R0,[R4, R0, LSL #+2]
   \   0000008C   0x.... 0x....      BL       __aeabi_f2d
   \   00000090   0x.... 0x....      BL       fabs
   \   00000094   0x4582             CMP      R10,R0
   \   00000096   0xDA01             BGE.N    ??matrix_inversion_9
   \   00000098   0xF8CD 0x9000      STR      R9,[SP, #+0]
    256                  } 
   \                     ??matrix_inversion_9:
   \   0000009C   0xF119 0x0901      ADDS     R9,R9,#+1
   \                     ??matrix_inversion_7:
   \   000000A0   0x45A9             CMP      R9,R5
   \   000000A2   0xDBE5             BLT.N    ??matrix_inversion_8
    257          
    258          
    259                  if (imx != iPass) 
   \   000000A4   0x9800             LDR      R0,[SP, #+0]
   \   000000A6   0x4540             CMP      R0,R8
   \   000000A8   0xD02C             BEQ.N    ??matrix_inversion_10
    260                  { 
    261                      for (icol = 0; icol < n; icol++) 
   \   000000AA   0xF05F 0x0A00      MOVS     R10,#+0
   \   000000AE   0xE027             B.N      ??matrix_inversion_11
    262                      { 
    263                          temp = AInverse[n*iPass+icol]; 
   \                     ??matrix_inversion_12:
   \   000000B0   0xFB08 0xA005      MLA      R0,R8,R5,R10
   \   000000B4   0xF856 0x0020      LDR      R0,[R6, R0, LSL #+2]
    264                          AInverse[n*iPass+icol] = AInverse[n*imx+icol]; 
   \   000000B8   0xFB08 0xA105      MLA      R1,R8,R5,R10
   \   000000BC   0x9A00             LDR      R2,[SP, #+0]
   \   000000BE   0xFB02 0xA205      MLA      R2,R2,R5,R10
   \   000000C2   0xF856 0x2022      LDR      R2,[R6, R2, LSL #+2]
   \   000000C6   0xF846 0x2021      STR      R2,[R6, R1, LSL #+2]
    265                          AInverse[n*imx+icol] = temp; 
   \   000000CA   0x9900             LDR      R1,[SP, #+0]
   \   000000CC   0xFB01 0xA105      MLA      R1,R1,R5,R10
   \   000000D0   0xF846 0x0021      STR      R0,[R6, R1, LSL #+2]
    266                          if (icol >= iPass) 
   \   000000D4   0x45C2             CMP      R10,R8
   \   000000D6   0xDB11             BLT.N    ??matrix_inversion_13
    267                          { 
    268                              temp = A[n*iPass+icol]; 
   \   000000D8   0xFB08 0xA005      MLA      R0,R8,R5,R10
   \   000000DC   0xF854 0x0020      LDR      R0,[R4, R0, LSL #+2]
    269                              A[n*iPass+icol] = A[n*imx+icol]; 
   \   000000E0   0xFB08 0xA105      MLA      R1,R8,R5,R10
   \   000000E4   0x9A00             LDR      R2,[SP, #+0]
   \   000000E6   0xFB02 0xA205      MLA      R2,R2,R5,R10
   \   000000EA   0xF854 0x2022      LDR      R2,[R4, R2, LSL #+2]
   \   000000EE   0xF844 0x2021      STR      R2,[R4, R1, LSL #+2]
    270                              A[n*imx+icol] = temp; 
   \   000000F2   0x9900             LDR      R1,[SP, #+0]
   \   000000F4   0xFB01 0xA105      MLA      R1,R1,R5,R10
   \   000000F8   0xF844 0x0021      STR      R0,[R4, R1, LSL #+2]
    271                          } 
    272                      } 
   \                     ??matrix_inversion_13:
   \   000000FC   0xF11A 0x0A01      ADDS     R10,R10,#+1
   \                     ??matrix_inversion_11:
   \   00000100   0x45AA             CMP      R10,R5
   \   00000102   0xDBD5             BLT.N    ??matrix_inversion_12
    273                  } 
    274          
    275                  pivot = A[n*iPass+iPass]; 
   \                     ??matrix_inversion_10:
   \   00000104   0xFB08 0x8005      MLA      R0,R8,R5,R8
   \   00000108   0xF854 0x9020      LDR      R9,[R4, R0, LSL #+2]
    276                  det = det * pivot; 
   \   0000010C   0x4658             MOV      R0,R11
   \   0000010E   0x4649             MOV      R1,R9
   \   00000110   0x.... 0x....      BL       __aeabi_fmul
   \   00000114   0x4683             MOV      R11,R0
    277                  if (det == 0) 
   \   00000116   0x4658             MOV      R0,R11
   \   00000118   0x2100             MOVS     R1,#+0
   \   0000011A   0x.... 0x....      BL       __aeabi_cfcmpeq
   \   0000011E   0xD104             BNE.N    ??matrix_inversion_14
    278                  { 
    279                      free(ac); 
   \   00000120   0x9801             LDR      R0,[SP, #+4]
   \   00000122   0x.... 0x....      BL       free
    280                      return 0; 
   \   00000126   0x2000             MOVS     R0,#+0
   \   00000128   0xE065             B.N      ??matrix_inversion_15
    281                  } 
    282          
    283                  for (icol = 0; icol < n; icol++) 
   \                     ??matrix_inversion_14:
   \   0000012A   0xF05F 0x0A00      MOVS     R10,#+0
   \   0000012E   0xE01D             B.N      ??matrix_inversion_16
    284                  { 
    285          
    286                      AInverse[n*iPass+icol] = AInverse[n*iPass+icol] / pivot; 
   \                     ??matrix_inversion_17:
   \   00000130   0xFB08 0xA005      MLA      R0,R8,R5,R10
   \   00000134   0x9000             STR      R0,[SP, #+0]
   \   00000136   0xFB08 0xA005      MLA      R0,R8,R5,R10
   \   0000013A   0xF856 0x0020      LDR      R0,[R6, R0, LSL #+2]
   \   0000013E   0x4649             MOV      R1,R9
   \   00000140   0x.... 0x....      BL       __aeabi_fdiv
   \   00000144   0x9900             LDR      R1,[SP, #+0]
   \   00000146   0xF846 0x0021      STR      R0,[R6, R1, LSL #+2]
    287                      if (icol >= iPass) A[n*iPass+icol] = A[n*iPass+icol] / pivot; 
   \   0000014A   0x45C2             CMP      R10,R8
   \   0000014C   0xDB0C             BLT.N    ??matrix_inversion_18
   \   0000014E   0xFB08 0xA005      MLA      R0,R8,R5,R10
   \   00000152   0x9000             STR      R0,[SP, #+0]
   \   00000154   0xFB08 0xA005      MLA      R0,R8,R5,R10
   \   00000158   0xF854 0x0020      LDR      R0,[R4, R0, LSL #+2]
   \   0000015C   0x4649             MOV      R1,R9
   \   0000015E   0x.... 0x....      BL       __aeabi_fdiv
   \   00000162   0x9900             LDR      R1,[SP, #+0]
   \   00000164   0xF844 0x0021      STR      R0,[R4, R1, LSL #+2]
    288                  } 
   \                     ??matrix_inversion_18:
   \   00000168   0xF11A 0x0A01      ADDS     R10,R10,#+1
   \                     ??matrix_inversion_16:
   \   0000016C   0x45AA             CMP      R10,R5
   \   0000016E   0xDBDF             BLT.N    ??matrix_inversion_17
    289          
    290                  for (irow = 0; irow < n; irow++) 
   \   00000170   0xF05F 0x0900      MOVS     R9,#+0
   \   00000174   0xE02F             B.N      ??matrix_inversion_19
    291                  { 
    292          
    293                      if (irow != iPass) factor = A[n*irow+iPass]; 
    294                      for (icol = 0; icol < n; icol++) 
    295                      { 
    296                          if (irow != iPass) 
   \                     ??matrix_inversion_20:
   \   00000176   0x45C1             CMP      R9,R8
   \   00000178   0xD027             BEQ.N    ??matrix_inversion_21
    297                          { 
    298                              AInverse[n*irow+icol] -= factor * AInverse[n*iPass+icol]; 
   \   0000017A   0xFB09 0xA005      MLA      R0,R9,R5,R10
   \   0000017E   0x9000             STR      R0,[SP, #+0]
   \   00000180   0xFB08 0xA005      MLA      R0,R8,R5,R10
   \   00000184   0xF856 0x0020      LDR      R0,[R6, R0, LSL #+2]
   \   00000188   0x0039             MOVS     R1,R7
   \   0000018A   0x.... 0x....      BL       __aeabi_fmul
   \   0000018E   0x0001             MOVS     R1,R0
   \   00000190   0xFB09 0xA005      MLA      R0,R9,R5,R10
   \   00000194   0xF856 0x0020      LDR      R0,[R6, R0, LSL #+2]
   \   00000198   0x.... 0x....      BL       __aeabi_fsub
   \   0000019C   0x9900             LDR      R1,[SP, #+0]
   \   0000019E   0xF846 0x0021      STR      R0,[R6, R1, LSL #+2]
    299                              A[n*irow+icol] -= factor * A[n*iPass+icol]; 
   \   000001A2   0xFB09 0xA005      MLA      R0,R9,R5,R10
   \   000001A6   0x9000             STR      R0,[SP, #+0]
   \   000001A8   0xFB08 0xA005      MLA      R0,R8,R5,R10
   \   000001AC   0xF854 0x0020      LDR      R0,[R4, R0, LSL #+2]
   \   000001B0   0x0039             MOVS     R1,R7
   \   000001B2   0x.... 0x....      BL       __aeabi_fmul
   \   000001B6   0x0001             MOVS     R1,R0
   \   000001B8   0xFB09 0xA005      MLA      R0,R9,R5,R10
   \   000001BC   0xF854 0x0020      LDR      R0,[R4, R0, LSL #+2]
   \   000001C0   0x.... 0x....      BL       __aeabi_fsub
   \   000001C4   0x9900             LDR      R1,[SP, #+0]
   \   000001C6   0xF844 0x0021      STR      R0,[R4, R1, LSL #+2]
    300                          } 
    301                      } 
   \                     ??matrix_inversion_21:
   \   000001CA   0xF11A 0x0A01      ADDS     R10,R10,#+1
   \                     ??matrix_inversion_22:
   \   000001CE   0x45AA             CMP      R10,R5
   \   000001D0   0xDBD1             BLT.N    ??matrix_inversion_20
   \   000001D2   0xF119 0x0901      ADDS     R9,R9,#+1
   \                     ??matrix_inversion_19:
   \   000001D6   0x45A9             CMP      R9,R5
   \   000001D8   0xF6BF 0xAF41      BGE.W    ??matrix_inversion_5
   \   000001DC   0x45C1             CMP      R9,R8
   \   000001DE   0xD003             BEQ.N    ??matrix_inversion_23
   \   000001E0   0xFB09 0x8005      MLA      R0,R9,R5,R8
   \   000001E4   0xF854 0x7020      LDR      R7,[R4, R0, LSL #+2]
   \                     ??matrix_inversion_23:
   \   000001E8   0xF05F 0x0A00      MOVS     R10,#+0
   \   000001EC   0xE7EF             B.N      ??matrix_inversion_22
    302                  } 
    303              } 
    304          
    305              free(ac); 
   \                     ??matrix_inversion_6:
   \   000001EE   0x9801             LDR      R0,[SP, #+4]
   \   000001F0   0x.... 0x....      BL       free
    306              return 1; 
   \   000001F4   0x2001             MOVS     R0,#+1
   \                     ??matrix_inversion_15:
   \   000001F6   0xE8BD 0x8FFE      POP      {R1-R11,PC}      ;; return
    307          } 
    308          
    309          
    310          
    311          
    312          

   \                                 In section .text, align 2, keep-with-next
    313          float kalman_update(float gyroscope_rate, float accelerometer_angle) 
    314          { 
   \                     kalman_update:
   \   00000000   0xB500             PUSH     {LR}
   \   00000002   0xB0B5             SUB      SP,SP,#+212
    315          
    316             static  float A[2][2] = {{1.0, -0.019968}, {0.0, 1.0}}; 
    317             static  float B[2][1] = {{0.019968}, {0.0}}; 
    318            static   float C[1][2] = {{1.0, 0.0}}; 
    319            static   float Sz[1][1] = {{17.2}}; 
    320            static   float Sw[2][2] = {{0.005, 0.005}, {0.005, 0.005}}; 
    321          
    322          
    323             static   float xhat[2][1] = {{0.0}, {0.0}}; 
    324             static   float P[2][2] = {{0.005, 0.005}, {0.005, 0.005}}; 
    325          
    326          
    327              float u[1][1];        
    328              float y[1][1];         
    329          
    330              float AP[2][2];            
    331              float CT[2][1];         
    332              float APCT[2][1];         
    333              float CP[1][2];  
    334              float CPCT[1][1];   
    335              float CPCTSz[1][1];   
    336              float CPCTSzInv[1][1]; 
    337              float K[2][1];   
    338              float Cxhat[1][1];   
    339              float yCxhat[1][1];      
    340              float KyCxhat[2][1];  
    341              float Axhat[2][1];      
    342              float Bu[2][1];  
    343              float AxhatBu[2][1];  
    344              float AT[2][2];   
    345              float APAT[2][2];       
    346              float APATSw[2][2];         
    347              float KC[2][2];          
    348              float KCP[2][2];        
    349              float KCPAT[2][2];     
    350          
    351          
    352              u[0][0] = gyroscope_rate; 
   \   00000004   0x9008             STR      R0,[SP, #+32]
    353              y[0][0] = accelerometer_angle; 
   \   00000006   0x9107             STR      R1,[SP, #+28]
    354          
    355          
    356          
    357              matrix_multiply((float*) A, (float*) xhat, 2, 2, 1, (float*) Axhat); 
   \   00000008   0xA811             ADD      R0,SP,#+68
   \   0000000A   0x9001             STR      R0,[SP, #+4]
   \   0000000C   0x2001             MOVS     R0,#+1
   \   0000000E   0x9000             STR      R0,[SP, #+0]
   \   00000010   0x2302             MOVS     R3,#+2
   \   00000012   0x2202             MOVS     R2,#+2
   \   00000014   0x....             LDR.N    R1,??DataTable6_64
   \   00000016   0x....             LDR.N    R0,??DataTable6_65
   \   00000018   0x.... 0x....      BL       matrix_multiply
    358              matrix_multiply((float*) B, (float*) u, 2, 1, 1, (float*) Bu); 
   \   0000001C   0xA80F             ADD      R0,SP,#+60
   \   0000001E   0x9001             STR      R0,[SP, #+4]
   \   00000020   0x2001             MOVS     R0,#+1
   \   00000022   0x9000             STR      R0,[SP, #+0]
   \   00000024   0x2301             MOVS     R3,#+1
   \   00000026   0x2202             MOVS     R2,#+2
   \   00000028   0xA908             ADD      R1,SP,#+32
   \   0000002A   0x....             LDR.N    R0,??DataTable6_66
   \   0000002C   0x.... 0x....      BL       matrix_multiply
    359              matrix_addition((float*) Axhat, (float*) Bu, 2, 1, (float*) AxhatBu); 
   \   00000030   0xA80D             ADD      R0,SP,#+52
   \   00000032   0x9000             STR      R0,[SP, #+0]
   \   00000034   0x2301             MOVS     R3,#+1
   \   00000036   0x2202             MOVS     R2,#+2
   \   00000038   0xA90F             ADD      R1,SP,#+60
   \   0000003A   0xA811             ADD      R0,SP,#+68
   \   0000003C   0x.... 0x....      BL       matrix_addition
    360          
    361          
    362          
    363          
    364              matrix_multiply((float*) C, (float*) xhat, 1, 2, 1, (float*) Cxhat); 
   \   00000040   0xA803             ADD      R0,SP,#+12
   \   00000042   0x9001             STR      R0,[SP, #+4]
   \   00000044   0x2001             MOVS     R0,#+1
   \   00000046   0x9000             STR      R0,[SP, #+0]
   \   00000048   0x2302             MOVS     R3,#+2
   \   0000004A   0x2201             MOVS     R2,#+1
   \   0000004C   0x....             LDR.N    R1,??DataTable6_64
   \   0000004E   0x....             LDR.N    R0,??DataTable6_67
   \   00000050   0x.... 0x....      BL       matrix_multiply
    365              matrix_subtraction((float*) y, (float*) Cxhat, 1, 1, (float*) yCxhat); 
   \   00000054   0xA802             ADD      R0,SP,#+8
   \   00000056   0x9000             STR      R0,[SP, #+0]
   \   00000058   0x2301             MOVS     R3,#+1
   \   0000005A   0x2201             MOVS     R2,#+1
   \   0000005C   0xA903             ADD      R1,SP,#+12
   \   0000005E   0xA807             ADD      R0,SP,#+28
   \   00000060   0x.... 0x....      BL       matrix_subtraction
    366          
    367           
    368              matrix_transpose((float*) C, 1, 2, (float*) CT); 
   \   00000064   0xAB0B             ADD      R3,SP,#+44
   \   00000066   0x2202             MOVS     R2,#+2
   \   00000068   0x2101             MOVS     R1,#+1
   \   0000006A   0x....             LDR.N    R0,??DataTable6_67
   \   0000006C   0x.... 0x....      BL       matrix_transpose
    369              matrix_multiply((float*) C, (float*) P, 1, 2, 2, (float*) CP); 
   \   00000070   0xA815             ADD      R0,SP,#+84
   \   00000072   0x9001             STR      R0,[SP, #+4]
   \   00000074   0x2002             MOVS     R0,#+2
   \   00000076   0x9000             STR      R0,[SP, #+0]
   \   00000078   0x2302             MOVS     R3,#+2
   \   0000007A   0x2201             MOVS     R2,#+1
   \   0000007C   0x....             LDR.N    R1,??DataTable6_68
   \   0000007E   0x....             LDR.N    R0,??DataTable6_67
   \   00000080   0x.... 0x....      BL       matrix_multiply
    370              matrix_multiply((float*) CP, (float*) CT, 1, 2, 1, (float*) CPCT); 
   \   00000084   0xA806             ADD      R0,SP,#+24
   \   00000086   0x9001             STR      R0,[SP, #+4]
   \   00000088   0x2001             MOVS     R0,#+1
   \   0000008A   0x9000             STR      R0,[SP, #+0]
   \   0000008C   0x2302             MOVS     R3,#+2
   \   0000008E   0x2201             MOVS     R2,#+1
   \   00000090   0xA90B             ADD      R1,SP,#+44
   \   00000092   0xA815             ADD      R0,SP,#+84
   \   00000094   0x.... 0x....      BL       matrix_multiply
    371              matrix_addition((float*) CPCT, (float*) Sz, 1, 1, (float*) CPCTSz); 
   \   00000098   0xA805             ADD      R0,SP,#+20
   \   0000009A   0x9000             STR      R0,[SP, #+0]
   \   0000009C   0x2301             MOVS     R3,#+1
   \   0000009E   0x2201             MOVS     R2,#+1
   \   000000A0   0x....             LDR.N    R1,??DataTable6_69
   \   000000A2   0xA806             ADD      R0,SP,#+24
   \   000000A4   0x.... 0x....      BL       matrix_addition
    372          
    373              matrix_multiply((float*) A, (float*) P, 2, 2, 2, (float*) AP); 
   \   000000A8   0xA81D             ADD      R0,SP,#+116
   \   000000AA   0x9001             STR      R0,[SP, #+4]
   \   000000AC   0x2002             MOVS     R0,#+2
   \   000000AE   0x9000             STR      R0,[SP, #+0]
   \   000000B0   0x2302             MOVS     R3,#+2
   \   000000B2   0x2202             MOVS     R2,#+2
   \   000000B4   0x....             LDR.N    R1,??DataTable6_68
   \   000000B6   0x....             LDR.N    R0,??DataTable6_65
   \   000000B8   0x.... 0x....      BL       matrix_multiply
    374              matrix_multiply((float*) AP, (float*) CT, 2, 2, 1, (float*) APCT); 
   \   000000BC   0xA817             ADD      R0,SP,#+92
   \   000000BE   0x9001             STR      R0,[SP, #+4]
   \   000000C0   0x2001             MOVS     R0,#+1
   \   000000C2   0x9000             STR      R0,[SP, #+0]
   \   000000C4   0x2302             MOVS     R3,#+2
   \   000000C6   0x2202             MOVS     R2,#+2
   \   000000C8   0xA90B             ADD      R1,SP,#+44
   \   000000CA   0xA81D             ADD      R0,SP,#+116
   \   000000CC   0x.... 0x....      BL       matrix_multiply
    375              matrix_inversion((float*) CPCTSz, 1, (float*) CPCTSzInv); 
   \   000000D0   0xAA04             ADD      R2,SP,#+16
   \   000000D2   0x2101             MOVS     R1,#+1
   \   000000D4   0xA805             ADD      R0,SP,#+20
   \   000000D6   0x.... 0x....      BL       matrix_inversion
    376              matrix_multiply((float*) APCT, (float*) CPCTSzInv, 2, 1, 1, (float*) K); 
   \   000000DA   0xA809             ADD      R0,SP,#+36
   \   000000DC   0x9001             STR      R0,[SP, #+4]
   \   000000DE   0x2001             MOVS     R0,#+1
   \   000000E0   0x9000             STR      R0,[SP, #+0]
   \   000000E2   0x2301             MOVS     R3,#+1
   \   000000E4   0x2202             MOVS     R2,#+2
   \   000000E6   0xA904             ADD      R1,SP,#+16
   \   000000E8   0xA817             ADD      R0,SP,#+92
   \   000000EA   0x.... 0x....      BL       matrix_multiply
    377          
    378          
    379              matrix_multiply((float*) K, (float*) yCxhat, 2, 1, 1, (float*) KyCxhat); 
   \   000000EE   0xA813             ADD      R0,SP,#+76
   \   000000F0   0x9001             STR      R0,[SP, #+4]
   \   000000F2   0x2001             MOVS     R0,#+1
   \   000000F4   0x9000             STR      R0,[SP, #+0]
   \   000000F6   0x2301             MOVS     R3,#+1
   \   000000F8   0x2202             MOVS     R2,#+2
   \   000000FA   0xA902             ADD      R1,SP,#+8
   \   000000FC   0xA809             ADD      R0,SP,#+36
   \   000000FE   0x.... 0x....      BL       matrix_multiply
    380              matrix_addition((float*) AxhatBu, (float*) KyCxhat, 2, 1, (float*) xhat); 
   \   00000102   0x....             LDR.N    R0,??DataTable6_64
   \   00000104   0x9000             STR      R0,[SP, #+0]
   \   00000106   0x2301             MOVS     R3,#+1
   \   00000108   0x2202             MOVS     R2,#+2
   \   0000010A   0xA913             ADD      R1,SP,#+76
   \   0000010C   0xA80D             ADD      R0,SP,#+52
   \   0000010E   0x.... 0x....      BL       matrix_addition
    381          
    382              matrix_transpose((float*) A, 2, 2, (float*) AT); 
   \   00000112   0xAB19             ADD      R3,SP,#+100
   \   00000114   0x2202             MOVS     R2,#+2
   \   00000116   0x2102             MOVS     R1,#+2
   \   00000118   0x....             LDR.N    R0,??DataTable6_65
   \   0000011A   0x.... 0x....      BL       matrix_transpose
    383              matrix_multiply((float*) AP, (float*) AT, 2, 2, 2, (float*) APAT); 
   \   0000011E   0xA831             ADD      R0,SP,#+196
   \   00000120   0x9001             STR      R0,[SP, #+4]
   \   00000122   0x2002             MOVS     R0,#+2
   \   00000124   0x9000             STR      R0,[SP, #+0]
   \   00000126   0x2302             MOVS     R3,#+2
   \   00000128   0x2202             MOVS     R2,#+2
   \   0000012A   0xA919             ADD      R1,SP,#+100
   \   0000012C   0xA81D             ADD      R0,SP,#+116
   \   0000012E   0x.... 0x....      BL       matrix_multiply
    384              matrix_addition((float*) APAT, (float*) Sw, 2, 2, (float*) APATSw); 
   \   00000132   0xA82D             ADD      R0,SP,#+180
   \   00000134   0x9000             STR      R0,[SP, #+0]
   \   00000136   0x2302             MOVS     R3,#+2
   \   00000138   0x2202             MOVS     R2,#+2
   \   0000013A   0x....             LDR.N    R1,??DataTable6_70
   \   0000013C   0xA831             ADD      R0,SP,#+196
   \   0000013E   0x.... 0x....      BL       matrix_addition
    385              matrix_multiply((float*) K, (float*) C, 2, 1, 2, (float*) KC); 
   \   00000142   0xA829             ADD      R0,SP,#+164
   \   00000144   0x9001             STR      R0,[SP, #+4]
   \   00000146   0x2002             MOVS     R0,#+2
   \   00000148   0x9000             STR      R0,[SP, #+0]
   \   0000014A   0x2301             MOVS     R3,#+1
   \   0000014C   0x2202             MOVS     R2,#+2
   \   0000014E   0x....             LDR.N    R1,??DataTable6_67
   \   00000150   0xA809             ADD      R0,SP,#+36
   \   00000152   0x.... 0x....      BL       matrix_multiply
    386              matrix_multiply((float*) KC, (float*) P, 2, 2, 2, (float*) KCP); 
   \   00000156   0xA825             ADD      R0,SP,#+148
   \   00000158   0x9001             STR      R0,[SP, #+4]
   \   0000015A   0x2002             MOVS     R0,#+2
   \   0000015C   0x9000             STR      R0,[SP, #+0]
   \   0000015E   0x2302             MOVS     R3,#+2
   \   00000160   0x2202             MOVS     R2,#+2
   \   00000162   0x....             LDR.N    R1,??DataTable6_68
   \   00000164   0xA829             ADD      R0,SP,#+164
   \   00000166   0x.... 0x....      BL       matrix_multiply
    387              matrix_multiply((float*) KCP, (float*) AT, 2, 2, 2, (float*) KCPAT); 
   \   0000016A   0xA821             ADD      R0,SP,#+132
   \   0000016C   0x9001             STR      R0,[SP, #+4]
   \   0000016E   0x2002             MOVS     R0,#+2
   \   00000170   0x9000             STR      R0,[SP, #+0]
   \   00000172   0x2302             MOVS     R3,#+2
   \   00000174   0x2202             MOVS     R2,#+2
   \   00000176   0xA919             ADD      R1,SP,#+100
   \   00000178   0xA825             ADD      R0,SP,#+148
   \   0000017A   0x.... 0x....      BL       matrix_multiply
    388              matrix_subtraction((float*) APATSw, (float*) KCPAT, 2, 2, (float*) P); 
   \   0000017E   0x....             LDR.N    R0,??DataTable6_68
   \   00000180   0x9000             STR      R0,[SP, #+0]
   \   00000182   0x2302             MOVS     R3,#+2
   \   00000184   0x2202             MOVS     R2,#+2
   \   00000186   0xA921             ADD      R1,SP,#+132
   \   00000188   0xA82D             ADD      R0,SP,#+180
   \   0000018A   0x.... 0x....      BL       matrix_subtraction
    389          
    390          
    391              return xhat[0][0]; 
   \   0000018E   0x....             LDR.N    R0,??DataTable6_64
   \   00000190   0x6800             LDR      R0,[R0, #+0]
   \   00000192   0xB035             ADD      SP,SP,#+212
   \   00000194   0xBD00             POP      {PC}             ;; return
    392          } 

   \                                 In section .data, align 4
   \                     ??A:
   \   00000000   0x3F800000         DC32 3F800000H, 0BCA393EEH, 0H, 3F800000H
   \              0xBCA393EE   
   \              0x00000000   
   \              0x3F800000   

   \                                 In section .data, align 4
   \                     ??B:
   \   00000000   0x3CA393EE         DC32 3CA393EEH, 0H
   \              0x00000000   

   \                                 In section .data, align 4
   \                     ??C:
   \   00000000   0x3F800000         DC32 3F800000H, 0H
   \              0x00000000   

   \                                 In section .data, align 4
   \                     ??Sz:
   \   00000000   0x4189999A         DC32 4189999AH

   \                                 In section .data, align 4
   \                     ??Sw:
   \   00000000   0x3BA3D70A         DC32 3BA3D70AH, 3BA3D70AH, 3BA3D70AH, 3BA3D70AH
   \              0x3BA3D70A   
   \              0x3BA3D70A   
   \              0x3BA3D70A   

   \                                 In section .bss, align 4
   \                     ??xhat:
   \   00000000                      DS8 8

   \                                 In section .data, align 4
   \                     ??P:
   \   00000000   0x3BA3D70A         DC32 3BA3D70AH, 3BA3D70AH, 3BA3D70AH, 3BA3D70AH
   \              0x3BA3D70A   
   \              0x3BA3D70A   
   \              0x3BA3D70A   

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6:
   \   00000000   0x........         DC32     q_bias

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_1:
   \   00000000   0x........         DC32     dt

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_2:
   \   00000000   0x........         DC32     angle

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_3:
   \   00000000   0x........         DC32     Q_angle

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_4:
   \   00000000   0x........         DC32     P

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_5:
   \   00000000   0x........         DC32     Pdot

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_6:
   \   00000000   0x........         DC32     Q_gyro

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_7:
   \   00000000   0x........         DC32     angle_err

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_8:
   \   00000000   0x........         DC32     C_0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_9:
   \   00000000   0x........         DC32     PCt_0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_10:
   \   00000000   0x........         DC32     PCt_1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_11:
   \   00000000   0x........         DC32     R_angle

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_12:
   \   00000000   0x........         DC32     E

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_13:
   \   00000000   0x........         DC32     K_0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_14:
   \   00000000   0x........         DC32     K_1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_15:
   \   00000000   0x........         DC32     t_0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_16:
   \   00000000   0x........         DC32     t_1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_17:
   \   00000000   0x........         DC32     angle_dot

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_18:
   \   00000000   0x........         DC32     q_bias1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_19:
   \   00000000   0x........         DC32     dt1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_20:
   \   00000000   0x........         DC32     angle1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_21:
   \   00000000   0x........         DC32     Q_angle1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_22:
   \   00000000   0x........         DC32     `P1`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_23:
   \   00000000   0x........         DC32     Pdot1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_24:
   \   00000000   0x........         DC32     Q_gyro1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_25:
   \   00000000   0x........         DC32     angle_err1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_26:
   \   00000000   0x........         DC32     C_01

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_27:
   \   00000000   0x........         DC32     PCt_01

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_28:
   \   00000000   0x........         DC32     PCt_11

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_29:
   \   00000000   0x........         DC32     R_angle1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_30:
   \   00000000   0x........         DC32     E1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_31:
   \   00000000   0x........         DC32     K_01

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_32:
   \   00000000   0x........         DC32     K_11

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_33:
   \   00000000   0x........         DC32     t_01

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_34:
   \   00000000   0x........         DC32     t_11

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_35:
   \   00000000   0x........         DC32     angle_dot1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_36:
   \   00000000   0x........         DC32     X_b1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_37:
   \   00000000   0x........         DC32     X_a1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_38:
   \   00000000   0x........         DC32     P_a1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_39:
   \   00000000   0x........         DC32     Q1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_40:
   \   00000000   0x........         DC32     P_b1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_41:
   \   00000000   0x........         DC32     `R1`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_42:
   \   00000000   0x........         DC32     K1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_43:
   \   00000000   0x........         DC32     X_b2

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_44:
   \   00000000   0x........         DC32     X_a2

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_45:
   \   00000000   0x........         DC32     P_a2

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_46:
   \   00000000   0x........         DC32     Q2

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_47:
   \   00000000   0x........         DC32     P_b2

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_48:
   \   00000000   0x........         DC32     `R2`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_49:
   \   00000000   0x........         DC32     K2

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_50:
   \   00000000   0x........         DC32     X_b3

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_51:
   \   00000000   0x........         DC32     X_a3

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_52:
   \   00000000   0x........         DC32     P_a3

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_53:
   \   00000000   0x........         DC32     Q3

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_54:
   \   00000000   0x........         DC32     P_b3

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_55:
   \   00000000   0x........         DC32     `R3`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_56:
   \   00000000   0x........         DC32     K3

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_57:
   \   00000000   0x........         DC32     X_b4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_58:
   \   00000000   0x........         DC32     X_a4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_59:
   \   00000000   0x........         DC32     P_a4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_60:
   \   00000000   0x........         DC32     Q4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_61:
   \   00000000   0x........         DC32     P_b4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_62:
   \   00000000   0x........         DC32     `R4`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_63:
   \   00000000   0x........         DC32     K4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_64:
   \   00000000   0x........         DC32     ??xhat

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_65:
   \   00000000   0x........         DC32     ??A

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_66:
   \   00000000   0x........         DC32     ??B

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_67:
   \   00000000   0x........         DC32     ??C

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_68:
   \   00000000   0x........         DC32     ??P

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_69:
   \   00000000   0x........         DC32     ??Sz

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable6_70:
   \   00000000   0x........         DC32     ??Sw

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       12  Kalman_Filter
              12 -> __aeabi_fadd
              12 -> __aeabi_fdiv
              12 -> __aeabi_fmul
              12 -> __aeabi_fsub
              12 -> __aeabi_ui2f
       12  Kalman_Filter1
              12 -> __aeabi_fadd
              12 -> __aeabi_fdiv
              12 -> __aeabi_fmul
              12 -> __aeabi_fsub
              12 -> __aeabi_ui2f
        8  kalman_filter1
               8 -> __aeabi_fadd
               8 -> __aeabi_fdiv
               8 -> __aeabi_fmul
               8 -> __aeabi_fsub
        8  kalman_filter2
               8 -> __aeabi_fadd
               8 -> __aeabi_fdiv
               8 -> __aeabi_fmul
               8 -> __aeabi_fsub
        8  kalman_filter3
               8 -> __aeabi_fadd
               8 -> __aeabi_fdiv
               8 -> __aeabi_fmul
               8 -> __aeabi_fsub
        8  kalman_filter4
               8 -> __aeabi_fadd
               8 -> __aeabi_fdiv
               8 -> __aeabi_fmul
               8 -> __aeabi_fsub
      216  kalman_update
             216 -> matrix_addition
             216 -> matrix_inversion
             216 -> matrix_multiply
             216 -> matrix_subtraction
             216 -> matrix_transpose
       36  matrix_addition
              36 -> __aeabi_fadd
       48  matrix_inversion
              48 -> __aeabi_cfcmpeq
              48 -> __aeabi_f2d
              48 -> __aeabi_fdiv
              48 -> __aeabi_fmul
              48 -> __aeabi_fsub
              48 -> calloc
              48 -> fabs
              48 -> free
       44  matrix_multiply
              44 -> __aeabi_fadd
              44 -> __aeabi_fmul
       36  matrix_subtraction
              36 -> __aeabi_fsub
       16  matrix_transpose


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable6
       4  ??DataTable6_1
       4  ??DataTable6_10
       4  ??DataTable6_11
       4  ??DataTable6_12
       4  ??DataTable6_13
       4  ??DataTable6_14
       4  ??DataTable6_15
       4  ??DataTable6_16
       4  ??DataTable6_17
       4  ??DataTable6_18
       4  ??DataTable6_19
       4  ??DataTable6_2
       4  ??DataTable6_20
       4  ??DataTable6_21
       4  ??DataTable6_22
       4  ??DataTable6_23
       4  ??DataTable6_24
       4  ??DataTable6_25
       4  ??DataTable6_26
       4  ??DataTable6_27
       4  ??DataTable6_28
       4  ??DataTable6_29
       4  ??DataTable6_3
       4  ??DataTable6_30
       4  ??DataTable6_31
       4  ??DataTable6_32
       4  ??DataTable6_33
       4  ??DataTable6_34
       4  ??DataTable6_35
       4  ??DataTable6_36
       4  ??DataTable6_37
       4  ??DataTable6_38
       4  ??DataTable6_39
       4  ??DataTable6_4
       4  ??DataTable6_40
       4  ??DataTable6_41
       4  ??DataTable6_42
       4  ??DataTable6_43
       4  ??DataTable6_44
       4  ??DataTable6_45
       4  ??DataTable6_46
       4  ??DataTable6_47
       4  ??DataTable6_48
       4  ??DataTable6_49
       4  ??DataTable6_5
       4  ??DataTable6_50
       4  ??DataTable6_51
       4  ??DataTable6_52
       4  ??DataTable6_53
       4  ??DataTable6_54
       4  ??DataTable6_55
       4  ??DataTable6_56
       4  ??DataTable6_57
       4  ??DataTable6_58
       4  ??DataTable6_59
       4  ??DataTable6_6
       4  ??DataTable6_60
       4  ??DataTable6_61
       4  ??DataTable6_62
       4  ??DataTable6_63
       4  ??DataTable6_64
       4  ??DataTable6_65
       4  ??DataTable6_66
       4  ??DataTable6_67
       4  ??DataTable6_68
       4  ??DataTable6_69
       4  ??DataTable6_7
       4  ??DataTable6_70
       4  ??DataTable6_8
       4  ??DataTable6_9
      16  A
       8  B
       8  C
       1  C_0
       1  C_01
       4  E
       4  E1
       4  K1
       4  K2
       4  K3
       4  K4
       4  K_0
       4  K_01
       4  K_1
       4  K_11
     662  Kalman_Filter
     662  Kalman_Filter1
      16  P
      16  P
      16  P1
       4  PCt_0
       4  PCt_01
       4  PCt_1
       4  PCt_11
       4  P_a1
       4  P_a2
       4  P_a3
       4  P_a4
       4  P_b1
       4  P_b2
       4  P_b3
       4  P_b4
      16  Pdot
      16  Pdot1
       4  Q1
       4  Q2
       4  Q3
       4  Q4
       4  Q_angle
       4  Q_angle1
       4  Q_gyro
       4  Q_gyro1
       4  R1
       4  R2
       4  R3
       4  R4
       4  R_angle
       4  R_angle1
      16  Sw
       4  Sz
       4  X_a1
       4  X_a2
       4  X_a3
       4  X_a4
       4  X_b1
       4  X_b2
       4  X_b3
       4  X_b4
       4  angle
       4  angle1
       4  angle_dot
       4  angle_dot1
       4  angle_err
       4  angle_err1
       4  dt
       4  dt1
     148  kalman_filter1
     148  kalman_filter2
     148  kalman_filter3
     148  kalman_filter4
     406  kalman_update
      76  matrix_addition
     506  matrix_inversion
     112  matrix_multiply
      76  matrix_subtraction
      42  matrix_transpose
       4  q_bias
       4  q_bias1
       4  t_0
       4  t_01
       4  t_1
       4  t_11
       8  xhat

 
   192 bytes in section .bss
   180 bytes in section .data
     2 bytes in section .rodata
 3 418 bytes in section .text
 
 3 418 bytes of CODE  memory
     2 bytes of CONST memory
   372 bytes of DATA  memory

Errors: none
Warnings: 4
