###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.40.1.53790/W32 for ARM     03/Aug/2015  09:48:15 #
# Copyright 1999-2012 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  C:\Users\Thinkpad\Desktop\quadrotor150720飞行器跟随小车( #
#                    改I2C)\src\Sources\C\Component_C\ppl.c                   #
#    Command line =  "C:\Users\Thinkpad\Desktop\quadrotor150720飞行器跟随小车 #
#                    (改I2C)\src\Sources\C\Component_C\ppl.c" -D IAR -D       #
#                    TWR_K60N512 -lCN "C:\Users\Thinkpad\Desktop\quadrotor150 #
#                    720飞行器跟随小车(改I2C)\bin\Flash\List\" -lB            #
#                    "C:\Users\Thinkpad\Desktop\quadrotor150720飞行器跟随小车 #
#                    (改I2C)\bin\Flash\List\" -o                              #
#                    "C:\Users\Thinkpad\Desktop\quadrotor150720飞行器跟随小车 #
#                    (改I2C)\bin\Flash\Obj\" --no_cse --no_unroll             #
#                    --no_inline --no_code_motion --no_tbaa --no_clustering   #
#                    --no_scheduling --debug --endian=little --cpu=Cortex-M4  #
#                    -e --fpu=None --dlib_config "E:\Program Files\IAR        #
#                    Systems\Embedded Workbench 6.4\arm\INC\c\DLib_Config_Nor #
#                    mal.h" -I "C:\Users\Thinkpad\Desktop\quadrotor150720飞行 #
#                    器跟随小车(改I2C)\src\Sources\H\" -I                     #
#                    "C:\Users\Thinkpad\Desktop\quadrotor150720飞行器跟随小车 #
#                    (改I2C)\src\Sources\H\Component_H\" -I                   #
#                    "C:\Users\Thinkpad\Desktop\quadrotor150720飞行器跟随小车 #
#                    (改I2C)\src\Sources\H\Frame_H\" -Ol --use_c++_inline     #
#    List file    =  C:\Users\Thinkpad\Desktop\quadrotor150720飞行器跟随小车( #
#                    改I2C)\bin\Flash\List\ppl.lst                            #
#    Object file  =  C:\Users\Thinkpad\Desktop\quadrotor150720飞行器跟随小车( #
#                    改I2C)\bin\Flash\Obj\ppl.o                               #
#                                                                             #
#                                                                             #
###############################################################################

C:\Users\Thinkpad\Desktop\quadrotor150720飞行器跟随小车(改I2C)\src\Sources\C\Component_C\ppl.c
      1          #include "ppl.h"
      2          //锁相环频率为50/12*54=225M测试函数

   \                                 In section .text, align 2, keep-with-next
      3          void pllinit225M(void)
      4          {
      5          	uint32_t temp_reg;
      6                  //使能IO端口时钟    
      7              SIM_SCGC5 |= (SIM_SCGC5_PORTA_MASK
      8                                        | SIM_SCGC5_PORTB_MASK
      9                                        | SIM_SCGC5_PORTC_MASK
     10                                        | SIM_SCGC5_PORTD_MASK
     11                                        | SIM_SCGC5_PORTE_MASK );
   \                     pllinit225M:
   \   00000000   0x.... 0x....      LDR.W    R0,??DataTable8  ;; 0x40048038
   \   00000004   0x6800             LDR      R0,[R0, #+0]
   \   00000006   0xF450 0x5078      ORRS     R0,R0,#0x3E00
   \   0000000A   0x.... 0x....      LDR.W    R1,??DataTable8  ;; 0x40048038
   \   0000000E   0x6008             STR      R0,[R1, #+0]
     12              //这里处在默认的FEI模式
     13              //首先移动到FBE模式
     14              MCG_C2 = 0;  
   \   00000010   0x.... 0x....      LDR.W    R0,??DataTable8_1  ;; 0x40064001
   \   00000014   0x2100             MOVS     R1,#+0
   \   00000016   0x7001             STRB     R1,[R0, #+0]
     15              //MCG_C2 = MCG_C2_RANGE(2) | MCG_C2_HGO_MASK | MCG_C2_EREFS_MASK;
     16              //初始化晶振后释放锁定状态的振荡器和GPIO
     17              SIM_SCGC4 |= SIM_SCGC4_LLWU_MASK;
   \   00000018   0x.... 0x....      LDR.W    R0,??DataTable8_2  ;; 0x40048034
   \   0000001C   0x6800             LDR      R0,[R0, #+0]
   \   0000001E   0xF050 0x5080      ORRS     R0,R0,#0x10000000
   \   00000022   0x.... 0x....      LDR.W    R1,??DataTable8_2  ;; 0x40048034
   \   00000026   0x6008             STR      R0,[R1, #+0]
     18              LLWU_CS |= LLWU_CS_ACKISO_MASK;
   \   00000028   0x.... 0x....      LDR.W    R0,??DataTable8_3  ;; 0x4007c008
   \   0000002C   0x7800             LDRB     R0,[R0, #+0]
   \   0000002E   0xF050 0x0080      ORRS     R0,R0,#0x80
   \   00000032   0x.... 0x....      LDR.W    R1,??DataTable8_3  ;; 0x4007c008
   \   00000036   0x7008             STRB     R0,[R1, #+0]
     19              
     20              //选择外部晶振，参考分频器，清IREFS来启动外部晶振
     21              //011 If RANGE = 0, Divide Factor is 8; for all other RANGE values, Divide Factor is 256.
     22              MCG_C1 = MCG_C1_CLKS(2) | MCG_C1_FRDIV(3);
   \   00000038   0x.... 0x....      LDR.W    R0,??DataTable8_4  ;; 0x40064000
   \   0000003C   0x2198             MOVS     R1,#+152
   \   0000003E   0x7001             STRB     R1,[R0, #+0]
     23              
     24              //等待晶振稳定	    
     25              //while (!(MCG_S & MCG_S_OSCINIT_MASK)){}              //等待锁相环初始化结束
     26              while (MCG_S & MCG_S_IREFST_MASK){}                  //等待时钟切换到外部参考时钟
   \                     ??pllinit225M_0:
   \   00000040   0x.... 0x....      LDR.W    R0,??DataTable8_5  ;; 0x40064006
   \   00000044   0x7800             LDRB     R0,[R0, #+0]
   \   00000046   0x06C0             LSLS     R0,R0,#+27
   \   00000048   0xD4FA             BMI.N    ??pllinit225M_0
     27              while (((MCG_S & MCG_S_CLKST_MASK) >> MCG_S_CLKST_SHIFT) != 0x2){}
   \                     ??pllinit225M_1:
   \   0000004A   0x.... 0x....      LDR.W    R0,??DataTable8_5  ;; 0x40064006
   \   0000004E   0x7800             LDRB     R0,[R0, #+0]
   \   00000050   0xF3C0 0x0081      UBFX     R0,R0,#+2,#+2
   \   00000054   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000056   0x2802             CMP      R0,#+2
   \   00000058   0xD1F7             BNE.N    ??pllinit225M_1
     28              
     29              //进入FBE模式,
     30              //0x18==25分频=2M,
     31              //0x08==15分频=3.333M 
     32              //0x09==16分频=3.125M,
     33              //0x10==17分频=2.94M 
     34              //0x11==18分频=2.7778M 
     35              //0x12==19分频=2.63M,
     36              //0x13==20分频=2.5M    
     37              MCG_C5 = MCG_C5_PRDIV(0x0b);                
   \   0000005A   0x.... 0x....      LDR.W    R0,??DataTable8_6  ;; 0x40064004
   \   0000005E   0x210B             MOVS     R1,#+11
   \   00000060   0x7001             STRB     R1,[R0, #+0]
     38              
     39              //确保MCG_C6处于复位状态，禁止LOLIE、PLL、和时钟控制器，清PLL VCO分频器
     40              MCG_C6 = 0x0;
   \   00000062   0x.... 0x....      LDR.W    R0,??DataTable8_7  ;; 0x40064005
   \   00000066   0x2100             MOVS     R1,#+0
   \   00000068   0x7001             STRB     R1,[R0, #+0]
     41              
     42              //保存FMC_PFAPR当前的值
     43              temp_reg = FMC_PFAPR;
   \   0000006A   0x.... 0x....      LDR.W    R0,??DataTable8_8  ;; 0x4001f000
   \   0000006E   0x6800             LDR      R0,[R0, #+0]
     44              
     45              //通过M&PFD置位M0PFD来禁止预取功能
     46              FMC_PFAPR |= FMC_PFAPR_M7PFD_MASK | FMC_PFAPR_M6PFD_MASK | FMC_PFAPR_M5PFD_MASK
     47                               | FMC_PFAPR_M4PFD_MASK | FMC_PFAPR_M3PFD_MASK | FMC_PFAPR_M2PFD_MASK
     48                               | FMC_PFAPR_M1PFD_MASK | FMC_PFAPR_M0PFD_MASK;    
   \   00000070   0x.... 0x....      LDR.W    R1,??DataTable8_8  ;; 0x4001f000
   \   00000074   0x6809             LDR      R1,[R1, #+0]
   \   00000076   0xF451 0x017F      ORRS     R1,R1,#0xFF0000
   \   0000007A   0x.... 0x....      LDR.W    R2,??DataTable8_8  ;; 0x4001f000
   \   0000007E   0x6011             STR      R1,[R2, #+0]
     49              ///设置系统分频器
     50              //MCG=PLL, core = MCG, bus = MCG/3, FlexBus = MCG/3, Flash clock= MCG/9
     51              SIM_CLKDIV1 = SIM_CLKDIV1_OUTDIV1(0) | SIM_CLKDIV1_OUTDIV2(2) 
     52                           | SIM_CLKDIV1_OUTDIV3(2) | SIM_CLKDIV1_OUTDIV4(8);       
   \   00000080   0x.... 0x....      LDR.W    R1,??DataTable9  ;; 0x40048044
   \   00000084   0xF05F 0x720A      MOVS     R2,#+36175872
   \   00000088   0x600A             STR      R2,[R1, #+0]
     53              
     54              //从新存FMC_PFAPR的原始值
     55              FMC_PFAPR = temp_reg; 
   \   0000008A   0x.... 0x....      LDR.W    R1,??DataTable8_8  ;; 0x4001f000
   \   0000008E   0x6008             STR      R0,[R1, #+0]
     56              
     57              //设置VCO分频器，使能PLL为100MHz, LOLIE=0, PLLS=1, CME=0, VDIV=26
     58              MCG_C6 = MCG_C6_PLLS_MASK | MCG_C6_VDIV(30);  //VDIV = 31 (x54)
   \   00000090   0x.... 0x....      LDR.W    R0,??DataTable8_7  ;; 0x40064005
   \   00000094   0x215E             MOVS     R1,#+94
   \   00000096   0x7001             STRB     R1,[R0, #+0]
     59                                                            //VDIV = 26 (x50)
     60              while (!(MCG_S & MCG_S_PLLST_MASK)){}; // wait for PLL status bit to set    
   \                     ??pllinit225M_2:
   \   00000098   0x.... 0x....      LDR.W    R0,??DataTable8_5  ;; 0x40064006
   \   0000009C   0x7800             LDRB     R0,[R0, #+0]
   \   0000009E   0x0680             LSLS     R0,R0,#+26
   \   000000A0   0xD5FA             BPL.N    ??pllinit225M_2
     61              while (!(MCG_S & MCG_S_LOCK_MASK)){}; // Wait for LOCK bit to set    
   \                     ??pllinit225M_3:
   \   000000A2   0x.... 0x....      LDR.W    R0,??DataTable8_5  ;; 0x40064006
   \   000000A6   0x7800             LDRB     R0,[R0, #+0]
   \   000000A8   0x0640             LSLS     R0,R0,#+25
   \   000000AA   0xD5FA             BPL.N    ??pllinit225M_3
     62              
     63              //进入PBE模式    
     64              //通过清零CLKS位来进入PEE模式
     65              // CLKS=0, FRDIV=3, IREFS=0, IRCLKEN=0, IREFSTEN=0
     66              MCG_C1 &= ~MCG_C1_CLKS_MASK;
   \   000000AC   0x.... 0x....      LDR.W    R0,??DataTable8_4  ;; 0x40064000
   \   000000B0   0x7800             LDRB     R0,[R0, #+0]
   \   000000B2   0xF010 0x003F      ANDS     R0,R0,#0x3F
   \   000000B6   0x.... 0x....      LDR.W    R1,??DataTable8_4  ;; 0x40064000
   \   000000BA   0x7008             STRB     R0,[R1, #+0]
     67              
     68              //等待时钟状态位更新
     69              while (((MCG_S & MCG_S_CLKST_MASK) >> MCG_S_CLKST_SHIFT) != 0x3){};
   \                     ??pllinit225M_4:
   \   000000BC   0x.... 0x....      LDR.W    R0,??DataTable8_5  ;; 0x40064006
   \   000000C0   0x7800             LDRB     R0,[R0, #+0]
   \   000000C2   0xF3C0 0x0081      UBFX     R0,R0,#+2,#+2
   \   000000C6   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000C8   0x2803             CMP      R0,#+3
   \   000000CA   0xD1F7             BNE.N    ??pllinit225M_4
     70              //SIM_CLKDIV2 |= SIM_CLKDIV2_USBDIV(1);  
     71              
     72              //设置跟踪时钟为内核时钟
     73              SIM_SOPT2 |= SIM_SOPT2_TRACECLKSEL_MASK;	
   \   000000CC   0x.... 0x....      LDR.W    R0,??DataTable9_1  ;; 0x40048004
   \   000000D0   0x6800             LDR      R0,[R0, #+0]
   \   000000D2   0xF450 0x5080      ORRS     R0,R0,#0x1000
   \   000000D6   0x.... 0x....      LDR.W    R1,??DataTable9_1  ;; 0x40048004
   \   000000DA   0x6008             STR      R0,[R1, #+0]
     74              //在PTA6引脚上使能TRACE_CLKOU功能
     75              PORTA_PCR6 = ( PORT_PCR_MUX(0x7));  
   \   000000DC   0x.... 0x....      LDR.W    R0,??DataTable9_2  ;; 0x40049018
   \   000000E0   0xF44F 0x61E0      MOV      R1,#+1792
   \   000000E4   0x6001             STR      R1,[R0, #+0]
     76              //使能FlexBus模块时钟
     77              SIM_SCGC7 |= SIM_SCGC7_FLEXBUS_MASK;
   \   000000E6   0x.... 0x....      LDR.W    R0,??DataTable9_3  ;; 0x40048040
   \   000000EA   0x6800             LDR      R0,[R0, #+0]
   \   000000EC   0xF050 0x0001      ORRS     R0,R0,#0x1
   \   000000F0   0x.... 0x....      LDR.W    R1,??DataTable9_3  ;; 0x40048040
   \   000000F4   0x6008             STR      R0,[R1, #+0]
     78              //在PTA6引脚上使能FB_CLKOUT功能
     79              PORTC_PCR3 = ( PORT_PCR_MUX(0x5));
   \   000000F6   0x.... 0x....      LDR.W    R0,??DataTable11  ;; 0x4004b00c
   \   000000FA   0xF44F 0x61A0      MOV      R1,#+1280
   \   000000FE   0x6001             STR      R1,[R0, #+0]
     80          }
   \   00000100   0x4770             BX       LR               ;; return
     81          //锁相环频率为50/13*55=211.538462M测试函数

   \                                 In section .text, align 2, keep-with-next
     82          void pllinit211M(void)
     83          {
     84          	uint32_t temp_reg;
     85                  //使能IO端口时钟    
     86              SIM_SCGC5 |= (SIM_SCGC5_PORTA_MASK
     87                                        | SIM_SCGC5_PORTB_MASK
     88                                        | SIM_SCGC5_PORTC_MASK
     89                                        | SIM_SCGC5_PORTD_MASK
     90                                        | SIM_SCGC5_PORTE_MASK );
   \                     pllinit211M:
   \   00000000   0x.... 0x....      LDR.W    R0,??DataTable8  ;; 0x40048038
   \   00000004   0x6800             LDR      R0,[R0, #+0]
   \   00000006   0xF450 0x5078      ORRS     R0,R0,#0x3E00
   \   0000000A   0x.... 0x....      LDR.W    R1,??DataTable8  ;; 0x40048038
   \   0000000E   0x6008             STR      R0,[R1, #+0]
     91              //这里处在默认的FEI模式
     92              //首先移动到FBE模式
     93              MCG_C2 = 0;  
   \   00000010   0x.... 0x....      LDR.W    R0,??DataTable8_1  ;; 0x40064001
   \   00000014   0x2100             MOVS     R1,#+0
   \   00000016   0x7001             STRB     R1,[R0, #+0]
     94              //MCG_C2 = MCG_C2_RANGE(2) | MCG_C2_HGO_MASK | MCG_C2_EREFS_MASK;
     95              //初始化晶振后释放锁定状态的振荡器和GPIO
     96              SIM_SCGC4 |= SIM_SCGC4_LLWU_MASK;
   \   00000018   0x.... 0x....      LDR.W    R0,??DataTable8_2  ;; 0x40048034
   \   0000001C   0x6800             LDR      R0,[R0, #+0]
   \   0000001E   0xF050 0x5080      ORRS     R0,R0,#0x10000000
   \   00000022   0x.... 0x....      LDR.W    R1,??DataTable8_2  ;; 0x40048034
   \   00000026   0x6008             STR      R0,[R1, #+0]
     97              LLWU_CS |= LLWU_CS_ACKISO_MASK;
   \   00000028   0x.... 0x....      LDR.W    R0,??DataTable8_3  ;; 0x4007c008
   \   0000002C   0x7800             LDRB     R0,[R0, #+0]
   \   0000002E   0xF050 0x0080      ORRS     R0,R0,#0x80
   \   00000032   0x.... 0x....      LDR.W    R1,??DataTable8_3  ;; 0x4007c008
   \   00000036   0x7008             STRB     R0,[R1, #+0]
     98              
     99              //选择外部晶振，参考分频器，清IREFS来启动外部晶振
    100              //011 If RANGE = 0, Divide Factor is 8; for all other RANGE values, Divide Factor is 256.
    101              MCG_C1 = MCG_C1_CLKS(2) | MCG_C1_FRDIV(3);
   \   00000038   0x.... 0x....      LDR.W    R0,??DataTable8_4  ;; 0x40064000
   \   0000003C   0x2198             MOVS     R1,#+152
   \   0000003E   0x7001             STRB     R1,[R0, #+0]
    102              
    103              //等待晶振稳定	    
    104              //while (!(MCG_S & MCG_S_OSCINIT_MASK)){}              //等待锁相环初始化结束
    105              while (MCG_S & MCG_S_IREFST_MASK){}                  //等待时钟切换到外部参考时钟
   \                     ??pllinit211M_0:
   \   00000040   0x.... 0x....      LDR.W    R0,??DataTable8_5  ;; 0x40064006
   \   00000044   0x7800             LDRB     R0,[R0, #+0]
   \   00000046   0x06C0             LSLS     R0,R0,#+27
   \   00000048   0xD4FA             BMI.N    ??pllinit211M_0
    106              while (((MCG_S & MCG_S_CLKST_MASK) >> MCG_S_CLKST_SHIFT) != 0x2){}
   \                     ??pllinit211M_1:
   \   0000004A   0x.... 0x....      LDR.W    R0,??DataTable8_5  ;; 0x40064006
   \   0000004E   0x7800             LDRB     R0,[R0, #+0]
   \   00000050   0xF3C0 0x0081      UBFX     R0,R0,#+2,#+2
   \   00000054   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000056   0x2802             CMP      R0,#+2
   \   00000058   0xD1F7             BNE.N    ??pllinit211M_1
    107              
    108              //进入FBE模式,
    109              //0x18==25分频=2M,
    110              //0x08==15分频=3.333M 
    111              //0x09==16分频=3.125M,
    112              //0x10==17分频=2.94M 
    113              //0x11==18分频=2.7778M 
    114              //0x12==19分频=2.63M,
    115              //0x13==20分频=2.5M    
    116              MCG_C5 = MCG_C5_PRDIV(0x0C);                
   \   0000005A   0x.... 0x....      LDR.W    R0,??DataTable8_6  ;; 0x40064004
   \   0000005E   0x210C             MOVS     R1,#+12
   \   00000060   0x7001             STRB     R1,[R0, #+0]
    117              
    118              //确保MCG_C6处于复位状态，禁止LOLIE、PLL、和时钟控制器，清PLL VCO分频器
    119              MCG_C6 = 0x0;
   \   00000062   0x.... 0x....      LDR.W    R0,??DataTable8_7  ;; 0x40064005
   \   00000066   0x2100             MOVS     R1,#+0
   \   00000068   0x7001             STRB     R1,[R0, #+0]
    120              
    121              //保存FMC_PFAPR当前的值
    122              temp_reg = FMC_PFAPR;
   \   0000006A   0x.... 0x....      LDR.W    R0,??DataTable8_8  ;; 0x4001f000
   \   0000006E   0x6800             LDR      R0,[R0, #+0]
    123              
    124              //通过M&PFD置位M0PFD来禁止预取功能
    125              FMC_PFAPR |= FMC_PFAPR_M7PFD_MASK | FMC_PFAPR_M6PFD_MASK | FMC_PFAPR_M5PFD_MASK
    126                               | FMC_PFAPR_M4PFD_MASK | FMC_PFAPR_M3PFD_MASK | FMC_PFAPR_M2PFD_MASK
    127                               | FMC_PFAPR_M1PFD_MASK | FMC_PFAPR_M0PFD_MASK;    
   \   00000070   0x.... 0x....      LDR.W    R1,??DataTable8_8  ;; 0x4001f000
   \   00000074   0x6809             LDR      R1,[R1, #+0]
   \   00000076   0xF451 0x017F      ORRS     R1,R1,#0xFF0000
   \   0000007A   0x.... 0x....      LDR.W    R2,??DataTable8_8  ;; 0x4001f000
   \   0000007E   0x6011             STR      R1,[R2, #+0]
    128              ///设置系统分频器
    129              //MCG=PLL, core = MCG, bus = MCG/3, FlexBus = MCG/3, Flash clock= MCG/8
    130              SIM_CLKDIV1 = SIM_CLKDIV1_OUTDIV1(0) | SIM_CLKDIV1_OUTDIV2(2) 
    131                           | SIM_CLKDIV1_OUTDIV3(2) | SIM_CLKDIV1_OUTDIV4(7);       
   \   00000080   0x.... 0x....      LDR.W    R1,??DataTable9  ;; 0x40048044
   \   00000084   0x.... 0x....      LDR.W    R2,??DataTable9_4  ;; 0x2270000
   \   00000088   0x600A             STR      R2,[R1, #+0]
    132              
    133              //从新存FMC_PFAPR的原始值
    134              FMC_PFAPR = temp_reg; 
   \   0000008A   0x.... 0x....      LDR.W    R1,??DataTable8_8  ;; 0x4001f000
   \   0000008E   0x6008             STR      R0,[R1, #+0]
    135              
    136              //设置VCO分频器，使能PLL为100MHz, LOLIE=0, PLLS=1, CME=0, VDIV=26
    137              MCG_C6 = MCG_C6_PLLS_MASK | MCG_C6_VDIV(30);  //VDIV = 31 (x54)
   \   00000090   0x.... 0x....      LDR.W    R0,??DataTable8_7  ;; 0x40064005
   \   00000094   0x215E             MOVS     R1,#+94
   \   00000096   0x7001             STRB     R1,[R0, #+0]
    138                                                            //VDIV = 26 (x50)
    139              while (!(MCG_S & MCG_S_PLLST_MASK)){}; // wait for PLL status bit to set    
   \                     ??pllinit211M_2:
   \   00000098   0x.... 0x....      LDR.W    R0,??DataTable8_5  ;; 0x40064006
   \   0000009C   0x7800             LDRB     R0,[R0, #+0]
   \   0000009E   0x0680             LSLS     R0,R0,#+26
   \   000000A0   0xD5FA             BPL.N    ??pllinit211M_2
    140              while (!(MCG_S & MCG_S_LOCK_MASK)){}; // Wait for LOCK bit to set    
   \                     ??pllinit211M_3:
   \   000000A2   0x.... 0x....      LDR.W    R0,??DataTable8_5  ;; 0x40064006
   \   000000A6   0x7800             LDRB     R0,[R0, #+0]
   \   000000A8   0x0640             LSLS     R0,R0,#+25
   \   000000AA   0xD5FA             BPL.N    ??pllinit211M_3
    141              
    142              //进入PBE模式    
    143              //通过清零CLKS位来进入PEE模式
    144              // CLKS=0, FRDIV=3, IREFS=0, IRCLKEN=0, IREFSTEN=0
    145              MCG_C1 &= ~MCG_C1_CLKS_MASK;
   \   000000AC   0x.... 0x....      LDR.W    R0,??DataTable8_4  ;; 0x40064000
   \   000000B0   0x7800             LDRB     R0,[R0, #+0]
   \   000000B2   0xF010 0x003F      ANDS     R0,R0,#0x3F
   \   000000B6   0x.... 0x....      LDR.W    R1,??DataTable8_4  ;; 0x40064000
   \   000000BA   0x7008             STRB     R0,[R1, #+0]
    146              
    147              //等待时钟状态位更新
    148              while (((MCG_S & MCG_S_CLKST_MASK) >> MCG_S_CLKST_SHIFT) != 0x3){};
   \                     ??pllinit211M_4:
   \   000000BC   0x.... 0x....      LDR.W    R0,??DataTable8_5  ;; 0x40064006
   \   000000C0   0x7800             LDRB     R0,[R0, #+0]
   \   000000C2   0xF3C0 0x0081      UBFX     R0,R0,#+2,#+2
   \   000000C6   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000C8   0x2803             CMP      R0,#+3
   \   000000CA   0xD1F7             BNE.N    ??pllinit211M_4
    149              //SIM_CLKDIV2 |= SIM_CLKDIV2_USBDIV(1);  
    150              
    151              //设置跟踪时钟为内核时钟
    152              SIM_SOPT2 |= SIM_SOPT2_TRACECLKSEL_MASK;	
   \   000000CC   0x.... 0x....      LDR.W    R0,??DataTable9_1  ;; 0x40048004
   \   000000D0   0x6800             LDR      R0,[R0, #+0]
   \   000000D2   0xF450 0x5080      ORRS     R0,R0,#0x1000
   \   000000D6   0x.... 0x....      LDR.W    R1,??DataTable9_1  ;; 0x40048004
   \   000000DA   0x6008             STR      R0,[R1, #+0]
    153              //在PTA6引脚上使能TRACE_CLKOU功能
    154              PORTA_PCR6 = ( PORT_PCR_MUX(0x7));  
   \   000000DC   0x.... 0x....      LDR.W    R0,??DataTable9_2  ;; 0x40049018
   \   000000E0   0xF44F 0x61E0      MOV      R1,#+1792
   \   000000E4   0x6001             STR      R1,[R0, #+0]
    155              //使能FlexBus模块时钟
    156              SIM_SCGC7 |= SIM_SCGC7_FLEXBUS_MASK;
   \   000000E6   0x.... 0x....      LDR.W    R0,??DataTable9_3  ;; 0x40048040
   \   000000EA   0x6800             LDR      R0,[R0, #+0]
   \   000000EC   0xF050 0x0001      ORRS     R0,R0,#0x1
   \   000000F0   0x.... 0x....      LDR.W    R1,??DataTable9_3  ;; 0x40048040
   \   000000F4   0x6008             STR      R0,[R1, #+0]
    157              //在PTA6引脚上使能FB_CLKOUT功能
    158              PORTC_PCR3 = ( PORT_PCR_MUX(0x5));
   \   000000F6   0x.... 0x....      LDR.W    R0,??DataTable11  ;; 0x4004b00c
   \   000000FA   0xF44F 0x61A0      MOV      R1,#+1280
   \   000000FE   0x6001             STR      R1,[R0, #+0]
    159          }
   \   00000100   0x4770             BX       LR               ;; return
    160          //锁相环频率为50/13*54=207.7M测试函数

   \                                 In section .text, align 2, keep-with-next
    161          void pllinit207M(void)
    162          {
    163          	uint32_t temp_reg;
    164                  //使能IO端口时钟    
    165              SIM_SCGC5 |= (SIM_SCGC5_PORTA_MASK
    166                                        | SIM_SCGC5_PORTB_MASK
    167                                        | SIM_SCGC5_PORTC_MASK
    168                                        | SIM_SCGC5_PORTD_MASK
    169                                        | SIM_SCGC5_PORTE_MASK );
   \                     pllinit207M:
   \   00000000   0x.... 0x....      LDR.W    R0,??DataTable8  ;; 0x40048038
   \   00000004   0x6800             LDR      R0,[R0, #+0]
   \   00000006   0xF450 0x5078      ORRS     R0,R0,#0x3E00
   \   0000000A   0x.... 0x....      LDR.W    R1,??DataTable8  ;; 0x40048038
   \   0000000E   0x6008             STR      R0,[R1, #+0]
    170              //这里处在默认的FEI模式
    171              //首先移动到FBE模式
    172              MCG_C2 = 0;  
   \   00000010   0x.... 0x....      LDR.W    R0,??DataTable8_1  ;; 0x40064001
   \   00000014   0x2100             MOVS     R1,#+0
   \   00000016   0x7001             STRB     R1,[R0, #+0]
    173              //MCG_C2 = MCG_C2_RANGE(2) | MCG_C2_HGO_MASK | MCG_C2_EREFS_MASK;
    174              //初始化晶振后释放锁定状态的振荡器和GPIO
    175              SIM_SCGC4 |= SIM_SCGC4_LLWU_MASK;
   \   00000018   0x.... 0x....      LDR.W    R0,??DataTable8_2  ;; 0x40048034
   \   0000001C   0x6800             LDR      R0,[R0, #+0]
   \   0000001E   0xF050 0x5080      ORRS     R0,R0,#0x10000000
   \   00000022   0x.... 0x....      LDR.W    R1,??DataTable8_2  ;; 0x40048034
   \   00000026   0x6008             STR      R0,[R1, #+0]
    176              LLWU_CS |= LLWU_CS_ACKISO_MASK;
   \   00000028   0x.... 0x....      LDR.W    R0,??DataTable8_3  ;; 0x4007c008
   \   0000002C   0x7800             LDRB     R0,[R0, #+0]
   \   0000002E   0xF050 0x0080      ORRS     R0,R0,#0x80
   \   00000032   0x.... 0x....      LDR.W    R1,??DataTable8_3  ;; 0x4007c008
   \   00000036   0x7008             STRB     R0,[R1, #+0]
    177              
    178              //选择外部晶振，参考分频器，清IREFS来启动外部晶振
    179              //011 If RANGE = 0, Divide Factor is 8; for all other RANGE values, Divide Factor is 256.
    180              MCG_C1 = MCG_C1_CLKS(2) | MCG_C1_FRDIV(3);
   \   00000038   0x.... 0x....      LDR.W    R0,??DataTable8_4  ;; 0x40064000
   \   0000003C   0x2198             MOVS     R1,#+152
   \   0000003E   0x7001             STRB     R1,[R0, #+0]
    181              
    182              //等待晶振稳定	    
    183              //while (!(MCG_S & MCG_S_OSCINIT_MASK)){}              //等待锁相环初始化结束
    184              while (MCG_S & MCG_S_IREFST_MASK){}                  //等待时钟切换到外部参考时钟
   \                     ??pllinit207M_0:
   \   00000040   0x.... 0x....      LDR.W    R0,??DataTable8_5  ;; 0x40064006
   \   00000044   0x7800             LDRB     R0,[R0, #+0]
   \   00000046   0x06C0             LSLS     R0,R0,#+27
   \   00000048   0xD4FA             BMI.N    ??pllinit207M_0
    185              while (((MCG_S & MCG_S_CLKST_MASK) >> MCG_S_CLKST_SHIFT) != 0x2){}
   \                     ??pllinit207M_1:
   \   0000004A   0x.... 0x....      LDR.W    R0,??DataTable8_5  ;; 0x40064006
   \   0000004E   0x7800             LDRB     R0,[R0, #+0]
   \   00000050   0xF3C0 0x0081      UBFX     R0,R0,#+2,#+2
   \   00000054   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000056   0x2802             CMP      R0,#+2
   \   00000058   0xD1F7             BNE.N    ??pllinit207M_1
    186              
    187              //进入FBE模式,
    188              //0x18==25分频=2M,
    189              //0x08==15分频=3.333M 
    190              //0x09==16分频=3.125M,
    191              //0x10==17分频=2.94M 
    192              //0x11==18分频=2.7778M 
    193              //0x12==19分频=2.63M,
    194              //0x13==20分频=2.5M    
    195              MCG_C5 = MCG_C5_PRDIV(0x0C);                
   \   0000005A   0x.... 0x....      LDR.W    R0,??DataTable8_6  ;; 0x40064004
   \   0000005E   0x210C             MOVS     R1,#+12
   \   00000060   0x7001             STRB     R1,[R0, #+0]
    196              
    197              //确保MCG_C6处于复位状态，禁止LOLIE、PLL、和时钟控制器，清PLL VCO分频器
    198              MCG_C6 = 0x0;
   \   00000062   0x.... 0x....      LDR.W    R0,??DataTable8_7  ;; 0x40064005
   \   00000066   0x2100             MOVS     R1,#+0
   \   00000068   0x7001             STRB     R1,[R0, #+0]
    199              
    200              //保存FMC_PFAPR当前的值
    201              temp_reg = FMC_PFAPR;
   \   0000006A   0x.... 0x....      LDR.W    R0,??DataTable8_8  ;; 0x4001f000
   \   0000006E   0x6800             LDR      R0,[R0, #+0]
    202              
    203              //通过M&PFD置位M0PFD来禁止预取功能
    204              FMC_PFAPR |= FMC_PFAPR_M7PFD_MASK | FMC_PFAPR_M6PFD_MASK | FMC_PFAPR_M5PFD_MASK
    205                               | FMC_PFAPR_M4PFD_MASK | FMC_PFAPR_M3PFD_MASK | FMC_PFAPR_M2PFD_MASK
    206                               | FMC_PFAPR_M1PFD_MASK | FMC_PFAPR_M0PFD_MASK;    
   \   00000070   0x.... 0x....      LDR.W    R1,??DataTable8_8  ;; 0x4001f000
   \   00000074   0x6809             LDR      R1,[R1, #+0]
   \   00000076   0xF451 0x017F      ORRS     R1,R1,#0xFF0000
   \   0000007A   0x.... 0x....      LDR.W    R2,??DataTable8_8  ;; 0x4001f000
   \   0000007E   0x6011             STR      R1,[R2, #+0]
    207              ///设置系统分频器
    208              //MCG=PLL, core = MCG, bus = MCG/3, FlexBus = MCG/3, Flash clock= MCG/8
    209              SIM_CLKDIV1 = SIM_CLKDIV1_OUTDIV1(0) | SIM_CLKDIV1_OUTDIV2(2) 
    210                           | SIM_CLKDIV1_OUTDIV3(2) | SIM_CLKDIV1_OUTDIV4(7);       
   \   00000080   0x.... 0x....      LDR.W    R1,??DataTable9  ;; 0x40048044
   \   00000084   0x.... 0x....      LDR.W    R2,??DataTable9_4  ;; 0x2270000
   \   00000088   0x600A             STR      R2,[R1, #+0]
    211              
    212              //从新存FMC_PFAPR的原始值
    213              FMC_PFAPR = temp_reg; 
   \   0000008A   0x.... 0x....      LDR.W    R1,??DataTable8_8  ;; 0x4001f000
   \   0000008E   0x6008             STR      R0,[R1, #+0]
    214              
    215              //设置VCO分频器，使能PLL为100MHz, LOLIE=0, PLLS=1, CME=0, VDIV=26
    216              MCG_C6 = MCG_C6_PLLS_MASK | MCG_C6_VDIV(30);  //VDIV = 31 (x54)
   \   00000090   0x.... 0x....      LDR.W    R0,??DataTable8_7  ;; 0x40064005
   \   00000094   0x215E             MOVS     R1,#+94
   \   00000096   0x7001             STRB     R1,[R0, #+0]
    217                                                            //VDIV = 26 (x50)
    218              while (!(MCG_S & MCG_S_PLLST_MASK)){}; // wait for PLL status bit to set    
   \                     ??pllinit207M_2:
   \   00000098   0x.... 0x....      LDR.W    R0,??DataTable8_5  ;; 0x40064006
   \   0000009C   0x7800             LDRB     R0,[R0, #+0]
   \   0000009E   0x0680             LSLS     R0,R0,#+26
   \   000000A0   0xD5FA             BPL.N    ??pllinit207M_2
    219              while (!(MCG_S & MCG_S_LOCK_MASK)){}; // Wait for LOCK bit to set    
   \                     ??pllinit207M_3:
   \   000000A2   0x.... 0x....      LDR.W    R0,??DataTable8_5  ;; 0x40064006
   \   000000A6   0x7800             LDRB     R0,[R0, #+0]
   \   000000A8   0x0640             LSLS     R0,R0,#+25
   \   000000AA   0xD5FA             BPL.N    ??pllinit207M_3
    220              
    221              //进入PBE模式    
    222              //通过清零CLKS位来进入PEE模式
    223              // CLKS=0, FRDIV=3, IREFS=0, IRCLKEN=0, IREFSTEN=0
    224              MCG_C1 &= ~MCG_C1_CLKS_MASK;
   \   000000AC   0x.... 0x....      LDR.W    R0,??DataTable8_4  ;; 0x40064000
   \   000000B0   0x7800             LDRB     R0,[R0, #+0]
   \   000000B2   0xF010 0x003F      ANDS     R0,R0,#0x3F
   \   000000B6   0x.... 0x....      LDR.W    R1,??DataTable8_4  ;; 0x40064000
   \   000000BA   0x7008             STRB     R0,[R1, #+0]
    225              
    226              //等待时钟状态位更新
    227              while (((MCG_S & MCG_S_CLKST_MASK) >> MCG_S_CLKST_SHIFT) != 0x3){};
   \                     ??pllinit207M_4:
   \   000000BC   0x.... 0x....      LDR.W    R0,??DataTable8_5  ;; 0x40064006
   \   000000C0   0x7800             LDRB     R0,[R0, #+0]
   \   000000C2   0xF3C0 0x0081      UBFX     R0,R0,#+2,#+2
   \   000000C6   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000C8   0x2803             CMP      R0,#+3
   \   000000CA   0xD1F7             BNE.N    ??pllinit207M_4
    228              //SIM_CLKDIV2 |= SIM_CLKDIV2_USBDIV(1);  
    229              
    230              //设置跟踪时钟为内核时钟
    231              SIM_SOPT2 |= SIM_SOPT2_TRACECLKSEL_MASK;	
   \   000000CC   0x.... 0x....      LDR.W    R0,??DataTable9_1  ;; 0x40048004
   \   000000D0   0x6800             LDR      R0,[R0, #+0]
   \   000000D2   0xF450 0x5080      ORRS     R0,R0,#0x1000
   \   000000D6   0x.... 0x....      LDR.W    R1,??DataTable9_1  ;; 0x40048004
   \   000000DA   0x6008             STR      R0,[R1, #+0]
    232              //在PTA6引脚上使能TRACE_CLKOU功能
    233              PORTA_PCR6 = ( PORT_PCR_MUX(0x7));  
   \   000000DC   0x.... 0x....      LDR.W    R0,??DataTable9_2  ;; 0x40049018
   \   000000E0   0xF44F 0x61E0      MOV      R1,#+1792
   \   000000E4   0x6001             STR      R1,[R0, #+0]
    234              //使能FlexBus模块时钟
    235              SIM_SCGC7 |= SIM_SCGC7_FLEXBUS_MASK;
   \   000000E6   0x.... 0x....      LDR.W    R0,??DataTable9_3  ;; 0x40048040
   \   000000EA   0x6800             LDR      R0,[R0, #+0]
   \   000000EC   0xF050 0x0001      ORRS     R0,R0,#0x1
   \   000000F0   0x.... 0x....      LDR.W    R1,??DataTable9_3  ;; 0x40048040
   \   000000F4   0x6008             STR      R0,[R1, #+0]
    236              //在PTA6引脚上使能FB_CLKOUT功能
    237              PORTC_PCR3 = ( PORT_PCR_MUX(0x5));
   \   000000F6   0x.... 0x....      LDR.W    R0,??DataTable11  ;; 0x4004b00c
   \   000000FA   0xF44F 0x61A0      MOV      R1,#+1280
   \   000000FE   0x6001             STR      R1,[R0, #+0]
    238          }
   \   00000100   0x4770             BX       LR               ;; return
    239          //锁相环频率为50/15*54=180M测试函数

   \                                 In section .text, align 2, keep-with-next
    240          extern void pllinit180M(void)
    241          {
    242          	uint32_t temp_reg;
    243                  //使能IO端口时钟    
    244              SIM_SCGC5 |= (SIM_SCGC5_PORTA_MASK
    245                                        | SIM_SCGC5_PORTB_MASK
    246                                        | SIM_SCGC5_PORTC_MASK
    247                                        | SIM_SCGC5_PORTD_MASK
    248                                        | SIM_SCGC5_PORTE_MASK );
   \                     pllinit180M:
   \   00000000   0x.... 0x....      LDR.W    R0,??DataTable8  ;; 0x40048038
   \   00000004   0x6800             LDR      R0,[R0, #+0]
   \   00000006   0xF450 0x5078      ORRS     R0,R0,#0x3E00
   \   0000000A   0x.... 0x....      LDR.W    R1,??DataTable8  ;; 0x40048038
   \   0000000E   0x6008             STR      R0,[R1, #+0]
    249              //这里处在默认的FEI模式
    250              //首先移动到FBE模式
    251              MCG_C2 = 0;  
   \   00000010   0x.... 0x....      LDR.W    R0,??DataTable8_1  ;; 0x40064001
   \   00000014   0x2100             MOVS     R1,#+0
   \   00000016   0x7001             STRB     R1,[R0, #+0]
    252              //MCG_C2 = MCG_C2_RANGE(2) | MCG_C2_HGO_MASK | MCG_C2_EREFS_MASK;
    253              //初始化晶振后释放锁定状态的振荡器和GPIO
    254              SIM_SCGC4 |= SIM_SCGC4_LLWU_MASK;
   \   00000018   0x.... 0x....      LDR.W    R0,??DataTable8_2  ;; 0x40048034
   \   0000001C   0x6800             LDR      R0,[R0, #+0]
   \   0000001E   0xF050 0x5080      ORRS     R0,R0,#0x10000000
   \   00000022   0x.... 0x....      LDR.W    R1,??DataTable8_2  ;; 0x40048034
   \   00000026   0x6008             STR      R0,[R1, #+0]
    255              LLWU_CS |= LLWU_CS_ACKISO_MASK;
   \   00000028   0x.... 0x....      LDR.W    R0,??DataTable8_3  ;; 0x4007c008
   \   0000002C   0x7800             LDRB     R0,[R0, #+0]
   \   0000002E   0xF050 0x0080      ORRS     R0,R0,#0x80
   \   00000032   0x.... 0x....      LDR.W    R1,??DataTable8_3  ;; 0x4007c008
   \   00000036   0x7008             STRB     R0,[R1, #+0]
    256              
    257              //选择外部晶振，参考分频器，清IREFS来启动外部晶振
    258              //011 If RANGE = 0, Divide Factor is 8; for all other RANGE values, Divide Factor is 256.
    259              MCG_C1 = MCG_C1_CLKS(2) | MCG_C1_FRDIV(3);
   \   00000038   0x.... 0x....      LDR.W    R0,??DataTable8_4  ;; 0x40064000
   \   0000003C   0x2198             MOVS     R1,#+152
   \   0000003E   0x7001             STRB     R1,[R0, #+0]
    260              
    261              //等待晶振稳定	    
    262              //while (!(MCG_S & MCG_S_OSCINIT_MASK)){}              //等待锁相环初始化结束
    263              while (MCG_S & MCG_S_IREFST_MASK){}                  //等待时钟切换到外部参考时钟
   \                     ??pllinit180M_0:
   \   00000040   0x.... 0x....      LDR.W    R0,??DataTable8_5  ;; 0x40064006
   \   00000044   0x7800             LDRB     R0,[R0, #+0]
   \   00000046   0x06C0             LSLS     R0,R0,#+27
   \   00000048   0xD4FA             BMI.N    ??pllinit180M_0
    264              while (((MCG_S & MCG_S_CLKST_MASK) >> MCG_S_CLKST_SHIFT) != 0x2){}
   \                     ??pllinit180M_1:
   \   0000004A   0x.... 0x....      LDR.W    R0,??DataTable8_5  ;; 0x40064006
   \   0000004E   0x7800             LDRB     R0,[R0, #+0]
   \   00000050   0xF3C0 0x0081      UBFX     R0,R0,#+2,#+2
   \   00000054   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000056   0x2802             CMP      R0,#+2
   \   00000058   0xD1F7             BNE.N    ??pllinit180M_1
    265              
    266              //进入FBE模式,
    267              //0x18==25分频=2M,
    268              //0x08==15分频=3.333M 
    269              //0x09==16分频=3.125M,
    270              //0x10==17分频=2.94M 
    271              //0x11==18分频=2.7778M 
    272              //0x12==19分频=2.63M,
    273              //0x13==20分频=2.5M    
    274              MCG_C5 = MCG_C5_PRDIV(0x0e);                
   \   0000005A   0x.... 0x....      LDR.W    R0,??DataTable8_6  ;; 0x40064004
   \   0000005E   0x210E             MOVS     R1,#+14
   \   00000060   0x7001             STRB     R1,[R0, #+0]
    275              
    276              //确保MCG_C6处于复位状态，禁止LOLIE、PLL、和时钟控制器，清PLL VCO分频器
    277              MCG_C6 = 0x0;
   \   00000062   0x.... 0x....      LDR.W    R0,??DataTable8_7  ;; 0x40064005
   \   00000066   0x2100             MOVS     R1,#+0
   \   00000068   0x7001             STRB     R1,[R0, #+0]
    278              
    279              //保存FMC_PFAPR当前的值
    280              temp_reg = FMC_PFAPR;
   \   0000006A   0x.... 0x....      LDR.W    R0,??DataTable8_8  ;; 0x4001f000
   \   0000006E   0x6800             LDR      R0,[R0, #+0]
    281              
    282              //通过M&PFD置位M0PFD来禁止预取功能
    283              FMC_PFAPR |= FMC_PFAPR_M7PFD_MASK | FMC_PFAPR_M6PFD_MASK | FMC_PFAPR_M5PFD_MASK
    284                               | FMC_PFAPR_M4PFD_MASK | FMC_PFAPR_M3PFD_MASK | FMC_PFAPR_M2PFD_MASK
    285                               | FMC_PFAPR_M1PFD_MASK | FMC_PFAPR_M0PFD_MASK;    
   \   00000070   0x.... 0x....      LDR.W    R1,??DataTable8_8  ;; 0x4001f000
   \   00000074   0x6809             LDR      R1,[R1, #+0]
   \   00000076   0xF451 0x017F      ORRS     R1,R1,#0xFF0000
   \   0000007A   0x.... 0x....      LDR.W    R2,??DataTable8_8  ;; 0x4001f000
   \   0000007E   0x6011             STR      R1,[R2, #+0]
    286              ///设置系统分频器
    287              //MCG=PLL, core = MCG, bus = MCG/3, FlexBus = MCG/3, Flash clock= MCG/8
    288              SIM_CLKDIV1 = SIM_CLKDIV1_OUTDIV1(0) | SIM_CLKDIV1_OUTDIV2(2) 
    289                           | SIM_CLKDIV1_OUTDIV3(2) | SIM_CLKDIV1_OUTDIV4(7);       
   \   00000080   0x.... 0x....      LDR.W    R1,??DataTable9  ;; 0x40048044
   \   00000084   0x.... 0x....      LDR.W    R2,??DataTable9_4  ;; 0x2270000
   \   00000088   0x600A             STR      R2,[R1, #+0]
    290              
    291              //从新存FMC_PFAPR的原始值
    292              FMC_PFAPR = temp_reg; 
   \   0000008A   0x.... 0x....      LDR.W    R1,??DataTable8_8  ;; 0x4001f000
   \   0000008E   0x6008             STR      R0,[R1, #+0]
    293              
    294              //设置VCO分频器，使能PLL为100MHz, LOLIE=0, PLLS=1, CME=0, VDIV=26
    295              MCG_C6 = MCG_C6_PLLS_MASK | MCG_C6_VDIV(30);  //VDIV = 31 (x54)
   \   00000090   0x.... 0x....      LDR.W    R0,??DataTable8_7  ;; 0x40064005
   \   00000094   0x215E             MOVS     R1,#+94
   \   00000096   0x7001             STRB     R1,[R0, #+0]
    296                                                            //VDIV = 26 (x50)
    297              while (!(MCG_S & MCG_S_PLLST_MASK)){}; // wait for PLL status bit to set    
   \                     ??pllinit180M_2:
   \   00000098   0x.... 0x....      LDR.W    R0,??DataTable8_5  ;; 0x40064006
   \   0000009C   0x7800             LDRB     R0,[R0, #+0]
   \   0000009E   0x0680             LSLS     R0,R0,#+26
   \   000000A0   0xD5FA             BPL.N    ??pllinit180M_2
    298              while (!(MCG_S & MCG_S_LOCK_MASK)){}; // Wait for LOCK bit to set    
   \                     ??pllinit180M_3:
   \   000000A2   0x.... 0x....      LDR.W    R0,??DataTable8_5  ;; 0x40064006
   \   000000A6   0x7800             LDRB     R0,[R0, #+0]
   \   000000A8   0x0640             LSLS     R0,R0,#+25
   \   000000AA   0xD5FA             BPL.N    ??pllinit180M_3
    299              
    300              //进入PBE模式    
    301              //通过清零CLKS位来进入PEE模式
    302              // CLKS=0, FRDIV=3, IREFS=0, IRCLKEN=0, IREFSTEN=0
    303              MCG_C1 &= ~MCG_C1_CLKS_MASK;
   \   000000AC   0x.... 0x....      LDR.W    R0,??DataTable8_4  ;; 0x40064000
   \   000000B0   0x7800             LDRB     R0,[R0, #+0]
   \   000000B2   0xF010 0x003F      ANDS     R0,R0,#0x3F
   \   000000B6   0x.... 0x....      LDR.W    R1,??DataTable8_4  ;; 0x40064000
   \   000000BA   0x7008             STRB     R0,[R1, #+0]
    304              
    305              //等待时钟状态位更新
    306              while (((MCG_S & MCG_S_CLKST_MASK) >> MCG_S_CLKST_SHIFT) != 0x3){};
   \                     ??pllinit180M_4:
   \   000000BC   0x.... 0x....      LDR.W    R0,??DataTable8_5  ;; 0x40064006
   \   000000C0   0x7800             LDRB     R0,[R0, #+0]
   \   000000C2   0xF3C0 0x0081      UBFX     R0,R0,#+2,#+2
   \   000000C6   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000C8   0x2803             CMP      R0,#+3
   \   000000CA   0xD1F7             BNE.N    ??pllinit180M_4
    307              //SIM_CLKDIV2 |= SIM_CLKDIV2_USBDIV(1);  
    308              
    309              //设置跟踪时钟为内核时钟
    310              SIM_SOPT2 |= SIM_SOPT2_TRACECLKSEL_MASK;	
   \   000000CC   0x.... 0x....      LDR.W    R0,??DataTable9_1  ;; 0x40048004
   \   000000D0   0x6800             LDR      R0,[R0, #+0]
   \   000000D2   0xF450 0x5080      ORRS     R0,R0,#0x1000
   \   000000D6   0x.... 0x....      LDR.W    R1,??DataTable9_1  ;; 0x40048004
   \   000000DA   0x6008             STR      R0,[R1, #+0]
    311              //在PTA6引脚上使能TRACE_CLKOU功能
    312              PORTA_PCR6 = ( PORT_PCR_MUX(0x7));  
   \   000000DC   0x.... 0x....      LDR.W    R0,??DataTable9_2  ;; 0x40049018
   \   000000E0   0xF44F 0x61E0      MOV      R1,#+1792
   \   000000E4   0x6001             STR      R1,[R0, #+0]
    313              //使能FlexBus模块时钟
    314              SIM_SCGC7 |= SIM_SCGC7_FLEXBUS_MASK;
   \   000000E6   0x.... 0x....      LDR.W    R0,??DataTable9_3  ;; 0x40048040
   \   000000EA   0x6800             LDR      R0,[R0, #+0]
   \   000000EC   0xF050 0x0001      ORRS     R0,R0,#0x1
   \   000000F0   0x.... 0x....      LDR.W    R1,??DataTable9_3  ;; 0x40048040
   \   000000F4   0x6008             STR      R0,[R1, #+0]
    315              //在PTA6引脚上使能FB_CLKOUT功能
    316              PORTC_PCR3 = ( PORT_PCR_MUX(0x5));
   \   000000F6   0x.... 0x....      LDR.W    R0,??DataTable11  ;; 0x4004b00c
   \   000000FA   0xF44F 0x61A0      MOV      R1,#+1280
   \   000000FE   0x6001             STR      R1,[R0, #+0]
    317          }
   \   00000100   0x4770             BX       LR               ;; return
    318          
    319          //锁相环频率为50/16*54=168.75M测试函数

   \                                 In section .text, align 2, keep-with-next
    320          void pllinit168d75M(void)
    321          {
    322          	uint32_t temp_reg;
    323                  //使能IO端口时钟    
    324              SIM_SCGC5 |= (SIM_SCGC5_PORTA_MASK
    325                                        | SIM_SCGC5_PORTB_MASK
    326                                        | SIM_SCGC5_PORTC_MASK
    327                                        | SIM_SCGC5_PORTD_MASK
    328                                        | SIM_SCGC5_PORTE_MASK );
   \                     pllinit168d75M:
   \   00000000   0x.... 0x....      LDR.W    R0,??DataTable8  ;; 0x40048038
   \   00000004   0x6800             LDR      R0,[R0, #+0]
   \   00000006   0xF450 0x5078      ORRS     R0,R0,#0x3E00
   \   0000000A   0x.... 0x....      LDR.W    R1,??DataTable8  ;; 0x40048038
   \   0000000E   0x6008             STR      R0,[R1, #+0]
    329              //这里处在默认的FEI模式
    330              //首先移动到FBE模式
    331              MCG_C2 = 0;  
   \   00000010   0x.... 0x....      LDR.W    R0,??DataTable8_1  ;; 0x40064001
   \   00000014   0x2100             MOVS     R1,#+0
   \   00000016   0x7001             STRB     R1,[R0, #+0]
    332              //MCG_C2 = MCG_C2_RANGE(2) | MCG_C2_HGO_MASK | MCG_C2_EREFS_MASK;
    333              //初始化晶振后释放锁定状态的振荡器和GPIO
    334              SIM_SCGC4 |= SIM_SCGC4_LLWU_MASK;
   \   00000018   0x.... 0x....      LDR.W    R0,??DataTable8_2  ;; 0x40048034
   \   0000001C   0x6800             LDR      R0,[R0, #+0]
   \   0000001E   0xF050 0x5080      ORRS     R0,R0,#0x10000000
   \   00000022   0x.... 0x....      LDR.W    R1,??DataTable8_2  ;; 0x40048034
   \   00000026   0x6008             STR      R0,[R1, #+0]
    335              LLWU_CS |= LLWU_CS_ACKISO_MASK;
   \   00000028   0x.... 0x....      LDR.W    R0,??DataTable8_3  ;; 0x4007c008
   \   0000002C   0x7800             LDRB     R0,[R0, #+0]
   \   0000002E   0xF050 0x0080      ORRS     R0,R0,#0x80
   \   00000032   0x.... 0x....      LDR.W    R1,??DataTable8_3  ;; 0x4007c008
   \   00000036   0x7008             STRB     R0,[R1, #+0]
    336              
    337              //选择外部晶振，参考分频器，清IREFS来启动外部晶振
    338              //011 If RANGE = 0, Divide Factor is 8; for all other RANGE values, Divide Factor is 256.
    339              MCG_C1 = MCG_C1_CLKS(2) | MCG_C1_FRDIV(3);
   \   00000038   0x.... 0x....      LDR.W    R0,??DataTable8_4  ;; 0x40064000
   \   0000003C   0x2198             MOVS     R1,#+152
   \   0000003E   0x7001             STRB     R1,[R0, #+0]
    340              
    341              //等待晶振稳定	    
    342              //while (!(MCG_S & MCG_S_OSCINIT_MASK)){}              //等待锁相环初始化结束
    343              while (MCG_S & MCG_S_IREFST_MASK){}                  //等待时钟切换到外部参考时钟
   \                     ??pllinit168d75M_0:
   \   00000040   0x.... 0x....      LDR.W    R0,??DataTable8_5  ;; 0x40064006
   \   00000044   0x7800             LDRB     R0,[R0, #+0]
   \   00000046   0x06C0             LSLS     R0,R0,#+27
   \   00000048   0xD4FA             BMI.N    ??pllinit168d75M_0
    344              while (((MCG_S & MCG_S_CLKST_MASK) >> MCG_S_CLKST_SHIFT) != 0x2){}
   \                     ??pllinit168d75M_1:
   \   0000004A   0x.... 0x....      LDR.W    R0,??DataTable8_5  ;; 0x40064006
   \   0000004E   0x7800             LDRB     R0,[R0, #+0]
   \   00000050   0xF3C0 0x0081      UBFX     R0,R0,#+2,#+2
   \   00000054   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000056   0x2802             CMP      R0,#+2
   \   00000058   0xD1F7             BNE.N    ??pllinit168d75M_1
    345              
    346              //进入FBE模式,
    347              //0x18==25分频=2M,
    348              //0x08==15分频=3.333M 
    349              //0x09==16分频=3.125M,
    350              //0x10==17分频=2.94M 
    351              //0x11==18分频=2.7778M 
    352              //0x12==19分频=2.63M,
    353              //0x13==20分频=2.5M    
    354              MCG_C5 = MCG_C5_PRDIV(0x0f);                
   \   0000005A   0x.... 0x....      LDR.W    R0,??DataTable8_6  ;; 0x40064004
   \   0000005E   0x210F             MOVS     R1,#+15
   \   00000060   0x7001             STRB     R1,[R0, #+0]
    355              
    356              //确保MCG_C6处于复位状态，禁止LOLIE、PLL、和时钟控制器，清PLL VCO分频器
    357              MCG_C6 = 0x0;
   \   00000062   0x.... 0x....      LDR.W    R0,??DataTable8_7  ;; 0x40064005
   \   00000066   0x2100             MOVS     R1,#+0
   \   00000068   0x7001             STRB     R1,[R0, #+0]
    358              
    359              //保存FMC_PFAPR当前的值
    360              temp_reg = FMC_PFAPR;
   \   0000006A   0x.... 0x....      LDR.W    R0,??DataTable8_8  ;; 0x4001f000
   \   0000006E   0x6800             LDR      R0,[R0, #+0]
    361              
    362              //通过M&PFD置位M0PFD来禁止预取功能
    363              FMC_PFAPR |= FMC_PFAPR_M7PFD_MASK | FMC_PFAPR_M6PFD_MASK | FMC_PFAPR_M5PFD_MASK
    364                               | FMC_PFAPR_M4PFD_MASK | FMC_PFAPR_M3PFD_MASK | FMC_PFAPR_M2PFD_MASK
    365                               | FMC_PFAPR_M1PFD_MASK | FMC_PFAPR_M0PFD_MASK;    
   \   00000070   0x.... 0x....      LDR.W    R1,??DataTable8_8  ;; 0x4001f000
   \   00000074   0x6809             LDR      R1,[R1, #+0]
   \   00000076   0xF451 0x017F      ORRS     R1,R1,#0xFF0000
   \   0000007A   0x.... 0x....      LDR.W    R2,??DataTable8_8  ;; 0x4001f000
   \   0000007E   0x6011             STR      R1,[R2, #+0]
    366              ///设置系统分频器
    367              //MCG=PLL, core = MCG, bus = MCG/3, FlexBus = MCG/3, Flash clock= MCG/8
    368              SIM_CLKDIV1 = SIM_CLKDIV1_OUTDIV1(0) | SIM_CLKDIV1_OUTDIV2(2) 
    369                           | SIM_CLKDIV1_OUTDIV3(2) | SIM_CLKDIV1_OUTDIV4(7);       
   \   00000080   0x.... 0x....      LDR.W    R1,??DataTable9  ;; 0x40048044
   \   00000084   0x.... 0x....      LDR.W    R2,??DataTable9_4  ;; 0x2270000
   \   00000088   0x600A             STR      R2,[R1, #+0]
    370              
    371              //从新存FMC_PFAPR的原始值
    372              FMC_PFAPR = temp_reg; 
   \   0000008A   0x.... 0x....      LDR.W    R1,??DataTable8_8  ;; 0x4001f000
   \   0000008E   0x6008             STR      R0,[R1, #+0]
    373              
    374              //设置VCO分频器，使能PLL为100MHz, LOLIE=0, PLLS=1, CME=0, VDIV=26
    375              MCG_C6 = MCG_C6_PLLS_MASK | MCG_C6_VDIV(30);  //VDIV = 31 (x54)
   \   00000090   0x.... 0x....      LDR.W    R0,??DataTable8_7  ;; 0x40064005
   \   00000094   0x215E             MOVS     R1,#+94
   \   00000096   0x7001             STRB     R1,[R0, #+0]
    376                                                            //VDIV = 26 (x50)
    377              while (!(MCG_S & MCG_S_PLLST_MASK)){}; // wait for PLL status bit to set    
   \                     ??pllinit168d75M_2:
   \   00000098   0x.... 0x....      LDR.W    R0,??DataTable8_5  ;; 0x40064006
   \   0000009C   0x7800             LDRB     R0,[R0, #+0]
   \   0000009E   0x0680             LSLS     R0,R0,#+26
   \   000000A0   0xD5FA             BPL.N    ??pllinit168d75M_2
    378              while (!(MCG_S & MCG_S_LOCK_MASK)){}; // Wait for LOCK bit to set    
   \                     ??pllinit168d75M_3:
   \   000000A2   0x.... 0x....      LDR.W    R0,??DataTable8_5  ;; 0x40064006
   \   000000A6   0x7800             LDRB     R0,[R0, #+0]
   \   000000A8   0x0640             LSLS     R0,R0,#+25
   \   000000AA   0xD5FA             BPL.N    ??pllinit168d75M_3
    379              
    380              //进入PBE模式    
    381              //通过清零CLKS位来进入PEE模式
    382              // CLKS=0, FRDIV=3, IREFS=0, IRCLKEN=0, IREFSTEN=0
    383              MCG_C1 &= ~MCG_C1_CLKS_MASK;
   \   000000AC   0x.... 0x....      LDR.W    R0,??DataTable8_4  ;; 0x40064000
   \   000000B0   0x7800             LDRB     R0,[R0, #+0]
   \   000000B2   0xF010 0x003F      ANDS     R0,R0,#0x3F
   \   000000B6   0x.... 0x....      LDR.W    R1,??DataTable8_4  ;; 0x40064000
   \   000000BA   0x7008             STRB     R0,[R1, #+0]
    384              
    385              //等待时钟状态位更新
    386              while (((MCG_S & MCG_S_CLKST_MASK) >> MCG_S_CLKST_SHIFT) != 0x3){};
   \                     ??pllinit168d75M_4:
   \   000000BC   0x.... 0x....      LDR.W    R0,??DataTable8_5  ;; 0x40064006
   \   000000C0   0x7800             LDRB     R0,[R0, #+0]
   \   000000C2   0xF3C0 0x0081      UBFX     R0,R0,#+2,#+2
   \   000000C6   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000C8   0x2803             CMP      R0,#+3
   \   000000CA   0xD1F7             BNE.N    ??pllinit168d75M_4
    387              //SIM_CLKDIV2 |= SIM_CLKDIV2_USBDIV(1);  
    388              
    389              //设置跟踪时钟为内核时钟
    390              SIM_SOPT2 |= SIM_SOPT2_TRACECLKSEL_MASK;	
   \   000000CC   0x.... 0x....      LDR.W    R0,??DataTable9_1  ;; 0x40048004
   \   000000D0   0x6800             LDR      R0,[R0, #+0]
   \   000000D2   0xF450 0x5080      ORRS     R0,R0,#0x1000
   \   000000D6   0x.... 0x....      LDR.W    R1,??DataTable9_1  ;; 0x40048004
   \   000000DA   0x6008             STR      R0,[R1, #+0]
    391              //在PTA6引脚上使能TRACE_CLKOU功能
    392              PORTA_PCR6 = ( PORT_PCR_MUX(0x7));  
   \   000000DC   0x.... 0x....      LDR.W    R0,??DataTable9_2  ;; 0x40049018
   \   000000E0   0xF44F 0x61E0      MOV      R1,#+1792
   \   000000E4   0x6001             STR      R1,[R0, #+0]
    393              //使能FlexBus模块时钟
    394              SIM_SCGC7 |= SIM_SCGC7_FLEXBUS_MASK;
   \   000000E6   0x.... 0x....      LDR.W    R0,??DataTable9_3  ;; 0x40048040
   \   000000EA   0x6800             LDR      R0,[R0, #+0]
   \   000000EC   0xF050 0x0001      ORRS     R0,R0,#0x1
   \   000000F0   0x.... 0x....      LDR.W    R1,??DataTable9_3  ;; 0x40048040
   \   000000F4   0x6008             STR      R0,[R1, #+0]
    395              //在PTA6引脚上使能FB_CLKOUT功能
    396              PORTC_PCR3 = ( PORT_PCR_MUX(0x5));
   \   000000F6   0x.... 0x....      LDR.W    R0,??DataTable11  ;; 0x4004b00c
   \   000000FA   0xF44F 0x61A0      MOV      R1,#+1280
   \   000000FE   0x6001             STR      R1,[R0, #+0]
    397          }
   \   00000100   0x4770             BX       LR               ;; return
    398          //锁相环频率为50/18*54=150M测试函数

   \                                 In section .text, align 2, keep-with-next
    399          void pllinit150M(void)
    400          {
    401          	uint32_t temp_reg;
    402                  //使能IO端口时钟    
    403              SIM_SCGC5 |= (SIM_SCGC5_PORTA_MASK
    404                                        | SIM_SCGC5_PORTB_MASK
    405                                        | SIM_SCGC5_PORTC_MASK
    406                                        | SIM_SCGC5_PORTD_MASK
    407                                        | SIM_SCGC5_PORTE_MASK );
   \                     pllinit150M:
   \   00000000   0x.... 0x....      LDR.W    R0,??DataTable8  ;; 0x40048038
   \   00000004   0x6800             LDR      R0,[R0, #+0]
   \   00000006   0xF450 0x5078      ORRS     R0,R0,#0x3E00
   \   0000000A   0x.... 0x....      LDR.W    R1,??DataTable8  ;; 0x40048038
   \   0000000E   0x6008             STR      R0,[R1, #+0]
    408              //这里处在默认的FEI模式
    409              //首先移动到FBE模式
    410              MCG_C2 = 0;  
   \   00000010   0x.... 0x....      LDR.W    R0,??DataTable8_1  ;; 0x40064001
   \   00000014   0x2100             MOVS     R1,#+0
   \   00000016   0x7001             STRB     R1,[R0, #+0]
    411              //MCG_C2 = MCG_C2_RANGE(2) | MCG_C2_HGO_MASK | MCG_C2_EREFS_MASK;
    412              //初始化晶振后释放锁定状态的振荡器和GPIO
    413              SIM_SCGC4 |= SIM_SCGC4_LLWU_MASK;
   \   00000018   0x.... 0x....      LDR.W    R0,??DataTable8_2  ;; 0x40048034
   \   0000001C   0x6800             LDR      R0,[R0, #+0]
   \   0000001E   0xF050 0x5080      ORRS     R0,R0,#0x10000000
   \   00000022   0x.... 0x....      LDR.W    R1,??DataTable8_2  ;; 0x40048034
   \   00000026   0x6008             STR      R0,[R1, #+0]
    414              LLWU_CS |= LLWU_CS_ACKISO_MASK;
   \   00000028   0x.... 0x....      LDR.W    R0,??DataTable8_3  ;; 0x4007c008
   \   0000002C   0x7800             LDRB     R0,[R0, #+0]
   \   0000002E   0xF050 0x0080      ORRS     R0,R0,#0x80
   \   00000032   0x.... 0x....      LDR.W    R1,??DataTable8_3  ;; 0x4007c008
   \   00000036   0x7008             STRB     R0,[R1, #+0]
    415              
    416              //选择外部晶振，参考分频器，清IREFS来启动外部晶振
    417              //011 If RANGE = 0, Divide Factor is 8; for all other RANGE values, Divide Factor is 256.
    418              MCG_C1 = MCG_C1_CLKS(2) | MCG_C1_FRDIV(3);
   \   00000038   0x.... 0x....      LDR.W    R0,??DataTable8_4  ;; 0x40064000
   \   0000003C   0x2198             MOVS     R1,#+152
   \   0000003E   0x7001             STRB     R1,[R0, #+0]
    419              
    420              //等待晶振稳定	    
    421              //while (!(MCG_S & MCG_S_OSCINIT_MASK)){}              //等待锁相环初始化结束
    422              while (MCG_S & MCG_S_IREFST_MASK){}                  //等待时钟切换到外部参考时钟
   \                     ??pllinit150M_0:
   \   00000040   0x.... 0x....      LDR.W    R0,??DataTable8_5  ;; 0x40064006
   \   00000044   0x7800             LDRB     R0,[R0, #+0]
   \   00000046   0x06C0             LSLS     R0,R0,#+27
   \   00000048   0xD4FA             BMI.N    ??pllinit150M_0
    423              while (((MCG_S & MCG_S_CLKST_MASK) >> MCG_S_CLKST_SHIFT) != 0x2){}
   \                     ??pllinit150M_1:
   \   0000004A   0x.... 0x....      LDR.W    R0,??DataTable8_5  ;; 0x40064006
   \   0000004E   0x7800             LDRB     R0,[R0, #+0]
   \   00000050   0xF3C0 0x0081      UBFX     R0,R0,#+2,#+2
   \   00000054   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000056   0x2802             CMP      R0,#+2
   \   00000058   0xD1F7             BNE.N    ??pllinit150M_1
    424              
    425              //进入FBE模式,
    426              //0x18==25分频=2M,
    427              //0x11==18分频=2.7778M 
    428              //0x12==19分频=2.63M,
    429              //0x13==20分频=2.5M    
    430              MCG_C5 = MCG_C5_PRDIV(0x11);                
   \   0000005A   0x....             LDR.N    R0,??DataTable8_6  ;; 0x40064004
   \   0000005C   0x2111             MOVS     R1,#+17
   \   0000005E   0x7001             STRB     R1,[R0, #+0]
    431              
    432              //确保MCG_C6处于复位状态，禁止LOLIE、PLL、和时钟控制器，清PLL VCO分频器
    433              MCG_C6 = 0x0;
   \   00000060   0x....             LDR.N    R0,??DataTable8_7  ;; 0x40064005
   \   00000062   0x2100             MOVS     R1,#+0
   \   00000064   0x7001             STRB     R1,[R0, #+0]
    434              
    435              //保存FMC_PFAPR当前的值
    436              temp_reg = FMC_PFAPR;
   \   00000066   0x....             LDR.N    R0,??DataTable8_8  ;; 0x4001f000
   \   00000068   0x6800             LDR      R0,[R0, #+0]
    437              
    438              //通过M&PFD置位M0PFD来禁止预取功能
    439              FMC_PFAPR |= FMC_PFAPR_M7PFD_MASK | FMC_PFAPR_M6PFD_MASK | FMC_PFAPR_M5PFD_MASK
    440                               | FMC_PFAPR_M4PFD_MASK | FMC_PFAPR_M3PFD_MASK | FMC_PFAPR_M2PFD_MASK
    441                               | FMC_PFAPR_M1PFD_MASK | FMC_PFAPR_M0PFD_MASK;    
   \   0000006A   0x....             LDR.N    R1,??DataTable8_8  ;; 0x4001f000
   \   0000006C   0x6809             LDR      R1,[R1, #+0]
   \   0000006E   0xF451 0x017F      ORRS     R1,R1,#0xFF0000
   \   00000072   0x....             LDR.N    R2,??DataTable8_8  ;; 0x4001f000
   \   00000074   0x6011             STR      R1,[R2, #+0]
    442              ///设置系统分频器
    443              //MCG=PLL, core = MCG, bus = MCG/2, FlexBus = MCG/2, Flash clock= MCG/8
    444              SIM_CLKDIV1 = SIM_CLKDIV1_OUTDIV1(0) | SIM_CLKDIV1_OUTDIV2(1) 
    445                           | SIM_CLKDIV1_OUTDIV3(1) | SIM_CLKDIV1_OUTDIV4(7);       
   \   00000076   0x.... 0x....      LDR.W    R1,??DataTable9  ;; 0x40048044
   \   0000007A   0x.... 0x....      LDR.W    R2,??DataTable11_1  ;; 0x1170000
   \   0000007E   0x600A             STR      R2,[R1, #+0]
    446              
    447              //从新存FMC_PFAPR的原始值
    448              FMC_PFAPR = temp_reg; 
   \   00000080   0x....             LDR.N    R1,??DataTable8_8  ;; 0x4001f000
   \   00000082   0x6008             STR      R0,[R1, #+0]
    449              
    450              //设置VCO分频器，使能PLL为100MHz, LOLIE=0, PLLS=1, CME=0, VDIV=26
    451              MCG_C6 = MCG_C6_PLLS_MASK | MCG_C6_VDIV(30);  //VDIV = 31 (x54)
   \   00000084   0x....             LDR.N    R0,??DataTable8_7  ;; 0x40064005
   \   00000086   0x215E             MOVS     R1,#+94
   \   00000088   0x7001             STRB     R1,[R0, #+0]
    452                                                            //VDIV = 26 (x50)
    453              while (!(MCG_S & MCG_S_PLLST_MASK)){}; // wait for PLL status bit to set    
   \                     ??pllinit150M_2:
   \   0000008A   0x....             LDR.N    R0,??DataTable8_5  ;; 0x40064006
   \   0000008C   0x7800             LDRB     R0,[R0, #+0]
   \   0000008E   0x0680             LSLS     R0,R0,#+26
   \   00000090   0xD5FB             BPL.N    ??pllinit150M_2
    454              while (!(MCG_S & MCG_S_LOCK_MASK)){}; // Wait for LOCK bit to set    
   \                     ??pllinit150M_3:
   \   00000092   0x....             LDR.N    R0,??DataTable8_5  ;; 0x40064006
   \   00000094   0x7800             LDRB     R0,[R0, #+0]
   \   00000096   0x0640             LSLS     R0,R0,#+25
   \   00000098   0xD5FB             BPL.N    ??pllinit150M_3
    455              
    456              //进入PBE模式    
    457              //通过清零CLKS位来进入PEE模式
    458              // CLKS=0, FRDIV=3, IREFS=0, IRCLKEN=0, IREFSTEN=0
    459              MCG_C1 &= ~MCG_C1_CLKS_MASK;
   \   0000009A   0x....             LDR.N    R0,??DataTable8_4  ;; 0x40064000
   \   0000009C   0x7800             LDRB     R0,[R0, #+0]
   \   0000009E   0xF010 0x003F      ANDS     R0,R0,#0x3F
   \   000000A2   0x....             LDR.N    R1,??DataTable8_4  ;; 0x40064000
   \   000000A4   0x7008             STRB     R0,[R1, #+0]
    460              
    461              //等待时钟状态位更新
    462              while (((MCG_S & MCG_S_CLKST_MASK) >> MCG_S_CLKST_SHIFT) != 0x3){};
   \                     ??pllinit150M_4:
   \   000000A6   0x....             LDR.N    R0,??DataTable8_5  ;; 0x40064006
   \   000000A8   0x7800             LDRB     R0,[R0, #+0]
   \   000000AA   0xF3C0 0x0081      UBFX     R0,R0,#+2,#+2
   \   000000AE   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000B0   0x2803             CMP      R0,#+3
   \   000000B2   0xD1F8             BNE.N    ??pllinit150M_4
    463              //SIM_CLKDIV2 |= SIM_CLKDIV2_USBDIV(1);  
    464              
    465              //设置跟踪时钟为内核时钟
    466              SIM_SOPT2 |= SIM_SOPT2_TRACECLKSEL_MASK;	
   \   000000B4   0x.... 0x....      LDR.W    R0,??DataTable9_1  ;; 0x40048004
   \   000000B8   0x6800             LDR      R0,[R0, #+0]
   \   000000BA   0xF450 0x5080      ORRS     R0,R0,#0x1000
   \   000000BE   0x.... 0x....      LDR.W    R1,??DataTable9_1  ;; 0x40048004
   \   000000C2   0x6008             STR      R0,[R1, #+0]
    467              //在PTA6引脚上使能TRACE_CLKOU功能
    468              PORTA_PCR6 = ( PORT_PCR_MUX(0x7));  
   \   000000C4   0x.... 0x....      LDR.W    R0,??DataTable9_2  ;; 0x40049018
   \   000000C8   0xF44F 0x61E0      MOV      R1,#+1792
   \   000000CC   0x6001             STR      R1,[R0, #+0]
    469              //使能FlexBus模块时钟
    470              SIM_SCGC7 |= SIM_SCGC7_FLEXBUS_MASK;
   \   000000CE   0x.... 0x....      LDR.W    R0,??DataTable9_3  ;; 0x40048040
   \   000000D2   0x6800             LDR      R0,[R0, #+0]
   \   000000D4   0xF050 0x0001      ORRS     R0,R0,#0x1
   \   000000D8   0x.... 0x....      LDR.W    R1,??DataTable9_3  ;; 0x40048040
   \   000000DC   0x6008             STR      R0,[R1, #+0]
    471              //在PTA6引脚上使能FB_CLKOUT功能
    472              PORTC_PCR3 = ( PORT_PCR_MUX(0x5));
   \   000000DE   0x.... 0x....      LDR.W    R0,??DataTable11  ;; 0x4004b00c
   \   000000E2   0xF44F 0x61A0      MOV      R1,#+1280
   \   000000E6   0x6001             STR      R1,[R0, #+0]
    473          }
   \   000000E8   0x4770             BX       LR               ;; return
    474          //锁相环频率为50/19*55=144.7386421M测试函数

   \                                 In section .text, align 2, keep-with-next
    475          void pllinit144M(void)
    476          {
    477          	uint32_t temp_reg;
    478                  //使能IO端口时钟    
    479              SIM_SCGC5 |= (SIM_SCGC5_PORTA_MASK
    480                                        | SIM_SCGC5_PORTB_MASK
    481                                        | SIM_SCGC5_PORTC_MASK
    482                                        | SIM_SCGC5_PORTD_MASK
    483                                        | SIM_SCGC5_PORTE_MASK );
   \                     pllinit144M:
   \   00000000   0x....             LDR.N    R0,??DataTable8  ;; 0x40048038
   \   00000002   0x6800             LDR      R0,[R0, #+0]
   \   00000004   0xF450 0x5078      ORRS     R0,R0,#0x3E00
   \   00000008   0x....             LDR.N    R1,??DataTable8  ;; 0x40048038
   \   0000000A   0x6008             STR      R0,[R1, #+0]
    484              //这里处在默认的FEI模式
    485              //首先移动到FBE模式
    486              MCG_C2 = 0;  
   \   0000000C   0x....             LDR.N    R0,??DataTable8_1  ;; 0x40064001
   \   0000000E   0x2100             MOVS     R1,#+0
   \   00000010   0x7001             STRB     R1,[R0, #+0]
    487              //MCG_C2 = MCG_C2_RANGE(2) | MCG_C2_HGO_MASK | MCG_C2_EREFS_MASK;
    488              //初始化晶振后释放锁定状态的振荡器和GPIO
    489              SIM_SCGC4 |= SIM_SCGC4_LLWU_MASK;
   \   00000012   0x....             LDR.N    R0,??DataTable8_2  ;; 0x40048034
   \   00000014   0x6800             LDR      R0,[R0, #+0]
   \   00000016   0xF050 0x5080      ORRS     R0,R0,#0x10000000
   \   0000001A   0x....             LDR.N    R1,??DataTable8_2  ;; 0x40048034
   \   0000001C   0x6008             STR      R0,[R1, #+0]
    490              LLWU_CS |= LLWU_CS_ACKISO_MASK;
   \   0000001E   0x....             LDR.N    R0,??DataTable8_3  ;; 0x4007c008
   \   00000020   0x7800             LDRB     R0,[R0, #+0]
   \   00000022   0xF050 0x0080      ORRS     R0,R0,#0x80
   \   00000026   0x....             LDR.N    R1,??DataTable8_3  ;; 0x4007c008
   \   00000028   0x7008             STRB     R0,[R1, #+0]
    491              
    492              //选择外部晶振，参考分频器，清IREFS来启动外部晶振
    493              //011 If RANGE = 0, Divide Factor is 8; for all other RANGE values, Divide Factor is 256.
    494              MCG_C1 = MCG_C1_CLKS(2) | MCG_C1_FRDIV(3);
   \   0000002A   0x....             LDR.N    R0,??DataTable8_4  ;; 0x40064000
   \   0000002C   0x2198             MOVS     R1,#+152
   \   0000002E   0x7001             STRB     R1,[R0, #+0]
    495              
    496              //等待晶振稳定	    
    497              //while (!(MCG_S & MCG_S_OSCINIT_MASK)){}              //等待锁相环初始化结束
    498              while (MCG_S & MCG_S_IREFST_MASK){}                  //等待时钟切换到外部参考时钟
   \                     ??pllinit144M_0:
   \   00000030   0x....             LDR.N    R0,??DataTable8_5  ;; 0x40064006
   \   00000032   0x7800             LDRB     R0,[R0, #+0]
   \   00000034   0x06C0             LSLS     R0,R0,#+27
   \   00000036   0xD4FB             BMI.N    ??pllinit144M_0
    499              while (((MCG_S & MCG_S_CLKST_MASK) >> MCG_S_CLKST_SHIFT) != 0x2){}
   \                     ??pllinit144M_1:
   \   00000038   0x....             LDR.N    R0,??DataTable8_5  ;; 0x40064006
   \   0000003A   0x7800             LDRB     R0,[R0, #+0]
   \   0000003C   0xF3C0 0x0081      UBFX     R0,R0,#+2,#+2
   \   00000040   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000042   0x2802             CMP      R0,#+2
   \   00000044   0xD1F8             BNE.N    ??pllinit144M_1
    500              
    501              //进入FBE模式,
    502              //0x18==25分频=2M,
    503              //0x11==18分频=2.7778M 
    504              //0x12==19分频=2.63M,
    505              //0x13==20分频=2.5M    
    506              MCG_C5 = MCG_C5_PRDIV(0x12);                
   \   00000046   0x....             LDR.N    R0,??DataTable8_6  ;; 0x40064004
   \   00000048   0x2112             MOVS     R1,#+18
   \   0000004A   0x7001             STRB     R1,[R0, #+0]
    507              
    508              //确保MCG_C6处于复位状态，禁止LOLIE、PLL、和时钟控制器，清PLL VCO分频器
    509              MCG_C6 = 0x0;
   \   0000004C   0x....             LDR.N    R0,??DataTable8_7  ;; 0x40064005
   \   0000004E   0x2100             MOVS     R1,#+0
   \   00000050   0x7001             STRB     R1,[R0, #+0]
    510              
    511              //保存FMC_PFAPR当前的值
    512              temp_reg = FMC_PFAPR;
   \   00000052   0x....             LDR.N    R0,??DataTable8_8  ;; 0x4001f000
   \   00000054   0x6800             LDR      R0,[R0, #+0]
    513              
    514              //通过M&PFD置位M0PFD来禁止预取功能
    515              FMC_PFAPR |= FMC_PFAPR_M7PFD_MASK | FMC_PFAPR_M6PFD_MASK | FMC_PFAPR_M5PFD_MASK
    516                               | FMC_PFAPR_M4PFD_MASK | FMC_PFAPR_M3PFD_MASK | FMC_PFAPR_M2PFD_MASK
    517                               | FMC_PFAPR_M1PFD_MASK | FMC_PFAPR_M0PFD_MASK;    
   \   00000056   0x....             LDR.N    R1,??DataTable8_8  ;; 0x4001f000
   \   00000058   0x6809             LDR      R1,[R1, #+0]
   \   0000005A   0xF451 0x017F      ORRS     R1,R1,#0xFF0000
   \   0000005E   0x....             LDR.N    R2,??DataTable8_8  ;; 0x4001f000
   \   00000060   0x6011             STR      R1,[R2, #+0]
    518              ///设置系统分频器
    519              //MCG=PLL, core = MCG, bus = MCG/2, FlexBus = MCG/2, Flash clock= MCG/6
    520              SIM_CLKDIV1 = SIM_CLKDIV1_OUTDIV1(0) | SIM_CLKDIV1_OUTDIV2(1) 
    521                           | SIM_CLKDIV1_OUTDIV3(1) | SIM_CLKDIV1_OUTDIV4(5);       
   \   00000062   0x....             LDR.N    R1,??DataTable9  ;; 0x40048044
   \   00000064   0x.... 0x....      LDR.W    R2,??DataTable11_2  ;; 0x1150000
   \   00000068   0x600A             STR      R2,[R1, #+0]
    522              
    523              //从新存FMC_PFAPR的原始值
    524              FMC_PFAPR = temp_reg; 
   \   0000006A   0x....             LDR.N    R1,??DataTable8_8  ;; 0x4001f000
   \   0000006C   0x6008             STR      R0,[R1, #+0]
    525              
    526              //设置VCO分频器，使能PLL为100MHz, LOLIE=0, PLLS=1, CME=0, VDIV=26
    527              MCG_C6 = MCG_C6_PLLS_MASK | MCG_C6_VDIV(31);  //VDIV = 31 (x55)
   \   0000006E   0x....             LDR.N    R0,??DataTable8_7  ;; 0x40064005
   \   00000070   0x215F             MOVS     R1,#+95
   \   00000072   0x7001             STRB     R1,[R0, #+0]
    528                                                            //VDIV = 26 (x50)
    529              while (!(MCG_S & MCG_S_PLLST_MASK)){}; // wait for PLL status bit to set    
   \                     ??pllinit144M_2:
   \   00000074   0x....             LDR.N    R0,??DataTable8_5  ;; 0x40064006
   \   00000076   0x7800             LDRB     R0,[R0, #+0]
   \   00000078   0x0680             LSLS     R0,R0,#+26
   \   0000007A   0xD5FB             BPL.N    ??pllinit144M_2
    530              while (!(MCG_S & MCG_S_LOCK_MASK)){}; // Wait for LOCK bit to set    
   \                     ??pllinit144M_3:
   \   0000007C   0x....             LDR.N    R0,??DataTable8_5  ;; 0x40064006
   \   0000007E   0x7800             LDRB     R0,[R0, #+0]
   \   00000080   0x0640             LSLS     R0,R0,#+25
   \   00000082   0xD5FB             BPL.N    ??pllinit144M_3
    531              
    532              //进入PBE模式    
    533              //通过清零CLKS位来进入PEE模式
    534              // CLKS=0, FRDIV=3, IREFS=0, IRCLKEN=0, IREFSTEN=0
    535              MCG_C1 &= ~MCG_C1_CLKS_MASK;
   \   00000084   0x....             LDR.N    R0,??DataTable8_4  ;; 0x40064000
   \   00000086   0x7800             LDRB     R0,[R0, #+0]
   \   00000088   0xF010 0x003F      ANDS     R0,R0,#0x3F
   \   0000008C   0x....             LDR.N    R1,??DataTable8_4  ;; 0x40064000
   \   0000008E   0x7008             STRB     R0,[R1, #+0]
    536              
    537              //等待时钟状态位更新
    538              while (((MCG_S & MCG_S_CLKST_MASK) >> MCG_S_CLKST_SHIFT) != 0x3){};
   \                     ??pllinit144M_4:
   \   00000090   0x....             LDR.N    R0,??DataTable8_5  ;; 0x40064006
   \   00000092   0x7800             LDRB     R0,[R0, #+0]
   \   00000094   0xF3C0 0x0081      UBFX     R0,R0,#+2,#+2
   \   00000098   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000009A   0x2803             CMP      R0,#+3
   \   0000009C   0xD1F8             BNE.N    ??pllinit144M_4
    539              //SIM_CLKDIV2 |= SIM_CLKDIV2_USBDIV(1);  
    540              
    541              //设置跟踪时钟为内核时钟
    542              SIM_SOPT2 |= SIM_SOPT2_TRACECLKSEL_MASK;	
   \   0000009E   0x....             LDR.N    R0,??DataTable9_1  ;; 0x40048004
   \   000000A0   0x6800             LDR      R0,[R0, #+0]
   \   000000A2   0xF450 0x5080      ORRS     R0,R0,#0x1000
   \   000000A6   0x....             LDR.N    R1,??DataTable9_1  ;; 0x40048004
   \   000000A8   0x6008             STR      R0,[R1, #+0]
    543              //在PTA6引脚上使能TRACE_CLKOU功能
    544              PORTA_PCR6 = ( PORT_PCR_MUX(0x7));  
   \   000000AA   0x....             LDR.N    R0,??DataTable9_2  ;; 0x40049018
   \   000000AC   0xF44F 0x61E0      MOV      R1,#+1792
   \   000000B0   0x6001             STR      R1,[R0, #+0]
    545              //使能FlexBus模块时钟
    546              SIM_SCGC7 |= SIM_SCGC7_FLEXBUS_MASK;
   \   000000B2   0x....             LDR.N    R0,??DataTable9_3  ;; 0x40048040
   \   000000B4   0x6800             LDR      R0,[R0, #+0]
   \   000000B6   0xF050 0x0001      ORRS     R0,R0,#0x1
   \   000000BA   0x....             LDR.N    R1,??DataTable9_3  ;; 0x40048040
   \   000000BC   0x6008             STR      R0,[R1, #+0]
    547              //在PTA6引脚上使能FB_CLKOUT功能
    548              PORTC_PCR3 = ( PORT_PCR_MUX(0x5));
   \   000000BE   0x.... 0x....      LDR.W    R0,??DataTable11  ;; 0x4004b00c
   \   000000C2   0xF44F 0x61A0      MOV      R1,#+1280
   \   000000C6   0x6001             STR      R1,[R0, #+0]
    549          }
   \   000000C8   0x4770             BX       LR               ;; return
    550          //锁相环频率为137.5M测试函数

   \                                 In section .text, align 2, keep-with-next
    551          void pllinit1375M(void)
    552          {
    553          	uint32_t temp_reg;
    554                  //使能IO端口时钟    
    555              SIM_SCGC5 |= (SIM_SCGC5_PORTA_MASK
    556                                        | SIM_SCGC5_PORTB_MASK
    557                                        | SIM_SCGC5_PORTC_MASK
    558                                        | SIM_SCGC5_PORTD_MASK
    559                                        | SIM_SCGC5_PORTE_MASK );
   \                     pllinit1375M:
   \   00000000   0x....             LDR.N    R0,??DataTable8  ;; 0x40048038
   \   00000002   0x6800             LDR      R0,[R0, #+0]
   \   00000004   0xF450 0x5078      ORRS     R0,R0,#0x3E00
   \   00000008   0x....             LDR.N    R1,??DataTable8  ;; 0x40048038
   \   0000000A   0x6008             STR      R0,[R1, #+0]
    560              //这里处在默认的FEI模式
    561              //首先移动到FBE模式
    562              MCG_C2 = 0;  
   \   0000000C   0x....             LDR.N    R0,??DataTable8_1  ;; 0x40064001
   \   0000000E   0x2100             MOVS     R1,#+0
   \   00000010   0x7001             STRB     R1,[R0, #+0]
    563              //MCG_C2 = MCG_C2_RANGE(2) | MCG_C2_HGO_MASK | MCG_C2_EREFS_MASK;
    564              //初始化晶振后释放锁定状态的振荡器和GPIO
    565              SIM_SCGC4 |= SIM_SCGC4_LLWU_MASK;
   \   00000012   0x....             LDR.N    R0,??DataTable8_2  ;; 0x40048034
   \   00000014   0x6800             LDR      R0,[R0, #+0]
   \   00000016   0xF050 0x5080      ORRS     R0,R0,#0x10000000
   \   0000001A   0x....             LDR.N    R1,??DataTable8_2  ;; 0x40048034
   \   0000001C   0x6008             STR      R0,[R1, #+0]
    566              LLWU_CS |= LLWU_CS_ACKISO_MASK;
   \   0000001E   0x....             LDR.N    R0,??DataTable8_3  ;; 0x4007c008
   \   00000020   0x7800             LDRB     R0,[R0, #+0]
   \   00000022   0xF050 0x0080      ORRS     R0,R0,#0x80
   \   00000026   0x....             LDR.N    R1,??DataTable8_3  ;; 0x4007c008
   \   00000028   0x7008             STRB     R0,[R1, #+0]
    567              
    568              //选择外部晶振，参考分频器，清IREFS来启动外部晶振
    569              //011 If RANGE = 0, Divide Factor is 8; for all other RANGE values, Divide Factor is 256.
    570              MCG_C1 = MCG_C1_CLKS(2) | MCG_C1_FRDIV(3);
   \   0000002A   0x....             LDR.N    R0,??DataTable8_4  ;; 0x40064000
   \   0000002C   0x2198             MOVS     R1,#+152
   \   0000002E   0x7001             STRB     R1,[R0, #+0]
    571              
    572              //等待晶振稳定	    
    573              //while (!(MCG_S & MCG_S_OSCINIT_MASK)){}              //等待锁相环初始化结束
    574              while (MCG_S & MCG_S_IREFST_MASK){}                  //等待时钟切换到外部参考时钟
   \                     ??pllinit1375M_0:
   \   00000030   0x....             LDR.N    R0,??DataTable8_5  ;; 0x40064006
   \   00000032   0x7800             LDRB     R0,[R0, #+0]
   \   00000034   0x06C0             LSLS     R0,R0,#+27
   \   00000036   0xD4FB             BMI.N    ??pllinit1375M_0
    575              while (((MCG_S & MCG_S_CLKST_MASK) >> MCG_S_CLKST_SHIFT) != 0x2){}
   \                     ??pllinit1375M_1:
   \   00000038   0x....             LDR.N    R0,??DataTable8_5  ;; 0x40064006
   \   0000003A   0x7800             LDRB     R0,[R0, #+0]
   \   0000003C   0xF3C0 0x0081      UBFX     R0,R0,#+2,#+2
   \   00000040   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000042   0x2802             CMP      R0,#+2
   \   00000044   0xD1F8             BNE.N    ??pllinit1375M_1
    576              
    577              //进入FBE模式,
    578              //0x18==25分频=2M,
    579              //0x11==18分频=2.7778M 
    580              //0x12==19分频=2.63M,
    581              //0x13==20分频=2.5M    
    582              MCG_C5 = MCG_C5_PRDIV(0x13);                
   \   00000046   0x....             LDR.N    R0,??DataTable8_6  ;; 0x40064004
   \   00000048   0x2113             MOVS     R1,#+19
   \   0000004A   0x7001             STRB     R1,[R0, #+0]
    583              
    584              //确保MCG_C6处于复位状态，禁止LOLIE、PLL、和时钟控制器，清PLL VCO分频器
    585              MCG_C6 = 0x0;
   \   0000004C   0x....             LDR.N    R0,??DataTable8_7  ;; 0x40064005
   \   0000004E   0x2100             MOVS     R1,#+0
   \   00000050   0x7001             STRB     R1,[R0, #+0]
    586              
    587              //保存FMC_PFAPR当前的值
    588              temp_reg = FMC_PFAPR;
   \   00000052   0x....             LDR.N    R0,??DataTable8_8  ;; 0x4001f000
   \   00000054   0x6800             LDR      R0,[R0, #+0]
    589              
    590              //通过M&PFD置位M0PFD来禁止预取功能
    591              FMC_PFAPR |= FMC_PFAPR_M7PFD_MASK | FMC_PFAPR_M6PFD_MASK | FMC_PFAPR_M5PFD_MASK
    592                               | FMC_PFAPR_M4PFD_MASK | FMC_PFAPR_M3PFD_MASK | FMC_PFAPR_M2PFD_MASK
    593                               | FMC_PFAPR_M1PFD_MASK | FMC_PFAPR_M0PFD_MASK;    
   \   00000056   0x....             LDR.N    R1,??DataTable8_8  ;; 0x4001f000
   \   00000058   0x6809             LDR      R1,[R1, #+0]
   \   0000005A   0xF451 0x017F      ORRS     R1,R1,#0xFF0000
   \   0000005E   0x....             LDR.N    R2,??DataTable8_8  ;; 0x4001f000
   \   00000060   0x6011             STR      R1,[R2, #+0]
    594              ///设置系统分频器
    595              //MCG=PLL, core = MCG, bus = MCG/2, FlexBus = MCG/2, Flash clock= MCG/6
    596              SIM_CLKDIV1 = SIM_CLKDIV1_OUTDIV1(0) | SIM_CLKDIV1_OUTDIV2(1) 
    597                           | SIM_CLKDIV1_OUTDIV3(1) | SIM_CLKDIV1_OUTDIV4(5);       
   \   00000062   0x....             LDR.N    R1,??DataTable9  ;; 0x40048044
   \   00000064   0x.... 0x....      LDR.W    R2,??DataTable11_2  ;; 0x1150000
   \   00000068   0x600A             STR      R2,[R1, #+0]
    598              
    599              //从新存FMC_PFAPR的原始值
    600              FMC_PFAPR = temp_reg; 
   \   0000006A   0x....             LDR.N    R1,??DataTable8_8  ;; 0x4001f000
   \   0000006C   0x6008             STR      R0,[R1, #+0]
    601              
    602              //设置VCO分频器，使能PLL为100MHz, LOLIE=0, PLLS=1, CME=0, VDIV=26
    603              MCG_C6 = MCG_C6_PLLS_MASK | MCG_C6_VDIV(31);  //VDIV = 31 (x55)
   \   0000006E   0x....             LDR.N    R0,??DataTable8_7  ;; 0x40064005
   \   00000070   0x215F             MOVS     R1,#+95
   \   00000072   0x7001             STRB     R1,[R0, #+0]
    604                                                            //VDIV = 26 (x50)
    605              while (!(MCG_S & MCG_S_PLLST_MASK)){}; // wait for PLL status bit to set    
   \                     ??pllinit1375M_2:
   \   00000074   0x....             LDR.N    R0,??DataTable8_5  ;; 0x40064006
   \   00000076   0x7800             LDRB     R0,[R0, #+0]
   \   00000078   0x0680             LSLS     R0,R0,#+26
   \   0000007A   0xD5FB             BPL.N    ??pllinit1375M_2
    606              while (!(MCG_S & MCG_S_LOCK_MASK)){}; // Wait for LOCK bit to set    
   \                     ??pllinit1375M_3:
   \   0000007C   0x....             LDR.N    R0,??DataTable8_5  ;; 0x40064006
   \   0000007E   0x7800             LDRB     R0,[R0, #+0]
   \   00000080   0x0640             LSLS     R0,R0,#+25
   \   00000082   0xD5FB             BPL.N    ??pllinit1375M_3
    607              
    608              //进入PBE模式    
    609              //通过清零CLKS位来进入PEE模式
    610              // CLKS=0, FRDIV=3, IREFS=0, IRCLKEN=0, IREFSTEN=0
    611              MCG_C1 &= ~MCG_C1_CLKS_MASK;
   \   00000084   0x....             LDR.N    R0,??DataTable8_4  ;; 0x40064000
   \   00000086   0x7800             LDRB     R0,[R0, #+0]
   \   00000088   0xF010 0x003F      ANDS     R0,R0,#0x3F
   \   0000008C   0x....             LDR.N    R1,??DataTable8_4  ;; 0x40064000
   \   0000008E   0x7008             STRB     R0,[R1, #+0]
    612              
    613              //等待时钟状态位更新
    614              while (((MCG_S & MCG_S_CLKST_MASK) >> MCG_S_CLKST_SHIFT) != 0x3){};
   \                     ??pllinit1375M_4:
   \   00000090   0x....             LDR.N    R0,??DataTable8_5  ;; 0x40064006
   \   00000092   0x7800             LDRB     R0,[R0, #+0]
   \   00000094   0xF3C0 0x0081      UBFX     R0,R0,#+2,#+2
   \   00000098   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000009A   0x2803             CMP      R0,#+3
   \   0000009C   0xD1F8             BNE.N    ??pllinit1375M_4
    615              //SIM_CLKDIV2 |= SIM_CLKDIV2_USBDIV(1);  
    616              
    617              //设置跟踪时钟为内核时钟
    618              SIM_SOPT2 |= SIM_SOPT2_TRACECLKSEL_MASK;	
   \   0000009E   0x....             LDR.N    R0,??DataTable9_1  ;; 0x40048004
   \   000000A0   0x6800             LDR      R0,[R0, #+0]
   \   000000A2   0xF450 0x5080      ORRS     R0,R0,#0x1000
   \   000000A6   0x....             LDR.N    R1,??DataTable9_1  ;; 0x40048004
   \   000000A8   0x6008             STR      R0,[R1, #+0]
    619              //在PTA6引脚上使能TRACE_CLKOU功能
    620              PORTA_PCR6 = ( PORT_PCR_MUX(0x7));  
   \   000000AA   0x....             LDR.N    R0,??DataTable9_2  ;; 0x40049018
   \   000000AC   0xF44F 0x61E0      MOV      R1,#+1792
   \   000000B0   0x6001             STR      R1,[R0, #+0]
    621              //使能FlexBus模块时钟
    622              SIM_SCGC7 |= SIM_SCGC7_FLEXBUS_MASK;
   \   000000B2   0x....             LDR.N    R0,??DataTable9_3  ;; 0x40048040
   \   000000B4   0x6800             LDR      R0,[R0, #+0]
   \   000000B6   0xF050 0x0001      ORRS     R0,R0,#0x1
   \   000000BA   0x....             LDR.N    R1,??DataTable9_3  ;; 0x40048040
   \   000000BC   0x6008             STR      R0,[R1, #+0]
    623              //在PTA6引脚上使能FB_CLKOUT功能
    624              PORTC_PCR3 = ( PORT_PCR_MUX(0x5));
   \   000000BE   0x.... 0x....      LDR.W    R0,??DataTable11  ;; 0x4004b00c
   \   000000C2   0xF44F 0x61A0      MOV      R1,#+1280
   \   000000C6   0x6001             STR      R1,[R0, #+0]
    625          }
   \   000000C8   0x4770             BX       LR               ;; return
    626          //锁相环频率为125M测试函数

   \                                 In section .text, align 2, keep-with-next
    627          void pllinit125M(void)
    628          {
    629          	uint32_t temp_reg;
    630                  //使能IO端口时钟    
    631              SIM_SCGC5 |= (SIM_SCGC5_PORTA_MASK
    632                                        | SIM_SCGC5_PORTB_MASK
    633                                        | SIM_SCGC5_PORTC_MASK
    634                                        | SIM_SCGC5_PORTD_MASK
    635                                        | SIM_SCGC5_PORTE_MASK );
   \                     pllinit125M:
   \   00000000   0x....             LDR.N    R0,??DataTable8  ;; 0x40048038
   \   00000002   0x6800             LDR      R0,[R0, #+0]
   \   00000004   0xF450 0x5078      ORRS     R0,R0,#0x3E00
   \   00000008   0x....             LDR.N    R1,??DataTable8  ;; 0x40048038
   \   0000000A   0x6008             STR      R0,[R1, #+0]
    636              //这里处在默认的FEI模式
    637              //首先移动到FBE模式
    638              MCG_C2 = 0;  
   \   0000000C   0x....             LDR.N    R0,??DataTable8_1  ;; 0x40064001
   \   0000000E   0x2100             MOVS     R1,#+0
   \   00000010   0x7001             STRB     R1,[R0, #+0]
    639              //MCG_C2 = MCG_C2_RANGE(2) | MCG_C2_HGO_MASK | MCG_C2_EREFS_MASK;
    640              //初始化晶振后释放锁定状态的振荡器和GPIO
    641              SIM_SCGC4 |= SIM_SCGC4_LLWU_MASK;
   \   00000012   0x....             LDR.N    R0,??DataTable8_2  ;; 0x40048034
   \   00000014   0x6800             LDR      R0,[R0, #+0]
   \   00000016   0xF050 0x5080      ORRS     R0,R0,#0x10000000
   \   0000001A   0x....             LDR.N    R1,??DataTable8_2  ;; 0x40048034
   \   0000001C   0x6008             STR      R0,[R1, #+0]
    642              LLWU_CS |= LLWU_CS_ACKISO_MASK;
   \   0000001E   0x....             LDR.N    R0,??DataTable8_3  ;; 0x4007c008
   \   00000020   0x7800             LDRB     R0,[R0, #+0]
   \   00000022   0xF050 0x0080      ORRS     R0,R0,#0x80
   \   00000026   0x....             LDR.N    R1,??DataTable8_3  ;; 0x4007c008
   \   00000028   0x7008             STRB     R0,[R1, #+0]
    643              
    644              //选择外部晶振，参考分频器，清IREFS来启动外部晶振
    645              //011 If RANGE = 0, Divide Factor is 8; for all other RANGE values, Divide Factor is 256.
    646              MCG_C1 = MCG_C1_CLKS(2) | MCG_C1_FRDIV(3);
   \   0000002A   0x....             LDR.N    R0,??DataTable8_4  ;; 0x40064000
   \   0000002C   0x2198             MOVS     R1,#+152
   \   0000002E   0x7001             STRB     R1,[R0, #+0]
    647              
    648              //等待晶振稳定	    
    649              //while (!(MCG_S & MCG_S_OSCINIT_MASK)){}              //等待锁相环初始化结束
    650              while (MCG_S & MCG_S_IREFST_MASK){}                  //等待时钟切换到外部参考时钟
   \                     ??pllinit125M_0:
   \   00000030   0x....             LDR.N    R0,??DataTable8_5  ;; 0x40064006
   \   00000032   0x7800             LDRB     R0,[R0, #+0]
   \   00000034   0x06C0             LSLS     R0,R0,#+27
   \   00000036   0xD4FB             BMI.N    ??pllinit125M_0
    651              while (((MCG_S & MCG_S_CLKST_MASK) >> MCG_S_CLKST_SHIFT) != 0x2){}
   \                     ??pllinit125M_1:
   \   00000038   0x....             LDR.N    R0,??DataTable8_5  ;; 0x40064006
   \   0000003A   0x7800             LDRB     R0,[R0, #+0]
   \   0000003C   0xF3C0 0x0081      UBFX     R0,R0,#+2,#+2
   \   00000040   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000042   0x2802             CMP      R0,#+2
   \   00000044   0xD1F8             BNE.N    ??pllinit125M_1
    652              
    653              //进入FBE模式,
    654              //0x18==25分频=2M,
    655              //0x11==18分频=2.7778M 
    656              //0x12==19分频=2.63M,
    657              //0x13==20分频=2.5M    
    658              MCG_C5 = MCG_C5_PRDIV(0x13);                
   \   00000046   0x....             LDR.N    R0,??DataTable8_6  ;; 0x40064004
   \   00000048   0x2113             MOVS     R1,#+19
   \   0000004A   0x7001             STRB     R1,[R0, #+0]
    659              
    660              //确保MCG_C6处于复位状态，禁止LOLIE、PLL、和时钟控制器，清PLL VCO分频器
    661              MCG_C6 = 0x0;
   \   0000004C   0x....             LDR.N    R0,??DataTable8_7  ;; 0x40064005
   \   0000004E   0x2100             MOVS     R1,#+0
   \   00000050   0x7001             STRB     R1,[R0, #+0]
    662              
    663              //保存FMC_PFAPR当前的值
    664              temp_reg = FMC_PFAPR;
   \   00000052   0x....             LDR.N    R0,??DataTable8_8  ;; 0x4001f000
   \   00000054   0x6800             LDR      R0,[R0, #+0]
    665              
    666              //通过M&PFD置位M0PFD来禁止预取功能
    667              FMC_PFAPR |= FMC_PFAPR_M7PFD_MASK | FMC_PFAPR_M6PFD_MASK | FMC_PFAPR_M5PFD_MASK
    668                               | FMC_PFAPR_M4PFD_MASK | FMC_PFAPR_M3PFD_MASK | FMC_PFAPR_M2PFD_MASK
    669                               | FMC_PFAPR_M1PFD_MASK | FMC_PFAPR_M0PFD_MASK;    
   \   00000056   0x....             LDR.N    R1,??DataTable8_8  ;; 0x4001f000
   \   00000058   0x6809             LDR      R1,[R1, #+0]
   \   0000005A   0xF451 0x017F      ORRS     R1,R1,#0xFF0000
   \   0000005E   0x....             LDR.N    R2,??DataTable8_8  ;; 0x4001f000
   \   00000060   0x6011             STR      R1,[R2, #+0]
    670              ///设置系统分频器
    671              //MCG=PLL, core = MCG, bus = MCG/2, FlexBus = MCG/2, Flash clock= MCG/6
    672              SIM_CLKDIV1 = SIM_CLKDIV1_OUTDIV1(0) | SIM_CLKDIV1_OUTDIV2(1) 
    673                           | SIM_CLKDIV1_OUTDIV3(1) | SIM_CLKDIV1_OUTDIV4(5);       
   \   00000062   0x....             LDR.N    R1,??DataTable9  ;; 0x40048044
   \   00000064   0x....             LDR.N    R2,??DataTable11_2  ;; 0x1150000
   \   00000066   0x600A             STR      R2,[R1, #+0]
    674              
    675              //从新存FMC_PFAPR的原始值
    676              FMC_PFAPR = temp_reg; 
   \   00000068   0x....             LDR.N    R1,??DataTable8_8  ;; 0x4001f000
   \   0000006A   0x6008             STR      R0,[R1, #+0]
    677              
    678              //设置VCO分频器，使能PLL为100MHz, LOLIE=0, PLLS=1, CME=0, VDIV=26
    679              MCG_C6 = MCG_C6_PLLS_MASK | MCG_C6_VDIV(26);  //VDIV = 31 (x55)
   \   0000006C   0x....             LDR.N    R0,??DataTable8_7  ;; 0x40064005
   \   0000006E   0x215A             MOVS     R1,#+90
   \   00000070   0x7001             STRB     R1,[R0, #+0]
    680                                                            //VDIV = 26 (x50)
    681              while (!(MCG_S & MCG_S_PLLST_MASK)){}; // wait for PLL status bit to set    
   \                     ??pllinit125M_2:
   \   00000072   0x....             LDR.N    R0,??DataTable8_5  ;; 0x40064006
   \   00000074   0x7800             LDRB     R0,[R0, #+0]
   \   00000076   0x0680             LSLS     R0,R0,#+26
   \   00000078   0xD5FB             BPL.N    ??pllinit125M_2
    682              while (!(MCG_S & MCG_S_LOCK_MASK)){}; // Wait for LOCK bit to set    
   \                     ??pllinit125M_3:
   \   0000007A   0x....             LDR.N    R0,??DataTable8_5  ;; 0x40064006
   \   0000007C   0x7800             LDRB     R0,[R0, #+0]
   \   0000007E   0x0640             LSLS     R0,R0,#+25
   \   00000080   0xD5FB             BPL.N    ??pllinit125M_3
    683              
    684              //进入PBE模式    
    685              //通过清零CLKS位来进入PEE模式
    686              // CLKS=0, FRDIV=3, IREFS=0, IRCLKEN=0, IREFSTEN=0
    687              MCG_C1 &= ~MCG_C1_CLKS_MASK;
   \   00000082   0x....             LDR.N    R0,??DataTable8_4  ;; 0x40064000
   \   00000084   0x7800             LDRB     R0,[R0, #+0]
   \   00000086   0xF010 0x003F      ANDS     R0,R0,#0x3F
   \   0000008A   0x....             LDR.N    R1,??DataTable8_4  ;; 0x40064000
   \   0000008C   0x7008             STRB     R0,[R1, #+0]
    688              
    689              //等待时钟状态位更新
    690              while (((MCG_S & MCG_S_CLKST_MASK) >> MCG_S_CLKST_SHIFT) != 0x3){};
   \                     ??pllinit125M_4:
   \   0000008E   0x....             LDR.N    R0,??DataTable8_5  ;; 0x40064006
   \   00000090   0x7800             LDRB     R0,[R0, #+0]
   \   00000092   0xF3C0 0x0081      UBFX     R0,R0,#+2,#+2
   \   00000096   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000098   0x2803             CMP      R0,#+3
   \   0000009A   0xD1F8             BNE.N    ??pllinit125M_4
    691              //SIM_CLKDIV2 |= SIM_CLKDIV2_USBDIV(1); 
    692              
    693                  //设置跟踪时钟为内核时钟
    694              SIM_SOPT2 |= SIM_SOPT2_TRACECLKSEL_MASK;	
   \   0000009C   0x....             LDR.N    R0,??DataTable9_1  ;; 0x40048004
   \   0000009E   0x6800             LDR      R0,[R0, #+0]
   \   000000A0   0xF450 0x5080      ORRS     R0,R0,#0x1000
   \   000000A4   0x....             LDR.N    R1,??DataTable9_1  ;; 0x40048004
   \   000000A6   0x6008             STR      R0,[R1, #+0]
    695              //在PTA6引脚上使能TRACE_CLKOU功能
    696              PORTA_PCR6 = ( PORT_PCR_MUX(0x7));  
   \   000000A8   0x....             LDR.N    R0,??DataTable9_2  ;; 0x40049018
   \   000000AA   0xF44F 0x61E0      MOV      R1,#+1792
   \   000000AE   0x6001             STR      R1,[R0, #+0]
    697              //使能FlexBus模块时钟
    698              SIM_SCGC7 |= SIM_SCGC7_FLEXBUS_MASK;
   \   000000B0   0x....             LDR.N    R0,??DataTable9_3  ;; 0x40048040
   \   000000B2   0x6800             LDR      R0,[R0, #+0]
   \   000000B4   0xF050 0x0001      ORRS     R0,R0,#0x1
   \   000000B8   0x....             LDR.N    R1,??DataTable9_3  ;; 0x40048040
   \   000000BA   0x6008             STR      R0,[R1, #+0]
    699              //在PTA6引脚上使能FB_CLKOUT功能
    700              PORTC_PCR3 = ( PORT_PCR_MUX(0x5));
   \   000000BC   0x....             LDR.N    R0,??DataTable11  ;; 0x4004b00c
   \   000000BE   0xF44F 0x61A0      MOV      R1,#+1280
   \   000000C2   0x6001             STR      R1,[R0, #+0]
    701          }
   \   000000C4   0x4770             BX       LR               ;; return
    702          
    703          //锁相环频率为100M测试函数

   \                                 In section .text, align 2, keep-with-next
    704          void pllinit100M(void)
    705          {
    706          	uint32_t temp_reg;
    707                  //使能IO端口时钟    
    708              SIM_SCGC5 |= (SIM_SCGC5_PORTA_MASK
    709                                        | SIM_SCGC5_PORTB_MASK
    710                                        | SIM_SCGC5_PORTC_MASK
    711                                        | SIM_SCGC5_PORTD_MASK
    712                                        | SIM_SCGC5_PORTE_MASK );
   \                     pllinit100M:
   \   00000000   0x....             LDR.N    R0,??DataTable11_3  ;; 0x40048038
   \   00000002   0x6800             LDR      R0,[R0, #+0]
   \   00000004   0xF450 0x5078      ORRS     R0,R0,#0x3E00
   \   00000008   0x....             LDR.N    R1,??DataTable11_3  ;; 0x40048038
   \   0000000A   0x6008             STR      R0,[R1, #+0]
    713              //这里处在默认的FEI模式
    714              //首先移动到FBE模式
    715              MCG_C2 = 0;  
   \   0000000C   0x....             LDR.N    R0,??DataTable11_4  ;; 0x40064001
   \   0000000E   0x2100             MOVS     R1,#+0
   \   00000010   0x7001             STRB     R1,[R0, #+0]
    716              //MCG_C2 = MCG_C2_RANGE(2) | MCG_C2_HGO_MASK | MCG_C2_EREFS_MASK;
    717              //初始化晶振后释放锁定状态的振荡器和GPIO
    718              SIM_SCGC4 |= SIM_SCGC4_LLWU_MASK;
   \   00000012   0x....             LDR.N    R0,??DataTable11_5  ;; 0x40048034
   \   00000014   0x6800             LDR      R0,[R0, #+0]
   \   00000016   0xF050 0x5080      ORRS     R0,R0,#0x10000000
   \   0000001A   0x....             LDR.N    R1,??DataTable11_5  ;; 0x40048034
   \   0000001C   0x6008             STR      R0,[R1, #+0]
    719              LLWU_CS |= LLWU_CS_ACKISO_MASK;
   \   0000001E   0x....             LDR.N    R0,??DataTable11_6  ;; 0x4007c008
   \   00000020   0x7800             LDRB     R0,[R0, #+0]
   \   00000022   0xF050 0x0080      ORRS     R0,R0,#0x80
   \   00000026   0x....             LDR.N    R1,??DataTable11_6  ;; 0x4007c008
   \   00000028   0x7008             STRB     R0,[R1, #+0]
    720              
    721              //选择外部晶振，参考分频器，清IREFS来启动外部晶振
    722              //011 If RANGE = 0, Divide Factor is 8; for all other RANGE values, Divide Factor is 256.
    723              MCG_C1 = MCG_C1_CLKS(2) | MCG_C1_FRDIV(3);
   \   0000002A   0x....             LDR.N    R0,??DataTable11_7  ;; 0x40064000
   \   0000002C   0x2198             MOVS     R1,#+152
   \   0000002E   0x7001             STRB     R1,[R0, #+0]
    724              
    725              //等待晶振稳定	    
    726              //while (!(MCG_S & MCG_S_OSCINIT_MASK)){}              //等待锁相环初始化结束
    727              while (MCG_S & MCG_S_IREFST_MASK){}                  //等待时钟切换到外部参考时钟
   \                     ??pllinit100M_0:
   \   00000030   0x....             LDR.N    R0,??DataTable11_8  ;; 0x40064006
   \   00000032   0x7800             LDRB     R0,[R0, #+0]
   \   00000034   0x06C0             LSLS     R0,R0,#+27
   \   00000036   0xD4FB             BMI.N    ??pllinit100M_0
    728              while (((MCG_S & MCG_S_CLKST_MASK) >> MCG_S_CLKST_SHIFT) != 0x2){}
   \                     ??pllinit100M_1:
   \   00000038   0x....             LDR.N    R0,??DataTable11_8  ;; 0x40064006
   \   0000003A   0x7800             LDRB     R0,[R0, #+0]
   \   0000003C   0xF3C0 0x0081      UBFX     R0,R0,#+2,#+2
   \   00000040   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000042   0x2802             CMP      R0,#+2
   \   00000044   0xD1F8             BNE.N    ??pllinit100M_1
    729              
    730              //进入FBE模式,
    731              //0x18==25分频=2M,
    732              //0x11==18分频=2.7778M 
    733              //0x12==19分频=2.63M,
    734              //0x13==20分频=2.5M    
    735              MCG_C5 = MCG_C5_PRDIV(0x18);                
   \   00000046   0x....             LDR.N    R0,??DataTable11_9  ;; 0x40064004
   \   00000048   0x2118             MOVS     R1,#+24
   \   0000004A   0x7001             STRB     R1,[R0, #+0]
    736              
    737              //确保MCG_C6处于复位状态，禁止LOLIE、PLL、和时钟控制器，清PLL VCO分频器
    738              MCG_C6 = 0x0;
   \   0000004C   0x....             LDR.N    R0,??DataTable11_10  ;; 0x40064005
   \   0000004E   0x2100             MOVS     R1,#+0
   \   00000050   0x7001             STRB     R1,[R0, #+0]
    739              
    740              //保存FMC_PFAPR当前的值
    741              temp_reg = FMC_PFAPR;
   \   00000052   0x....             LDR.N    R0,??DataTable11_11  ;; 0x4001f000
   \   00000054   0x6800             LDR      R0,[R0, #+0]
    742              
    743              //通过M&PFD置位M0PFD来禁止预取功能
    744              FMC_PFAPR |= FMC_PFAPR_M7PFD_MASK | FMC_PFAPR_M6PFD_MASK | FMC_PFAPR_M5PFD_MASK
    745                               | FMC_PFAPR_M4PFD_MASK | FMC_PFAPR_M3PFD_MASK | FMC_PFAPR_M2PFD_MASK
    746                               | FMC_PFAPR_M1PFD_MASK | FMC_PFAPR_M0PFD_MASK;    
   \   00000056   0x....             LDR.N    R1,??DataTable11_11  ;; 0x4001f000
   \   00000058   0x6809             LDR      R1,[R1, #+0]
   \   0000005A   0xF451 0x017F      ORRS     R1,R1,#0xFF0000
   \   0000005E   0x....             LDR.N    R2,??DataTable11_11  ;; 0x4001f000
   \   00000060   0x6011             STR      R1,[R2, #+0]
    747              ///设置系统分频器
    748              //MCG=PLL, core = MCG, bus = MCG/2, FlexBus = MCG/2, Flash clock= MCG/4
    749              SIM_CLKDIV1 = SIM_CLKDIV1_OUTDIV1(0) | SIM_CLKDIV1_OUTDIV2(1) 
    750                           | SIM_CLKDIV1_OUTDIV3(1) | SIM_CLKDIV1_OUTDIV4(3);       
   \   00000062   0x....             LDR.N    R1,??DataTable9  ;; 0x40048044
   \   00000064   0x....             LDR.N    R2,??DataTable11_12  ;; 0x1130000
   \   00000066   0x600A             STR      R2,[R1, #+0]
    751              
    752              //从新存FMC_PFAPR的原始值
    753              FMC_PFAPR = temp_reg; 
   \   00000068   0x....             LDR.N    R1,??DataTable11_11  ;; 0x4001f000
   \   0000006A   0x6008             STR      R0,[R1, #+0]
    754              
    755              //设置VCO分频器，使能PLL为100MHz, LOLIE=0, PLLS=1, CME=0, VDIV=26
    756              MCG_C6 = MCG_C6_PLLS_MASK | MCG_C6_VDIV(26);  //VDIV = 31 (x55)
   \   0000006C   0x....             LDR.N    R0,??DataTable11_10  ;; 0x40064005
   \   0000006E   0x215A             MOVS     R1,#+90
   \   00000070   0x7001             STRB     R1,[R0, #+0]
    757                                                            //VDIV = 26 (x50)
    758              while (!(MCG_S & MCG_S_PLLST_MASK)){}; // wait for PLL status bit to set    
   \                     ??pllinit100M_2:
   \   00000072   0x....             LDR.N    R0,??DataTable11_8  ;; 0x40064006
   \   00000074   0x7800             LDRB     R0,[R0, #+0]
   \   00000076   0x0680             LSLS     R0,R0,#+26
   \   00000078   0xD5FB             BPL.N    ??pllinit100M_2
    759              while (!(MCG_S & MCG_S_LOCK_MASK)){}; // Wait for LOCK bit to set    
   \                     ??pllinit100M_3:
   \   0000007A   0x....             LDR.N    R0,??DataTable11_8  ;; 0x40064006
   \   0000007C   0x7800             LDRB     R0,[R0, #+0]
   \   0000007E   0x0640             LSLS     R0,R0,#+25
   \   00000080   0xD5FB             BPL.N    ??pllinit100M_3
    760              
    761              //进入PBE模式    
    762              //通过清零CLKS位来进入PEE模式
    763              // CLKS=0, FRDIV=3, IREFS=0, IRCLKEN=0, IREFSTEN=0
    764              MCG_C1 &= ~MCG_C1_CLKS_MASK;
   \   00000082   0x....             LDR.N    R0,??DataTable11_7  ;; 0x40064000
   \   00000084   0x7800             LDRB     R0,[R0, #+0]
   \   00000086   0xF010 0x003F      ANDS     R0,R0,#0x3F
   \   0000008A   0x....             LDR.N    R1,??DataTable11_7  ;; 0x40064000
   \   0000008C   0x7008             STRB     R0,[R1, #+0]
    765              
    766              //等待时钟状态位更新
    767              while (((MCG_S & MCG_S_CLKST_MASK) >> MCG_S_CLKST_SHIFT) != 0x3){};
   \                     ??pllinit100M_4:
   \   0000008E   0x....             LDR.N    R0,??DataTable11_8  ;; 0x40064006
   \   00000090   0x7800             LDRB     R0,[R0, #+0]
   \   00000092   0xF3C0 0x0081      UBFX     R0,R0,#+2,#+2
   \   00000096   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000098   0x2803             CMP      R0,#+3
   \   0000009A   0xD1F8             BNE.N    ??pllinit100M_4
    768              //SIM_CLKDIV2 |= SIM_CLKDIV2_USBDIV(1);  
    769              
    770                  //设置跟踪时钟为内核时钟
    771              SIM_SOPT2 |= SIM_SOPT2_TRACECLKSEL_MASK;	
   \   0000009C   0x....             LDR.N    R0,??DataTable9_1  ;; 0x40048004
   \   0000009E   0x6800             LDR      R0,[R0, #+0]
   \   000000A0   0xF450 0x5080      ORRS     R0,R0,#0x1000
   \   000000A4   0x....             LDR.N    R1,??DataTable9_1  ;; 0x40048004
   \   000000A6   0x6008             STR      R0,[R1, #+0]
    772              //在PTA6引脚上使能TRACE_CLKOU功能
    773              PORTA_PCR6 = ( PORT_PCR_MUX(0x7));  
   \   000000A8   0x....             LDR.N    R0,??DataTable9_2  ;; 0x40049018
   \   000000AA   0xF44F 0x61E0      MOV      R1,#+1792
   \   000000AE   0x6001             STR      R1,[R0, #+0]
    774              //使能FlexBus模块时钟
    775              SIM_SCGC7 |= SIM_SCGC7_FLEXBUS_MASK;
   \   000000B0   0x....             LDR.N    R0,??DataTable9_3  ;; 0x40048040
   \   000000B2   0x6800             LDR      R0,[R0, #+0]
   \   000000B4   0xF050 0x0001      ORRS     R0,R0,#0x1
   \   000000B8   0x....             LDR.N    R1,??DataTable9_3  ;; 0x40048040
   \   000000BA   0x6008             STR      R0,[R1, #+0]
    776              //在PTA6引脚上使能FB_CLKOUT功能
    777              PORTC_PCR3 = ( PORT_PCR_MUX(0x5));
   \   000000BC   0x....             LDR.N    R0,??DataTable11  ;; 0x4004b00c
   \   000000BE   0xF44F 0x61A0      MOV      R1,#+1280
   \   000000C2   0x6001             STR      R1,[R0, #+0]
    778          }
   \   000000C4   0x4770             BX       LR               ;; return
    779          
    780          //锁相环频率为80M测试函数

   \                                 In section .text, align 2, keep-with-next
    781          void pllinit80M(void)
    782          {
    783          	uint32_t temp_reg;
    784                  //使能IO端口时钟    
    785              SIM_SCGC5 |= (SIM_SCGC5_PORTA_MASK
    786                                        | SIM_SCGC5_PORTB_MASK
    787                                        | SIM_SCGC5_PORTC_MASK
    788                                        | SIM_SCGC5_PORTD_MASK
    789                                        | SIM_SCGC5_PORTE_MASK );
   \                     pllinit80M:
   \   00000000   0x....             LDR.N    R0,??DataTable11_3  ;; 0x40048038
   \   00000002   0x6800             LDR      R0,[R0, #+0]
   \   00000004   0xF450 0x5078      ORRS     R0,R0,#0x3E00
   \   00000008   0x....             LDR.N    R1,??DataTable11_3  ;; 0x40048038
   \   0000000A   0x6008             STR      R0,[R1, #+0]
    790              //这里处在默认的FEI模式
    791              //首先移动到FBE模式
    792              MCG_C2 = 0;  
   \   0000000C   0x....             LDR.N    R0,??DataTable11_4  ;; 0x40064001
   \   0000000E   0x2100             MOVS     R1,#+0
   \   00000010   0x7001             STRB     R1,[R0, #+0]
    793              //MCG_C2 = MCG_C2_RANGE(2) | MCG_C2_HGO_MASK | MCG_C2_EREFS_MASK;
    794              //初始化晶振后释放锁定状态的振荡器和GPIO
    795              SIM_SCGC4 |= SIM_SCGC4_LLWU_MASK;
   \   00000012   0x....             LDR.N    R0,??DataTable11_5  ;; 0x40048034
   \   00000014   0x6800             LDR      R0,[R0, #+0]
   \   00000016   0xF050 0x5080      ORRS     R0,R0,#0x10000000
   \   0000001A   0x....             LDR.N    R1,??DataTable11_5  ;; 0x40048034
   \   0000001C   0x6008             STR      R0,[R1, #+0]
    796              LLWU_CS |= LLWU_CS_ACKISO_MASK;
   \   0000001E   0x....             LDR.N    R0,??DataTable11_6  ;; 0x4007c008
   \   00000020   0x7800             LDRB     R0,[R0, #+0]
   \   00000022   0xF050 0x0080      ORRS     R0,R0,#0x80
   \   00000026   0x....             LDR.N    R1,??DataTable11_6  ;; 0x4007c008
   \   00000028   0x7008             STRB     R0,[R1, #+0]
    797              
    798              //选择外部晶振，参考分频器，清IREFS来启动外部晶振
    799              //011 If RANGE = 0, Divide Factor is 8; for all other RANGE values, Divide Factor is 256.
    800              MCG_C1 = MCG_C1_CLKS(2) | MCG_C1_FRDIV(3);
   \   0000002A   0x....             LDR.N    R0,??DataTable11_7  ;; 0x40064000
   \   0000002C   0x2198             MOVS     R1,#+152
   \   0000002E   0x7001             STRB     R1,[R0, #+0]
    801              
    802              //等待晶振稳定	    
    803              //while (!(MCG_S & MCG_S_OSCINIT_MASK)){}              //等待锁相环初始化结束
    804              while (MCG_S & MCG_S_IREFST_MASK){}                  //等待时钟切换到外部参考时钟
   \                     ??pllinit80M_0:
   \   00000030   0x....             LDR.N    R0,??DataTable11_8  ;; 0x40064006
   \   00000032   0x7800             LDRB     R0,[R0, #+0]
   \   00000034   0x06C0             LSLS     R0,R0,#+27
   \   00000036   0xD4FB             BMI.N    ??pllinit80M_0
    805              while (((MCG_S & MCG_S_CLKST_MASK) >> MCG_S_CLKST_SHIFT) != 0x2){}
   \                     ??pllinit80M_1:
   \   00000038   0x....             LDR.N    R0,??DataTable11_8  ;; 0x40064006
   \   0000003A   0x7800             LDRB     R0,[R0, #+0]
   \   0000003C   0xF3C0 0x0081      UBFX     R0,R0,#+2,#+2
   \   00000040   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000042   0x2802             CMP      R0,#+2
   \   00000044   0xD1F8             BNE.N    ??pllinit80M_1
    806              
    807              //进入FBE模式,
    808              //0x18==25分频=2M,
    809              //0x11==18分频=2.7778M 
    810              //0x12==19分频=2.63M,
    811              //0x13==20分频=2.5M    
    812              MCG_C5 = MCG_C5_PRDIV(0x18);                
   \   00000046   0x....             LDR.N    R0,??DataTable11_9  ;; 0x40064004
   \   00000048   0x2118             MOVS     R1,#+24
   \   0000004A   0x7001             STRB     R1,[R0, #+0]
    813              
    814              //确保MCG_C6处于复位状态，禁止LOLIE、PLL、和时钟控制器，清PLL VCO分频器
    815              MCG_C6 = 0x0;
   \   0000004C   0x....             LDR.N    R0,??DataTable11_10  ;; 0x40064005
   \   0000004E   0x2100             MOVS     R1,#+0
   \   00000050   0x7001             STRB     R1,[R0, #+0]
    816              
    817              //保存FMC_PFAPR当前的值
    818              temp_reg = FMC_PFAPR;
   \   00000052   0x....             LDR.N    R0,??DataTable11_11  ;; 0x4001f000
   \   00000054   0x6800             LDR      R0,[R0, #+0]
    819              
    820              //通过M&PFD置位M0PFD来禁止预取功能
    821              FMC_PFAPR |= FMC_PFAPR_M7PFD_MASK | FMC_PFAPR_M6PFD_MASK | FMC_PFAPR_M5PFD_MASK
    822                               | FMC_PFAPR_M4PFD_MASK | FMC_PFAPR_M3PFD_MASK | FMC_PFAPR_M2PFD_MASK
    823                               | FMC_PFAPR_M1PFD_MASK | FMC_PFAPR_M0PFD_MASK;    
   \   00000056   0x....             LDR.N    R1,??DataTable11_11  ;; 0x4001f000
   \   00000058   0x6809             LDR      R1,[R1, #+0]
   \   0000005A   0xF451 0x017F      ORRS     R1,R1,#0xFF0000
   \   0000005E   0x....             LDR.N    R2,??DataTable11_11  ;; 0x4001f000
   \   00000060   0x6011             STR      R1,[R2, #+0]
    824              ///设置系统分频器
    825              //MCG=PLL, core = MCG, bus = MCG/2, FlexBus = MCG/2, Flash clock= MCG/4
    826              SIM_CLKDIV1 = SIM_CLKDIV1_OUTDIV1(0) | SIM_CLKDIV1_OUTDIV2(1) 
    827                           | SIM_CLKDIV1_OUTDIV3(1) | SIM_CLKDIV1_OUTDIV4(3);       
   \   00000062   0x....             LDR.N    R1,??DataTable11_13  ;; 0x40048044
   \   00000064   0x....             LDR.N    R2,??DataTable11_12  ;; 0x1130000
   \   00000066   0x600A             STR      R2,[R1, #+0]
    828              
    829              //从新存FMC_PFAPR的原始值
    830              FMC_PFAPR = temp_reg; 
   \   00000068   0x....             LDR.N    R1,??DataTable11_11  ;; 0x4001f000
   \   0000006A   0x6008             STR      R0,[R1, #+0]
    831              
    832              //设置VCO分频器，使能PLL为100MHz, LOLIE=0, PLLS=1, CME=0, VDIV=26
    833              MCG_C6 = MCG_C6_PLLS_MASK | MCG_C6_VDIV(16);  //VDIV = 31 (x55)
   \   0000006C   0x....             LDR.N    R0,??DataTable11_10  ;; 0x40064005
   \   0000006E   0x2150             MOVS     R1,#+80
   \   00000070   0x7001             STRB     R1,[R0, #+0]
    834                                                            //VDIV = 26 (x50)
    835          												  //VDIV = 16 (x40)
    836              while (!(MCG_S & MCG_S_PLLST_MASK)){}; // wait for PLL status bit to set    
   \                     ??pllinit80M_2:
   \   00000072   0x....             LDR.N    R0,??DataTable11_8  ;; 0x40064006
   \   00000074   0x7800             LDRB     R0,[R0, #+0]
   \   00000076   0x0680             LSLS     R0,R0,#+26
   \   00000078   0xD5FB             BPL.N    ??pllinit80M_2
    837              while (!(MCG_S & MCG_S_LOCK_MASK)){}; // Wait for LOCK bit to set    
   \                     ??pllinit80M_3:
   \   0000007A   0x....             LDR.N    R0,??DataTable11_8  ;; 0x40064006
   \   0000007C   0x7800             LDRB     R0,[R0, #+0]
   \   0000007E   0x0640             LSLS     R0,R0,#+25
   \   00000080   0xD5FB             BPL.N    ??pllinit80M_3
    838              
    839              //进入PBE模式    
    840              //通过清零CLKS位来进入PEE模式
    841              // CLKS=0, FRDIV=3, IREFS=0, IRCLKEN=0, IREFSTEN=0
    842              MCG_C1 &= ~MCG_C1_CLKS_MASK;
   \   00000082   0x....             LDR.N    R0,??DataTable11_7  ;; 0x40064000
   \   00000084   0x7800             LDRB     R0,[R0, #+0]
   \   00000086   0xF010 0x003F      ANDS     R0,R0,#0x3F
   \   0000008A   0x....             LDR.N    R1,??DataTable11_7  ;; 0x40064000
   \   0000008C   0x7008             STRB     R0,[R1, #+0]
    843              
    844              //等待时钟状态位更新
    845              while (((MCG_S & MCG_S_CLKST_MASK) >> MCG_S_CLKST_SHIFT) != 0x3){};
   \                     ??pllinit80M_4:
   \   0000008E   0x....             LDR.N    R0,??DataTable11_8  ;; 0x40064006
   \   00000090   0x7800             LDRB     R0,[R0, #+0]
   \   00000092   0xF3C0 0x0081      UBFX     R0,R0,#+2,#+2
   \   00000096   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000098   0x2803             CMP      R0,#+3
   \   0000009A   0xD1F8             BNE.N    ??pllinit80M_4
    846              //SIM_CLKDIV2 |= SIM_CLKDIV2_USBDIV(1);    
    847              
    848                  //设置跟踪时钟为内核时钟
    849              SIM_SOPT2 |= SIM_SOPT2_TRACECLKSEL_MASK;	
   \   0000009C   0x....             LDR.N    R0,??DataTable11_14  ;; 0x40048004
   \   0000009E   0x6800             LDR      R0,[R0, #+0]
   \   000000A0   0xF450 0x5080      ORRS     R0,R0,#0x1000
   \   000000A4   0x....             LDR.N    R1,??DataTable11_14  ;; 0x40048004
   \   000000A6   0x6008             STR      R0,[R1, #+0]
    850              //在PTA6引脚上使能TRACE_CLKOU功能
    851              PORTA_PCR6 = ( PORT_PCR_MUX(0x7));  
   \   000000A8   0x....             LDR.N    R0,??DataTable11_15  ;; 0x40049018
   \   000000AA   0xF44F 0x61E0      MOV      R1,#+1792
   \   000000AE   0x6001             STR      R1,[R0, #+0]
    852              //使能FlexBus模块时钟
    853              SIM_SCGC7 |= SIM_SCGC7_FLEXBUS_MASK;
   \   000000B0   0x....             LDR.N    R0,??DataTable11_16  ;; 0x40048040
   \   000000B2   0x6800             LDR      R0,[R0, #+0]
   \   000000B4   0xF050 0x0001      ORRS     R0,R0,#0x1
   \   000000B8   0x....             LDR.N    R1,??DataTable11_16  ;; 0x40048040
   \   000000BA   0x6008             STR      R0,[R1, #+0]
    854              //在PTA6引脚上使能FB_CLKOUT功能
    855              PORTC_PCR3 = ( PORT_PCR_MUX(0x5));
   \   000000BC   0x....             LDR.N    R0,??DataTable11  ;; 0x4004b00c
   \   000000BE   0xF44F 0x61A0      MOV      R1,#+1280
   \   000000C2   0x6001             STR      R1,[R0, #+0]
    856          }
   \   000000C4   0x4770             BX       LR               ;; return
    857          
    858          //锁相环频率为60M测试函数

   \                                 In section .text, align 2, keep-with-next
    859          void pllinit60M(void)
    860          {
    861          	uint32_t temp_reg;
    862                  //使能IO端口时钟    
    863              SIM_SCGC5 |= (SIM_SCGC5_PORTA_MASK
    864                                        | SIM_SCGC5_PORTB_MASK
    865                                        | SIM_SCGC5_PORTC_MASK
    866                                        | SIM_SCGC5_PORTD_MASK
    867                                        | SIM_SCGC5_PORTE_MASK );
   \                     pllinit60M:
   \   00000000   0x....             LDR.N    R0,??DataTable11_3  ;; 0x40048038
   \   00000002   0x6800             LDR      R0,[R0, #+0]
   \   00000004   0xF450 0x5078      ORRS     R0,R0,#0x3E00
   \   00000008   0x....             LDR.N    R1,??DataTable11_3  ;; 0x40048038
   \   0000000A   0x6008             STR      R0,[R1, #+0]
    868              //这里处在默认的FEI模式
    869              //首先移动到FBE模式
    870              MCG_C2 = 0;  
   \   0000000C   0x....             LDR.N    R0,??DataTable11_4  ;; 0x40064001
   \   0000000E   0x2100             MOVS     R1,#+0
   \   00000010   0x7001             STRB     R1,[R0, #+0]
    871              //MCG_C2 = MCG_C2_RANGE(2) | MCG_C2_HGO_MASK | MCG_C2_EREFS_MASK;
    872              //初始化晶振后释放锁定状态的振荡器和GPIO
    873              SIM_SCGC4 |= SIM_SCGC4_LLWU_MASK;
   \   00000012   0x....             LDR.N    R0,??DataTable11_5  ;; 0x40048034
   \   00000014   0x6800             LDR      R0,[R0, #+0]
   \   00000016   0xF050 0x5080      ORRS     R0,R0,#0x10000000
   \   0000001A   0x....             LDR.N    R1,??DataTable11_5  ;; 0x40048034
   \   0000001C   0x6008             STR      R0,[R1, #+0]
    874              LLWU_CS |= LLWU_CS_ACKISO_MASK;
   \   0000001E   0x....             LDR.N    R0,??DataTable11_6  ;; 0x4007c008
   \   00000020   0x7800             LDRB     R0,[R0, #+0]
   \   00000022   0xF050 0x0080      ORRS     R0,R0,#0x80
   \   00000026   0x....             LDR.N    R1,??DataTable11_6  ;; 0x4007c008
   \   00000028   0x7008             STRB     R0,[R1, #+0]
    875              
    876              //选择外部晶振，参考分频器，清IREFS来启动外部晶振
    877              //011 If RANGE = 0, Divide Factor is 8; for all other RANGE values, Divide Factor is 256.
    878              MCG_C1 = MCG_C1_CLKS(2) | MCG_C1_FRDIV(3);
   \   0000002A   0x....             LDR.N    R0,??DataTable11_7  ;; 0x40064000
   \   0000002C   0x2198             MOVS     R1,#+152
   \   0000002E   0x7001             STRB     R1,[R0, #+0]
    879              
    880              //等待晶振稳定	    
    881              //while (!(MCG_S & MCG_S_OSCINIT_MASK)){}              //等待锁相环初始化结束
    882              while (MCG_S & MCG_S_IREFST_MASK){}                  //等待时钟切换到外部参考时钟
   \                     ??pllinit60M_0:
   \   00000030   0x....             LDR.N    R0,??DataTable11_8  ;; 0x40064006
   \   00000032   0x7800             LDRB     R0,[R0, #+0]
   \   00000034   0x06C0             LSLS     R0,R0,#+27
   \   00000036   0xD4FB             BMI.N    ??pllinit60M_0
    883              while (((MCG_S & MCG_S_CLKST_MASK) >> MCG_S_CLKST_SHIFT) != 0x2){}
   \                     ??pllinit60M_1:
   \   00000038   0x....             LDR.N    R0,??DataTable11_8  ;; 0x40064006
   \   0000003A   0x7800             LDRB     R0,[R0, #+0]
   \   0000003C   0xF3C0 0x0081      UBFX     R0,R0,#+2,#+2
   \   00000040   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000042   0x2802             CMP      R0,#+2
   \   00000044   0xD1F8             BNE.N    ??pllinit60M_1
    884              
    885              //进入FBE模式,
    886              //0x18==25分频=2M,
    887              //0x11==18分频=2.7778M 
    888              //0x12==19分频=2.63M,
    889              //0x13==20分频=2.5M    
    890              MCG_C5 = MCG_C5_PRDIV(0x18);                
   \   00000046   0x....             LDR.N    R0,??DataTable11_9  ;; 0x40064004
   \   00000048   0x2118             MOVS     R1,#+24
   \   0000004A   0x7001             STRB     R1,[R0, #+0]
    891              
    892              //确保MCG_C6处于复位状态，禁止LOLIE、PLL、和时钟控制器，清PLL VCO分频器
    893              MCG_C6 = 0x0;
   \   0000004C   0x....             LDR.N    R0,??DataTable11_10  ;; 0x40064005
   \   0000004E   0x2100             MOVS     R1,#+0
   \   00000050   0x7001             STRB     R1,[R0, #+0]
    894              
    895              //保存FMC_PFAPR当前的值
    896              temp_reg = FMC_PFAPR;
   \   00000052   0x....             LDR.N    R0,??DataTable11_11  ;; 0x4001f000
   \   00000054   0x6800             LDR      R0,[R0, #+0]
    897              
    898              //通过M&PFD置位M0PFD来禁止预取功能
    899              FMC_PFAPR |= FMC_PFAPR_M7PFD_MASK | FMC_PFAPR_M6PFD_MASK | FMC_PFAPR_M5PFD_MASK
    900                               | FMC_PFAPR_M4PFD_MASK | FMC_PFAPR_M3PFD_MASK | FMC_PFAPR_M2PFD_MASK
    901                               | FMC_PFAPR_M1PFD_MASK | FMC_PFAPR_M0PFD_MASK;    
   \   00000056   0x....             LDR.N    R1,??DataTable11_11  ;; 0x4001f000
   \   00000058   0x6809             LDR      R1,[R1, #+0]
   \   0000005A   0xF451 0x017F      ORRS     R1,R1,#0xFF0000
   \   0000005E   0x....             LDR.N    R2,??DataTable11_11  ;; 0x4001f000
   \   00000060   0x6011             STR      R1,[R2, #+0]
    902              ///设置系统分频器
    903              //MCG=PLL, core = MCG, bus = MCG/2, FlexBus = MCG/2, Flash clock= MCG/4
    904              SIM_CLKDIV1 = SIM_CLKDIV1_OUTDIV1(0) | SIM_CLKDIV1_OUTDIV2(1) 
    905                           | SIM_CLKDIV1_OUTDIV3(1) | SIM_CLKDIV1_OUTDIV4(3);       
   \   00000062   0x....             LDR.N    R1,??DataTable11_13  ;; 0x40048044
   \   00000064   0x....             LDR.N    R2,??DataTable11_12  ;; 0x1130000
   \   00000066   0x600A             STR      R2,[R1, #+0]
    906              
    907              //从新存FMC_PFAPR的原始值
    908              FMC_PFAPR = temp_reg; 
   \   00000068   0x....             LDR.N    R1,??DataTable11_11  ;; 0x4001f000
   \   0000006A   0x6008             STR      R0,[R1, #+0]
    909              
    910              //设置VCO分频器，使能PLL为100MHz, LOLIE=0, PLLS=1, CME=0, VDIV=26
    911              MCG_C6 = MCG_C6_PLLS_MASK | MCG_C6_VDIV(6);  //VDIV = 31 (x55)
   \   0000006C   0x....             LDR.N    R0,??DataTable11_10  ;; 0x40064005
   \   0000006E   0x2146             MOVS     R1,#+70
   \   00000070   0x7001             STRB     R1,[R0, #+0]
    912                                                            //VDIV = 26 (x50)
    913          												  //VDIV = 6 (x30)
    914              while (!(MCG_S & MCG_S_PLLST_MASK)){}; // wait for PLL status bit to set    
   \                     ??pllinit60M_2:
   \   00000072   0x....             LDR.N    R0,??DataTable11_8  ;; 0x40064006
   \   00000074   0x7800             LDRB     R0,[R0, #+0]
   \   00000076   0x0680             LSLS     R0,R0,#+26
   \   00000078   0xD5FB             BPL.N    ??pllinit60M_2
    915              while (!(MCG_S & MCG_S_LOCK_MASK)){}; // Wait for LOCK bit to set    
   \                     ??pllinit60M_3:
   \   0000007A   0x....             LDR.N    R0,??DataTable11_8  ;; 0x40064006
   \   0000007C   0x7800             LDRB     R0,[R0, #+0]
   \   0000007E   0x0640             LSLS     R0,R0,#+25
   \   00000080   0xD5FB             BPL.N    ??pllinit60M_3
    916              
    917              //进入PBE模式    
    918              //通过清零CLKS位来进入PEE模式
    919              // CLKS=0, FRDIV=3, IREFS=0, IRCLKEN=0, IREFSTEN=0
    920              MCG_C1 &= ~MCG_C1_CLKS_MASK;
   \   00000082   0x....             LDR.N    R0,??DataTable11_7  ;; 0x40064000
   \   00000084   0x7800             LDRB     R0,[R0, #+0]
   \   00000086   0xF010 0x003F      ANDS     R0,R0,#0x3F
   \   0000008A   0x....             LDR.N    R1,??DataTable11_7  ;; 0x40064000
   \   0000008C   0x7008             STRB     R0,[R1, #+0]
    921              
    922              //等待时钟状态位更新
    923              while (((MCG_S & MCG_S_CLKST_MASK) >> MCG_S_CLKST_SHIFT) != 0x3){};
   \                     ??pllinit60M_4:
   \   0000008E   0x....             LDR.N    R0,??DataTable11_8  ;; 0x40064006
   \   00000090   0x7800             LDRB     R0,[R0, #+0]
   \   00000092   0xF3C0 0x0081      UBFX     R0,R0,#+2,#+2
   \   00000096   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000098   0x2803             CMP      R0,#+3
   \   0000009A   0xD1F8             BNE.N    ??pllinit60M_4
    924              //SIM_CLKDIV2 |= SIM_CLKDIV2_USBDIV(1);  
    925              
    926                  //设置跟踪时钟为内核时钟
    927              SIM_SOPT2 |= SIM_SOPT2_TRACECLKSEL_MASK;	
   \   0000009C   0x....             LDR.N    R0,??DataTable11_14  ;; 0x40048004
   \   0000009E   0x6800             LDR      R0,[R0, #+0]
   \   000000A0   0xF450 0x5080      ORRS     R0,R0,#0x1000
   \   000000A4   0x....             LDR.N    R1,??DataTable11_14  ;; 0x40048004
   \   000000A6   0x6008             STR      R0,[R1, #+0]
    928              //在PTA6引脚上使能TRACE_CLKOU功能
    929              PORTA_PCR6 = ( PORT_PCR_MUX(0x7));  
   \   000000A8   0x....             LDR.N    R0,??DataTable11_15  ;; 0x40049018
   \   000000AA   0xF44F 0x61E0      MOV      R1,#+1792
   \   000000AE   0x6001             STR      R1,[R0, #+0]
    930              //使能FlexBus模块时钟
    931              SIM_SCGC7 |= SIM_SCGC7_FLEXBUS_MASK;
   \   000000B0   0x....             LDR.N    R0,??DataTable11_16  ;; 0x40048040
   \   000000B2   0x6800             LDR      R0,[R0, #+0]
   \   000000B4   0xF050 0x0001      ORRS     R0,R0,#0x1
   \   000000B8   0x....             LDR.N    R1,??DataTable11_16  ;; 0x40048040
   \   000000BA   0x6008             STR      R0,[R1, #+0]
    932              //在PTA6引脚上使能FB_CLKOUT功能
    933              PORTC_PCR3 = ( PORT_PCR_MUX(0x5));
   \   000000BC   0x....             LDR.N    R0,??DataTable11  ;; 0x4004b00c
   \   000000BE   0xF44F 0x61A0      MOV      R1,#+1280
   \   000000C2   0x6001             STR      R1,[R0, #+0]
    934          }
   \   000000C4   0x4770             BX       LR               ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8:
   \   00000000   0x40048038         DC32     0x40048038

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_1:
   \   00000000   0x40064001         DC32     0x40064001

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_2:
   \   00000000   0x40048034         DC32     0x40048034

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_3:
   \   00000000   0x4007C008         DC32     0x4007c008

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_4:
   \   00000000   0x40064000         DC32     0x40064000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_5:
   \   00000000   0x40064006         DC32     0x40064006

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_6:
   \   00000000   0x40064004         DC32     0x40064004

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_7:
   \   00000000   0x40064005         DC32     0x40064005

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable8_8:
   \   00000000   0x4001F000         DC32     0x4001f000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9:
   \   00000000   0x40048044         DC32     0x40048044

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_1:
   \   00000000   0x40048004         DC32     0x40048004

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_2:
   \   00000000   0x40049018         DC32     0x40049018

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_3:
   \   00000000   0x40048040         DC32     0x40048040

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable9_4:
   \   00000000   0x02270000         DC32     0x2270000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11:
   \   00000000   0x4004B00C         DC32     0x4004b00c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_1:
   \   00000000   0x01170000         DC32     0x1170000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_2:
   \   00000000   0x01150000         DC32     0x1150000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_3:
   \   00000000   0x40048038         DC32     0x40048038

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_4:
   \   00000000   0x40064001         DC32     0x40064001

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_5:
   \   00000000   0x40048034         DC32     0x40048034

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_6:
   \   00000000   0x4007C008         DC32     0x4007c008

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_7:
   \   00000000   0x40064000         DC32     0x40064000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_8:
   \   00000000   0x40064006         DC32     0x40064006

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_9:
   \   00000000   0x40064004         DC32     0x40064004

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_10:
   \   00000000   0x40064005         DC32     0x40064005

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_11:
   \   00000000   0x4001F000         DC32     0x4001f000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_12:
   \   00000000   0x01130000         DC32     0x1130000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_13:
   \   00000000   0x40048044         DC32     0x40048044

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_14:
   \   00000000   0x40048004         DC32     0x40048004

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_15:
   \   00000000   0x40049018         DC32     0x40049018

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable11_16:
   \   00000000   0x40048040         DC32     0x40048040

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
        0  pllinit100M
        0  pllinit125M
        0  pllinit1375M
        0  pllinit144M
        0  pllinit150M
        0  pllinit168d75M
        0  pllinit180M
        0  pllinit207M
        0  pllinit211M
        0  pllinit225M
        0  pllinit60M
        0  pllinit80M


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable11
       4  ??DataTable11_1
       4  ??DataTable11_10
       4  ??DataTable11_11
       4  ??DataTable11_12
       4  ??DataTable11_13
       4  ??DataTable11_14
       4  ??DataTable11_15
       4  ??DataTable11_16
       4  ??DataTable11_2
       4  ??DataTable11_3
       4  ??DataTable11_4
       4  ??DataTable11_5
       4  ??DataTable11_6
       4  ??DataTable11_7
       4  ??DataTable11_8
       4  ??DataTable11_9
       4  ??DataTable8
       4  ??DataTable8_1
       4  ??DataTable8_2
       4  ??DataTable8_3
       4  ??DataTable8_4
       4  ??DataTable8_5
       4  ??DataTable8_6
       4  ??DataTable8_7
       4  ??DataTable8_8
       4  ??DataTable9
       4  ??DataTable9_1
       4  ??DataTable9_2
       4  ??DataTable9_3
       4  ??DataTable9_4
     198  pllinit100M
     198  pllinit125M
     202  pllinit1375M
     202  pllinit144M
     234  pllinit150M
     258  pllinit168d75M
     258  pllinit180M
     258  pllinit207M
     258  pllinit211M
     258  pllinit225M
     198  pllinit60M
     198  pllinit80M

 
 2 844 bytes in section .text
 
 2 844 bytes of CODE memory

Errors: none
Warnings: none
