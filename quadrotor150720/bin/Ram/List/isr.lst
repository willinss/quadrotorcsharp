###############################################################################
#                                                                             #
# IAR ANSI C/C++ Compiler V6.10.1.52143/W32 for ARM     28/Apr/2012  19:46:15 #
# Copyright 1999-2010 IAR Systems AB.                                         #
#                                                                             #
#    Cpu mode     =  thumb                                                    #
#    Endian       =  little                                                   #
#    Source file  =  C:\Documents and Settings\Administrator\iar\Myproject\42 #
#                    8IIC\src\Sources\C\isr.c                                 #
#    Command line =  "C:\Documents and Settings\Administrator\iar\Myproject\4 #
#                    28IIC\src\Sources\C\isr.c" -D IAR -D TWR_K60N512 -lCN    #
#                    "C:\Documents and Settings\Administrator\iar\Myproject\4 #
#                    28IIC\bin\Ram\List\" -lB "C:\Documents and               #
#                    Settings\Administrator\iar\Myproject\428IIC\bin\Ram\List #
#                    \" -o "C:\Documents and Settings\Administrator\iar\Mypro #
#                    ject\428IIC\bin\Ram\Obj\" --no_cse --no_unroll           #
#                    --no_inline --no_code_motion --no_tbaa --no_clustering   #
#                    --no_scheduling --debug --endian=little --cpu=Cortex-M4  #
#                    -e --fpu=None --dlib_config "D:\IAR Systems\Embedded     #
#                    Workbench 6.0\arm\INC\c\DLib_Config_Normal.h" -I         #
#                    "C:\Documents and Settings\Administrator\iar\Myproject\4 #
#                    28IIC\src\Sources\H\" -I "C:\Documents and               #
#                    Settings\Administrator\iar\Myproject\428IIC\src\Sources\ #
#                    H\Component_H\" -I "C:\Documents and                     #
#                    Settings\Administrator\iar\Myproject\428IIC\src\Sources\ #
#                    H\Frame_H\" -Ol --use_c++_inline                         #
#    List file    =  C:\Documents and Settings\Administrator\iar\Myproject\42 #
#                    8IIC\bin\Ram\List\isr.lst                                #
#    Object file  =  C:\Documents and Settings\Administrator\iar\Myproject\42 #
#                    8IIC\bin\Ram\Obj\isr.o                                   #
#                                                                             #
#                                                                             #
###############################################################################

C:\Documents and Settings\Administrator\iar\Myproject\428IIC\src\Sources\C\isr.c
      1          //-------------------------------------------------------------------------*
      2          // 文件名: isr.c                                                           *
      3          // 说  明: 中断处理例程                                                    *
      4          
      5          #include "includes.h"
      6          

   \                                 In section .bss, align 4
      7          uint32 Time_counter = 0;
   \                     Time_counter:
   \   00000000                      DS8 4

   \                                 In section .bss, align 2
      8          uint16 Height = 0;
   \                     Height:
   \   00000000                      DS8 2

   \                                 In section .data, align 4
      9          uint8 readheight[4] = {0x22,0x00,0x00,0x22};
   \                     readheight:
   \   00000000   22000022           DC8 34, 0, 0, 34

   \                                 In section .bss, align 4
     10          float Angle_X = 0, Angle_Y = 0,Angle_Z = 0;
   \                     Angle_X:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     Angle_Y:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     Angle_Z:
   \   00000000                      DS8 4
     11            
     12          //-------------------------------------------------------------------------*
     13          //函数名: uart3_isr                                                        *
     14          //功  能: 串口3数据接收中断例程                                            *
     15          //说  明: 无                                                               *
     16          //-------------------------------------------------------------------------*

   \                                 In section .text, align 4, keep-with-next
     17          void uart0_isr(void)
     18          {
   \                     uart0_isr:
   \   00000000   10B5               PUSH     {R4,LR}
     19            static  uint8 dat[4] = {0};
     20            int16  sum = 0;
   \   00000002   0024               MOVS     R4,#+0
     21            
     22            DisableInterrupts;		//关总中断
   \   00000004   72B6               CPSID i         
     23            
     24            uart_reN(UART0,dat,4);
   \   00000006   0422               MOVS     R2,#+4
   \   00000008   ....               LDR.N    R1,??DataTable3
   \   0000000A   ....               LDR.N    R0,??DataTable3_1  ;; 0x4006a000
   \   0000000C   ........           BL       uart_reN
     25            sum = dat[0] + dat[1] + dat[2];                     // 校验和 
   \   00000010   ....               LDR.N    R0,??DataTable3
   \   00000012   0078               LDRB     R0,[R0, #+0]
   \   00000014   ....               LDR.N    R1,??DataTable3
   \   00000016   4978               LDRB     R1,[R1, #+1]
   \   00000018   51FA80F0           UXTAB    R0,R1,R0
   \   0000001C   ....               LDR.N    R1,??DataTable3
   \   0000001E   8978               LDRB     R1,[R1, #+2]
   \   00000020   50FA81F0           UXTAB    R0,R0,R1
   \   00000024   0400               MOVS     R4,R0
     26            sum &= 0xff;                                        //取校验和的低8位
   \   00000026   E4B2               UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
     27            if(dat[3] == sum)                                   //数据传输无误
   \   00000028   ....               LDR.N    R0,??DataTable3
   \   0000002A   C078               LDRB     R0,[R0, #+3]
   \   0000002C   00B2               SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \   0000002E   24B2               SXTH     R4,R4            ;; SignExt  R4,R4,#+16,#+16
   \   00000030   A042               CMP      R0,R4
   \   00000032   0BD1               BNE.N    ??uart0_isr_0
     28              { 
     29                Height = dat[1];
   \   00000034   ....               LDR.N    R0,??DataTable3
   \   00000036   4078               LDRB     R0,[R0, #+1]
   \   00000038   ....               LDR.N    R1,??DataTable3_2
   \   0000003A   0880               STRH     R0,[R1, #+0]
     30                Height = (Height << 8) | dat[2] ;               //计算高度单位cm
   \   0000003C   ....               LDR.N    R0,??DataTable3_2
   \   0000003E   0088               LDRH     R0,[R0, #+0]
   \   00000040   ....               LDR.N    R1,??DataTable3
   \   00000042   8978               LDRB     R1,[R1, #+2]
   \   00000044   51EA0020           ORRS     R0,R1,R0, LSL #+8
   \   00000048   ....               LDR.N    R1,??DataTable3_2
   \   0000004A   0880               STRH     R0,[R1, #+0]
     31              }  
     32          	
     33            EnableInterrupts;		//开总中断
   \                     ??uart0_isr_0:
   \   0000004C   62B6               CPSIE i         
     34          }
   \   0000004E   10BD               POP      {R4,PC}          ;; return

   \                                 In section .bss, align 4
   \                     ??dat:
   \   00000000                      DS8 4
     35          

   \                                 In section .text, align 4, keep-with-next
     36          void uart1_isr(void)
     37          {
   \                     uart1_isr:
   \   00000000   80B5               PUSH     {R7,LR}
     38              uint8 ch;
     39              DisableInterrupts;		//关总中断
   \   00000002   72B6               CPSID i         
     40              //接收一个字节数据并回发
     41          	uart_re1 (UART1,&ch);
   \   00000004   00A9               ADD      R1,SP,#+0
   \   00000006   ....               LDR.N    R0,??DataTable3_3  ;; 0x4006b000
   \   00000008   ........           BL       uart_re1
     42                    if(ch == 0x05)
   \   0000000C   9DF80000           LDRB     R0,[SP, #+0]
   \   00000010   0528               CMP      R0,#+5
   \   00000012   11D1               BNE.N    ??uart1_isr_0
     43                    {set_pwm(1000,1000,1000,1000);
   \   00000014   4FF47A73           MOV      R3,#+1000
   \   00000018   4FF47A72           MOV      R2,#+1000
   \   0000001C   4FF47A71           MOV      R1,#+1000
   \   00000020   4FF47A70           MOV      R0,#+1000
   \   00000024   ........           BL       set_pwm
     44                     
     45                     for(;;)
     46                     { hw_gpio_reverse(PORT_A,15);
   \                     ??uart1_isr_1:
   \   00000028   0F21               MOVS     R1,#+15
   \   0000002A   0020               MOVS     R0,#+0
   \   0000002C   ........           BL       hw_gpio_reverse
     47                       Delay_Nms(50);
   \   00000030   ....               LDR.N    R0,??DataTable3_4  ;; 0x42480000
   \   00000032   ........           BL       Delay_Nms
   \   00000036   F7E7               B.N      ??uart1_isr_1
     48                     }
     49                    }	
     50          	EnableInterrupts;		//开总中断
   \                     ??uart1_isr_0:
   \   00000038   62B6               CPSIE i         
     51          }
   \   0000003A   01BD               POP      {R0,PC}          ;; return
     52          

   \                                 In section .text, align 4, keep-with-next
     53          void uart3_isr(void)
     54          {
   \                     uart3_isr:
   \   00000000   80B5               PUSH     {R7,LR}
     55              uint8 ch;
     56              DisableInterrupts;		//关总中断
   \   00000002   72B6               CPSID i         
     57              //接收一个字节数据并回发
     58          	if(uart_re1 (UART3,&ch))
   \   00000004   00A9               ADD      R1,SP,#+0
   \   00000006   ....               LDR.N    R0,??DataTable3_5  ;; 0x4006d000
   \   00000008   ........           BL       uart_re1
   \   0000000C   0028               CMP      R0,#+0
   \   0000000E   04D0               BEQ.N    ??uart3_isr_0
     59          		uart_send1(UART3,ch);
   \   00000010   9DF80010           LDRB     R1,[SP, #+0]
   \   00000014   ....               LDR.N    R0,??DataTable3_5  ;; 0x4006d000
   \   00000016   ........           BL       uart_send1
     60          	EnableInterrupts;		//开总中断
   \                     ??uart3_isr_0:
   \   0000001A   62B6               CPSIE i         
     61          }
   \   0000001C   01BD               POP      {R0,PC}          ;; return
     62          
     63          //==========================================================================
     64          //函数名称：pit0_isr                                                        
     65          //功能概要：中断例程                                                
     66          //参数说明：无       
     67          //函数返回：无                                                                  
     68          //==========================================================================

   \                                 In section .text, align 4, keep-with-next
     69          void pit0_isr(void)
     70          { 
   \                     pit0_isr:
   \   00000000   80B5               PUSH     {R7,LR}
     71            
     72            DisableInterrupts;	                  //关总中断 
   \   00000002   72B6               CPSID i         
     73            Time_counter ++ ;
   \   00000004   ....               LDR.N    R0,??DataTable3_6
   \   00000006   0068               LDR      R0,[R0, #+0]
   \   00000008   401C               ADDS     R0,R0,#+1
   \   0000000A   ....               LDR.N    R1,??DataTable3_6
   \   0000000C   0860               STR      R0,[R1, #+0]
     74            
     75          
     76            if((PIT_TFLG(0)&PIT_TFLG_TIF_MASK)!=0)
   \   0000000E   ....               LDR.N    R0,??DataTable3_7  ;; 0x4003710c
   \   00000010   0068               LDR      R0,[R0, #+0]
   \   00000012   C007               LSLS     R0,R0,#+31
   \   00000014   34D5               BPL.N    ??pit0_isr_0
     77            {            
     78              read_ADXL345();
   \   00000016   ........           BL       read_ADXL345
     79              read_L3G4200D(); 
   \   0000001A   ........           BL       read_L3G4200D
     80              uart_sendN (UART0 ,readheight,4);                 //发送高度测量信息
   \   0000001E   0422               MOVS     R2,#+4
   \   00000020   ....               LDR.N    R1,??DataTable3_8
   \   00000022   ....               LDR.N    R0,??DataTable3_1  ;; 0x4006a000
   \   00000024   ........           BL       uart_sendN
     81            if(Time_counter >= COUNTER)//数据初始化完成开始
   \   00000028   ....               LDR.N    R0,??DataTable3_6
   \   0000002A   0068               LDR      R0,[R0, #+0]
   \   0000002C   4FF47A71           MOV      R1,#+1000
   \   00000030   8842               CMP      R0,R1
   \   00000032   1FD3               BCC.N    ??pit0_isr_1
     82               {
     83                  Angle_X = Kalman_Filter(Angle_accx,-Dot_gyro_y);
   \   00000034   ....               LDR.N    R0,??DataTable3_9
   \   00000036   0168               LDR      R1,[R0, #+0]
   \   00000038   91F00041           EORS     R1,R1,#0x80000000
   \   0000003C   ....               LDR.N    R0,??DataTable3_10
   \   0000003E   0068               LDR      R0,[R0, #+0]
   \   00000040   ........           BL       Kalman_Filter
   \   00000044   ....               LDR.N    R1,??DataTable3_11
   \   00000046   0860               STR      R0,[R1, #+0]
     84                  Angle_Y = Kalman_Filter1(Angle_accy,Dot_gyro_x);
   \   00000048   ....               LDR.N    R0,??DataTable3_12
   \   0000004A   0168               LDR      R1,[R0, #+0]
   \   0000004C   ....               LDR.N    R0,??DataTable3_13
   \   0000004E   0068               LDR      R0,[R0, #+0]
   \   00000050   ........           BL       Kalman_Filter1
   \   00000054   ....               LDR.N    R1,??DataTable3_14
   \   00000056   0860               STR      R0,[R1, #+0]
     85                  Angle_Z = Angle_gyroz;
   \   00000058   ....               LDR.N    R0,??DataTable3_15
   \   0000005A   ....               LDR.N    R1,??DataTable3_16
   \   0000005C   0968               LDR      R1,[R1, #+0]
   \   0000005E   0160               STR      R1,[R0, #+0]
     86                  //Quadrotor_pid(Angle_X,Angle_Y,Angle_Z,Height );
     87                  set_pwm(1100,1100,1100,1100);
   \   00000060   40F24C43           MOVW     R3,#+1100
   \   00000064   40F24C42           MOVW     R2,#+1100
   \   00000068   40F24C41           MOVW     R1,#+1100
   \   0000006C   40F24C40           MOVW     R0,#+1100
   \   00000070   ........           BL       set_pwm
     88               }
     89           
     90              PIT_TFLG(0)|=PIT_TFLG_TIF_MASK;       //清标志
   \                     ??pit0_isr_1:
   \   00000074   ....               LDR.N    R0,??DataTable3_7  ;; 0x4003710c
   \   00000076   0068               LDR      R0,[R0, #+0]
   \   00000078   50F00100           ORRS     R0,R0,#0x1
   \   0000007C   ....               LDR.N    R1,??DataTable3_7  ;; 0x4003710c
   \   0000007E   0860               STR      R0,[R1, #+0]
     91            }
     92            enable_pit_interrupt(0);
   \                     ??pit0_isr_0:
   \   00000080   0020               MOVS     R0,#+0
   \   00000082   ........           BL       enable_pit_interrupt
     93            EnableInterrupts;		          //开总中断
   \   00000086   62B6               CPSIE i         
     94          }
   \   00000088   01BD               POP      {R0,PC}          ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3:
   \   00000000   ........           DC32     ??dat

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_1:
   \   00000000   00A00640           DC32     0x4006a000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_2:
   \   00000000   ........           DC32     Height

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_3:
   \   00000000   00B00640           DC32     0x4006b000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_4:
   \   00000000   00004842           DC32     0x42480000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_5:
   \   00000000   00D00640           DC32     0x4006d000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_6:
   \   00000000   ........           DC32     Time_counter

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_7:
   \   00000000   0C710340           DC32     0x4003710c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_8:
   \   00000000   ........           DC32     readheight

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_9:
   \   00000000   ........           DC32     Dot_gyro_y

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_10:
   \   00000000   ........           DC32     Angle_accx

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_11:
   \   00000000   ........           DC32     Angle_X

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_12:
   \   00000000   ........           DC32     Dot_gyro_x

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_13:
   \   00000000   ........           DC32     Angle_accy

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_14:
   \   00000000   ........           DC32     Angle_Y

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_15:
   \   00000000   ........           DC32     Angle_Z

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_16:
   \   00000000   ........           DC32     Angle_gyroz
     95          

   Maximum stack usage in bytes:

     Function  .cstack
     --------  -------
     pit0_isr       8
     uart0_isr      8
     uart1_isr      8
     uart3_isr      8


   Section sizes:

     Function/Label  Bytes
     --------------  -----
     Time_counter       4
     Height             2
     readheight         4
     Angle_X            4
     Angle_Y            4
     Angle_Z            4
     uart0_isr         80
     dat                4
     uart1_isr         60
     uart3_isr         30
     pit0_isr         138
     ??DataTable3       4
     ??DataTable3_1     4
     ??DataTable3_2     4
     ??DataTable3_3     4
     ??DataTable3_4     4
     ??DataTable3_5     4
     ??DataTable3_6     4
     ??DataTable3_7     4
     ??DataTable3_8     4
     ??DataTable3_9     4
     ??DataTable3_10    4
     ??DataTable3_11    4
     ??DataTable3_12    4
     ??DataTable3_13    4
     ??DataTable3_14    4
     ??DataTable3_15    4
     ??DataTable3_16    4

 
  22 bytes in section .bss
   4 bytes in section .data
 376 bytes in section .text
 
 376 bytes of CODE memory
  26 bytes of DATA memory

Errors: none
Warnings: none
